#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# function Weight of evidence / information gain apply on new data
#
# INPUT:
# --------------------------------------------------
# X              ---
# Y              ---
# entropyMatrix  ---
# --------------------------------------------------
#
# OUTPUT:
# ------------------------------------------------
# F              Weighted X matrix where the entropy mask is applied
# ------------------------------------------------

m_WoEApply = function(Matrix[Double] X, Matrix[Double] Y, Matrix[Double] entropyMatrix)
return (Matrix[Double] F) {
  F = matrix(1, nrow(X), ncol(X)) # allocate dense output matrix
  for(i in 1:ncol(X))
  {
    if(sum(abs(entropyMatrix[i])) > 0)
    {
      L = replace(target=X[, i], pattern=NaN, replacement=1)
      idx = min(ncol(entropyMatrix), max(L))
      entropy = entropyMatrix[i, 1:idx]
      resp = matrix(0, nrow(L), idx)
      resp = (resp + t(seq(1, idx))) == L
      resp = resp * entropy
      F[, i] = rowSums(resp)
    }  
  }
  
}

