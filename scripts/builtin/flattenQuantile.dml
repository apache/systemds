#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# Returns the quantiles requested, but treating the input matrix X as a flattened matrix
# to return quantiles of all cells as if it was a continuous allocation.
#
# INPUT:
# --------------------------------------------------------------------------------
# X      Matrix with values to extract quantiles from.
# P      Quantiles to extract as well if empty matrix not calculated
# --------------------------------------------------------------------------------
#
# OUTPUT:
# -----------------------------------------------------------------------------------------------
# Q      Quantiles calculated
# -----------------------------------------------------------------------------------------------

m_flattenQuantile = function(Matrix[Double] X, Matrix[Double] P)
  return (Matrix[Double] Q){
  Q = matrix(0, rows=0, cols=0)
  if(nrow(P) > 0){ # calculate the quantiles
   flatten_X = matrix(X, nrow(X) * ncol(X), 1)
   quantile_X = quantile(flatten_X, P)
   Q = t(quantile_X)
  }
}
