#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# Related to [SYSTEMDS-2662] dependency function for cleaning pipelines
# Built-in for sorting frames
#
# INPUT:
# -------------------------------------------------------------------------------------
# F     Data frame of string values
# mask  matrix for identifying string columns
# -------------------------------------------------------------------------------------
#
# OUTPUT:
# -----------------------------------------------------------------------------------------
# f_ordered  sorted dataset by column 1 in decreasing order
# -----------------------------------------------------------------------------------------

s_frameSort = function(Frame[String] F, Matrix[Double] mask, Boolean orderDesc = TRUE)
return (Frame[String] f_ordered)
{
  index = vectorToCsv(mask)
  # recode logical pipelines for easy handling
  jspecR = "{ids:true, recode:["+index+"]}";
  [X, M] = transformencode(target=F, spec=jspecR);
  ordered = order(target = X, by = 1, decreasing=orderDesc, index.return=FALSE)
  f_ordered = transformdecode(target=ordered, spec=jspecR, meta=M);
}
