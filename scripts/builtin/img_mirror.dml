#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# This function is an image data augmentation function.
# It flips an image on the X (horizontal) or Y (vertical) axis.
#
# .. code-block:: python
#
#   >>> import numpy as np
#   >>> from systemds.context import SystemDSContext
#   >>> from systemds.operator.algorithm import img_mirror
#   >>> 
#   >>> with SystemDSContext() as sds:
#   ...     img = sds.from_numpy(
#   ...         np.array([[ 10., 20., 30.],
#   ...                   [ 40., 50., 60.],
#   ...                   [ 70., 80., 90.]], dtype=np.float32)
#   ...     )
#   ...     result_img = img_mirror(img, False).compute()
#   ...     print(result_img)
#   [[30. 20. 10.]
#    [60. 50. 40.]
#    [90. 80. 70.]]
#
#
# INPUT:
# ---------------------------------------------------------------------------------------------
# img_in            Input image as 2D matrix with top left corner at [1, 1]
# horizontal_axis   Flip either in X or Y axis
# ---------------------------------------------------------------------------------------------
#
# OUTPUT:
# -------------------------------------------------------------------------------------------
# img_out  Flipped matrix/image
# -------------------------------------------------------------------------------------------

m_img_mirror = function(Matrix[Double] img_in, Boolean horizontal_axis) return (Matrix[Double] img_out) {
  # flip an image on the x (horizontal) or y (vertical) axis
  if( horizontal_axis)
    img_out = rev(img_in)
  else
    img_out = t(rev(t(img_in)))
}
