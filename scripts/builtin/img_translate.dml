#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# The Image Translate function translates the image.
# Optionally resizes the image (without scaling).
# Uses nearest neighbor sampling.
#
# INPUT:
# ----------------------------------------------------------------------------------------------
# img      Input image as 2D matrix with top left corner at [1, 1]
# offsetX  The distance to move the image in x direction
# offsetY  The distance to move the image in y direction
# w        Width of the output image
# h        Height of the output image
# value    The background of the image
# ----------------------------------------------------------------------------------------------
#
# OUTPUT:
# --------------------------------------------------------------------------------------------
# img_out  Output image as 2D matrix with top left corner at [1, 1]
# --------------------------------------------------------------------------------------------

m_img_translate = function(Matrix[Double] img, Double offsetX, Double offsetY, Integer w, Integer h, Double value)
 return (Matrix[Double] img_out) {
  w_in = ncol(img)
  h_in = nrow(img)

  # round to nearest integer as fraction is irrelevant for nearest neighbor sampling
  offset_x = round(offsetX)
  offset_y = round(offsetY)

  # index range in input image
  start_x = 1 - offset_x
  start_y = 1 - offset_y
  end_x = max(w_in , w) - offset_x
  end_y = max(h_in, h) - offset_y

  # clip copy region to left and top of input image
  if (start_x < 1)
    start_x = 1
  if (start_y < 1)
    start_y = 1

  # clip copy region to right and bottom of input image
  if (w_in < end_x)
    end_x = w_in
  if (h_in < end_y)
    end_y = h_in

  # clip copy region to right and bottom of output image
  if (w < end_x + offset_x)
    end_x = w - offset_x
  if (h < end_y + offset_y)
    end_y = h - offset_y

  img_out = matrix(value, rows=h, cols=w)
  if (start_x < end_x & start_y < end_y) {
    img_out[(start_y+offset_y):(end_y+offset_y), (start_x+offset_x):(end_x+offset_x)] = img[start_y:end_y, start_x:end_x]
  }
}
