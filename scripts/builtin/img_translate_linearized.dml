#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# This function has  the same functionality with img_translate but it handles multiple images at
# the same time. Each row of the input and output matrix represents a linearized image/matrix
# It translates the image and Optionally resizes the image (without scaling).
# INPUT:
# ----------------------------------------------------------------------------------------------
# img       Input matrix/image (every row represents a linearized matrix/image)
# offsetX   The distance to move the image in x direction
# offsetY   The distance to move the image in y direction
# w         Width of the output image
# h         Height of the output image
# value     The background of the image
# sW        Width of the original 2D images
# sH        Height of the original 2D images
# --------------------------------------------------------------------------------------------
#
# OUTPUT:
# --------------------------------------------------------------------------------------------
# img_out   Output matrix/image  (every row represents a linearized matrix/image)
# --------------------------------------------------------------------------------------------

m_img_translate_linearized = function(Matrix[Double] img, Double offsetX,
Double offsetY,Integer w, Integer h, Double value, Integer sW, Integer sH)
return (Matrix[Double] img_out) {
  offsetX = round(offsetX)
  offsetY = round(offsetY)
  img_out = matrix(value, rows=nrow(img), cols=w * h)
       parfor(y in 1:h,check=0) {
         for (x in 1:w) {
        src_x = x - offsetX
        src_y = y - offsetY
        if (src_x >= 1 & src_x <= sW & src_y >= 1 & src_y <= sH) {
          start_index = (src_y - 1) * sW + src_x
          dest_index = (y - 1) * w + x
    
          if (start_index >= 1 & start_index <= ncol(img) & dest_index >= 1 & dest_index <= ncol(img_out)) {
            img_out[, dest_index] = img[, start_index]
          }  
        }
      }
    }
}


