#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# The lmPredict-function predicts the class of a feature vector
#
# INPUT:
# --------------------------------------------------------------------------------------
# X          Matrix of feature vectors
# B          1-column matrix of weights.
# Ytest      test labels, used only for verbose output. can be set to matrix(0,1,1)
#            if verbose output is not wanted
# intercept  Intercept presence, shifting and rescaling the columns of X
# verbose    If TRUE print messages are activated
# --------------------------------------------------------------------------------------
#
# OUTPUT:
# -----------------------------------------------------------------------------------
# yhat       1-column matrix of classes
# -----------------------------------------------------------------------------------

m_lmPredict = function(Matrix[Double] X, Matrix[Double] B, 
  Matrix[Double] Ytest = matrix(0,1,1), Integer intercept = 0, Boolean verbose = FALSE)
  return (Matrix[Double] yhat)
{
  intercept = ifelse(intercept>0 | ncol(X)+1==nrow(B), as.scalar(B[nrow(B),]), 0);
  yhat = X %*% B[1:ncol(X),] + intercept;

  if( verbose )
    lmPredictStats(yhat, Ytest, TRUE);
}
