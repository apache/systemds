#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# The naiveBaysePredict-function predicts the scoring with a naive Bayes model.
#
# INPUT:
# ---------------------------------------------------------------------------------------
# X     Matrix of test data with N rows.
# P     Class priors, One dimensional column matrix with N rows.
# C     Class conditional probabilities, matrix with N rows
# ---------------------------------------------------------------------------------------
#
# OUTPUT:
# ---------------------------------------------------------------------------------------
# Y     A matrix containing the top-K item-ids with highest predicted ratings.
# YRaw  A matrix containing predicted ratings.
# ---------------------------------------------------------------------------------------

m_naiveBayesPredict = function(Matrix[Double] X, Matrix[Double] P, Matrix[Double] C)
 return (Matrix[Double] YRaw, Matrix[Double] Y)
{
  numRows = nrow(X)
  model = cbind(C, P)

  ones = matrix(1, rows=numRows, cols=1);
  X_w_ones = cbind(X, ones);
  YRaw = X_w_ones %*% t(log(model));
  Y = rowIndexMax(YRaw);
}
