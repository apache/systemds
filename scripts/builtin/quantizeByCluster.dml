#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# Builtin function that implements product quantization
#
# INPUT:
# ---------------------------------------------------------------------------------------
# X     The input Matrix to perform product quantization on.
# M     The size of the subvectors.
# ---------------------------------------------------------------------------------------
#
# OUTPUT:
# ---------------------------------------------------------------
# codebook     The matrix containing the centroids
# codes     The mapping of vectors to centroids
# ---------------------------------------------------------------

m_quantizeByCluster = function(Matrix[Double]X, Integer M = 4, Integer k = 10, Integer runs = 10,
    Integer max_iter = 1000, Double eps = 1e-6, Integer avg_sample_size_per_centroid = 50, Integer seed = -1)
  return(Matrix[Double] codebook, Matrix[Double] codes)
{
num_chunks = ncol(X) / M
A = matrix(X, rows= nrow(X) * num_chunks, cols=M)
[codebook, B] = kmeans(A, k, runs, max_iter, eps, FALSE, avg_sample_size_per_centroid * M, seed)
codes = matrix(B, rows = nrow(B) / num_chunks, cols = ncol(B) * num_chunks)
}
