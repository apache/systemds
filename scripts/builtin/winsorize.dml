#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# The winsorize-function removes outliers from the data. It does so by computing upper and
# lower quartile range of the given data then it replaces any value that falls outside this range
# (less than lower quartile range or more than upper quartile range).
#
# INPUT:
# -----------------------------------------------------------------------------------------
# X            Input feature matrix
# verbose      To print output on screen
# -----------------------------------------------------------------------------------------
#
# OUTPUT:
# -----------------------------------------------------------------------------------
# Y      Matrix without outlier values
# -----------------------------------------------------------------------------------

m_winsorize = function(Matrix[Double] X, Double ql = 0.05, Double qu = 0.95, Boolean verbose) 
return (Matrix[Double] Y, Matrix[Double] qLower, Matrix[Double] qUpper) {
  qLower = matrix(0, rows=1, cols=ncol(X))
  qUpper = matrix(0, rows=1, cols=ncol(X))
  Xtemp = replace(target=X, pattern=NaN, replacement=0)
  parfor(i in 1:ncol(X), check=0) {
    qLower[1,i] = quantile(Xtemp[,i], ql)
    qUpper[1,i] = quantile(Xtemp[,i], qu)
  }
  Y = winsorizeApply(X, qLower, qUpper)
}

