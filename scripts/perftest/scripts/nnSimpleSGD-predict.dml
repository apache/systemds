#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------
# Imports
source("../../nn/layers/affine.dml") as affine
source("../../nn/layers/l2_loss.dml") as l2_loss
source("../../nn/layers/relu.dml") as relu
source("../../nn/optim/sgd.dml") as sgd

# read input data
X = read($X)
Y = read($Y)


# Create 2-layer network based on read params:
## affine1 -> relu1 -> affine2
W1 = read(""+$B+"/w1_simple_sgd")
W2 = read(""+$B+"/w2_simple_sgd")
b1 = read(""+$B+"/b1_simple_sgd")
b2 = read(""+$B+"/b2_simple_sgd")

# make prediction for given X
out1 = affine::forward(X, W1, b1)
outr1 = relu::forward(out1)
out2 = affine::forward(outr1, W2, b2)

# check accuracy
loss = l2_loss::forward(out2, Y)

print("Got loss of " + loss)