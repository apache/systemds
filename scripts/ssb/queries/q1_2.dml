# DML-script implementing the ssb query Q1.2 in SystemDS.
/*


*/

# -- SOURCING THE RA-FUNCTIONS --
source("./scripts/builtin/raSelection.dml") as raSel
source("./scripts/builtin/raJoin.dml") as raJoin

# -- READING INPUT FILES --
# CSV TABLES
date_csv = read("./data/date.tbl", data_type="frame", format="csv", header=FALSE, sep="|");
lineorder_csv = read("./data/lineorder3.tbl", data_type="frame", format="csv", header=FALSE, sep="|");

# META DATA
date_meta = read("./data/meta/date_meta.csv", data_type="frame", format="csv", header=FALSE, sep="|");


# -- PREPARING --
# EXTRACTING MINIMAL DATE DATA TO OPTIMIZE RUNTIME => COL-1 : DATE-KEY | COL-7 : D_YEARMONTH
date_csv_min = cbind(date_csv[, 1], date_csv[, 7]);
date_enc_meta = cbind(date_meta[, 1], date_meta[, 7]);
date_spec_min = "{ \"recode\": [\"C2\"] }";
date_min_matrix = transformapply(target= date_csv_min, meta=date_enc_meta, spec=date_spec_min);

# EXTRACTING MINIMAL LINEORDER DATA TO OPTIMIZE RUNTIME => COL-6 : LO_ORDERDATE |
# COL-9 : LO_QUANTITY | COL-10 : LO_EXTPRICE |Â COL-12 : LO_DISCOUNT
lineorder_csv_min = cbind(lineorder_csv[, 6], lineorder_csv[, 9], lineorder_csv[, 10], lineorder_csv[, 12]);
lineorder_min_matrix = as.matrix(lineorder_csv_min);


# -- FILTERING THE DATA WITH RA-SELECTION FUNCTION --
# D_YEARMONTH = 'Jan1994' : 25 (MAPPED VALUE)
d_year_filt = raSel::m_raSelection(date_min_matrix, col=2, op="==", val=25); #COL 2 : D_YEARMONTH

# LO_QUANTITY BETWEEN 26 AND 35
lo_quan_filt = raSel::m_raSelection(lineorder_min_matrix, col=2, op=">=", val=26);
lo_quan_filt = raSel::m_raSelection(lo_quan_filt, col=2, op="<=", val=35);

# LO_DISCOUNT BETWEEN 4 AND 6
lo_quan_disc_filt = raSel::m_raSelection(lo_quan_filt, col=4, op=">=", val=4);
lo_quan_disc_filt = raSel::m_raSelection(lo_quan_disc_filt, col=4, op="<=", val=6);


# -- JOIN TABLES WITH RA-JOIN FUNCTION --
# JOINING FILTERED LINEORDER TABLE WITH FILTERED DATE TABLE WHERE LO_ORDERDATE = D_DATEKEY
joined_matrix = raJoin::m_raJoin(A=lo_quan_disc_filt, colA=1, B=d_year_filt, colB=1, method="sort-merge");
#print("LO-DATE JOINED.");


# -- AGGREGATION --
lo_extprice = joined_matrix[, 3];		#LO_EXTPRICE : 3 COLUMN OF JOINED-MATRIX
lo_disc = joined_matrix[, 4];			#LO_DISCOUNT : 4 COLUMN OF JOINED-MATRIX
revenue = sum(lo_extprice * lo_disc);

print("REVENUE: " + as.integer(revenue));

#print("Q1.2 finished.\n");

