#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


X = read("data/Adult_X.csv")
y = read("data/Adult_y.csv")
B = read("data/Adult_W.csv")

[Xtrain,Xtest,ytrain,ytest] = split(X=X,Y=y,f=0.7,cont=FALSE,seed=7)

X = Xtrain;
y = ytrain;

S = matrix(1, rows=nrow(X), cols=1)
w = B[1:ncol(X), ];
icpt = as.scalar(B[nrow(B),])

maxiter = 500;
i = 0
lr = 15
lrdecay = 1.05
reg = 0.75
reg_thr = 0.85

y = y==1;
while (i < maxiter) {
  z = X %*% w + icpt
  ht = sigmoid(z) #yhat
  obj = -1/nrow(X) * sum(y*log(ht) + (1-y)*log(1-ht))
        + 0.5 * reg * as.scalar(t(S)%*%S)
  grad_w = (t(X) %*% ((S>reg_thr)*(ht-y))) / sum(S>reg_thr)
  grad_s = reg*S + 4*reg*(abs(ht-y)-0.5);

  print("Iteration "+i+": obj="+obj+" grad="+sum(grad_w)+" S="+sum(S)+" "+sum(S>reg_thr))
  w = w - lr * grad_w;
  if( i > 100 )
    S = min(max(S - lr * grad_s, 0), 1);
  i = i+1
  lr = lr/lrdecay
}
y = y+2*(y==0);


[M,yhat,acc] = multiLogRegPredict(X=X, B=w, Y=y, verbose=TRUE);
[M,yhat,acc] = multiLogRegPredict(X=Xtest, B=w, Y=ytest, verbose=TRUE);

Xtrain2 = removeEmpty(target=X, margin="rows", select=(S>reg_thr));
ytrain2 = removeEmpty(target=y, margin="rows", select=(S>reg_thr));

print("Model training on sample "+nrow(Xtrain2))
print(" -- with labels 1: "+sum(ytrain2==1)+", 2: "+sum(ytrain2==2))
B = multiLogReg(X=Xtrain2, Y=ytrain2, maxii=50, icpt=0, reg=0.001, verbose=TRUE);
[M,yhat,acc] = multiLogRegPredict(X=Xtrain2, B=B, Y=ytrain2, verbose=TRUE);
[M,yhat,acc] = multiLogRegPredict(X=Xtest, B=B, Y=ytest, verbose=TRUE);

