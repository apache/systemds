//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30978841
// Cuda compilation tools, release 11.6, V11.6.112
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_52
.address_size 64

	// .globl	double2float_f
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.extern .shared .align 16 .b8 memory[];
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.global .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};
.global .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry double2float_f(
	.param .u64 double2float_f_param_0,
	.param .u64 double2float_f_param_1,
	.param .u32 double2float_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [double2float_f_param_0];
	ld.param.u64 	%rd2, [double2float_f_param_1];
	ld.param.u32 	%r2, [double2float_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvt.rn.f32.f64 	%f1, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB0_2:
	ret;

}
	// .globl	float2double_f
.visible .entry float2double_f(
	.param .u64 float2double_f_param_0,
	.param .u64 float2double_f_param_1,
	.param .u32 float2double_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [float2double_f_param_0];
	ld.param.u64 	%rd2, [float2double_f_param_1];
	ld.param.u32 	%r2, [float2double_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.f64.f32 	%fd1, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB1_2:
	ret;

}
	// .globl	cumulative_sum_up_sweep_d
.visible .entry cumulative_sum_up_sweep_d(
	.param .u64 cumulative_sum_up_sweep_d_param_0,
	.param .u64 cumulative_sum_up_sweep_d_param_1,
	.param .u32 cumulative_sum_up_sweep_d_param_2,
	.param .u32 cumulative_sum_up_sweep_d_param_3,
	.param .u32 cumulative_sum_up_sweep_d_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_sum_up_sweep_d_param_0];
	ld.param.u64 	%rd2, [cumulative_sum_up_sweep_d_param_1];
	ld.param.u32 	%r7, [cumulative_sum_up_sweep_d_param_2];
	ld.param.u32 	%r8, [cumulative_sum_up_sweep_d_param_3];
	ld.param.u32 	%r9, [cumulative_sum_up_sweep_d_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB2_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB2_4;

$L__BB2_3:
	mul.wide.s32 	%rd6, %r19, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd5, [%rd7];
	add.f64 	%fd7, %fd7, %fd5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB2_3;

$L__BB2_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd7;

$L__BB2_5:
	ret;

}
	// .globl	cumulative_sum_up_sweep_f
.visible .entry cumulative_sum_up_sweep_f(
	.param .u64 cumulative_sum_up_sweep_f_param_0,
	.param .u64 cumulative_sum_up_sweep_f_param_1,
	.param .u32 cumulative_sum_up_sweep_f_param_2,
	.param .u32 cumulative_sum_up_sweep_f_param_3,
	.param .u32 cumulative_sum_up_sweep_f_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_sum_up_sweep_f_param_0];
	ld.param.u64 	%rd2, [cumulative_sum_up_sweep_f_param_1];
	ld.param.u32 	%r7, [cumulative_sum_up_sweep_f_param_2];
	ld.param.u32 	%r8, [cumulative_sum_up_sweep_f_param_3];
	ld.param.u32 	%r9, [cumulative_sum_up_sweep_f_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB3_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB3_4;

$L__BB3_3:
	mul.wide.s32 	%rd6, %r19, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f5, [%rd7];
	add.f32 	%f7, %f7, %f5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB3_3;

$L__BB3_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f7;

$L__BB3_5:
	ret;

}
	// .globl	cumulative_sum_down_sweep_d
.visible .entry cumulative_sum_down_sweep_d(
	.param .u64 cumulative_sum_down_sweep_d_param_0,
	.param .u64 cumulative_sum_down_sweep_d_param_1,
	.param .u64 cumulative_sum_down_sweep_d_param_2,
	.param .u32 cumulative_sum_down_sweep_d_param_3,
	.param .u32 cumulative_sum_down_sweep_d_param_4,
	.param .u32 cumulative_sum_down_sweep_d_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_sum_down_sweep_d_param_0];
	ld.param.u64 	%rd5, [cumulative_sum_down_sweep_d_param_1];
	ld.param.u64 	%rd3, [cumulative_sum_down_sweep_d_param_2];
	ld.param.u32 	%r7, [cumulative_sum_down_sweep_d_param_3];
	ld.param.u32 	%r8, [cumulative_sum_down_sweep_d_param_4];
	ld.param.u32 	%r9, [cumulative_sum_down_sweep_d_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB4_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f64 	%fd9, 0d0000000000000000;
	@%p2 bra 	$L__BB4_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd9, [%rd8];

$L__BB4_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd7, [%rd10];
	add.f64 	%fd10, %fd9, %fd7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f64 	[%rd11], %fd10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB4_6;

$L__BB4_5:
	mul.wide.s32 	%rd12, %r20, 8;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f64 	%fd8, [%rd13];
	add.f64 	%fd10, %fd10, %fd8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f64 	[%rd14], %fd10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB4_5;

$L__BB4_6:
	ret;

}
	// .globl	cumulative_sum_down_sweep_f
.visible .entry cumulative_sum_down_sweep_f(
	.param .u64 cumulative_sum_down_sweep_f_param_0,
	.param .u64 cumulative_sum_down_sweep_f_param_1,
	.param .u64 cumulative_sum_down_sweep_f_param_2,
	.param .u32 cumulative_sum_down_sweep_f_param_3,
	.param .u32 cumulative_sum_down_sweep_f_param_4,
	.param .u32 cumulative_sum_down_sweep_f_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_sum_down_sweep_f_param_0];
	ld.param.u64 	%rd5, [cumulative_sum_down_sweep_f_param_1];
	ld.param.u64 	%rd3, [cumulative_sum_down_sweep_f_param_2];
	ld.param.u32 	%r7, [cumulative_sum_down_sweep_f_param_3];
	ld.param.u32 	%r8, [cumulative_sum_down_sweep_f_param_4];
	ld.param.u32 	%r9, [cumulative_sum_down_sweep_f_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB5_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f32 	%f9, 0f00000000;
	@%p2 bra 	$L__BB5_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f9, [%rd8];

$L__BB5_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f7, [%rd10];
	add.f32 	%f10, %f9, %f7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f32 	[%rd11], %f10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB5_6;

$L__BB5_5:
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f32 	%f8, [%rd13];
	add.f32 	%f10, %f10, %f8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f32 	[%rd14], %f10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB5_5;

$L__BB5_6:
	ret;

}
	// .globl	cumulative_prod_up_sweep_d
.visible .entry cumulative_prod_up_sweep_d(
	.param .u64 cumulative_prod_up_sweep_d_param_0,
	.param .u64 cumulative_prod_up_sweep_d_param_1,
	.param .u32 cumulative_prod_up_sweep_d_param_2,
	.param .u32 cumulative_prod_up_sweep_d_param_3,
	.param .u32 cumulative_prod_up_sweep_d_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_prod_up_sweep_d_param_0];
	ld.param.u64 	%rd2, [cumulative_prod_up_sweep_d_param_1];
	ld.param.u32 	%r7, [cumulative_prod_up_sweep_d_param_2];
	ld.param.u32 	%r8, [cumulative_prod_up_sweep_d_param_3];
	ld.param.u32 	%r9, [cumulative_prod_up_sweep_d_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB6_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB6_4;

$L__BB6_3:
	mul.wide.s32 	%rd6, %r19, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd5, [%rd7];
	mul.f64 	%fd7, %fd7, %fd5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB6_3;

$L__BB6_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd7;

$L__BB6_5:
	ret;

}
	// .globl	cumulative_prod_up_sweep_f
.visible .entry cumulative_prod_up_sweep_f(
	.param .u64 cumulative_prod_up_sweep_f_param_0,
	.param .u64 cumulative_prod_up_sweep_f_param_1,
	.param .u32 cumulative_prod_up_sweep_f_param_2,
	.param .u32 cumulative_prod_up_sweep_f_param_3,
	.param .u32 cumulative_prod_up_sweep_f_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_prod_up_sweep_f_param_0];
	ld.param.u64 	%rd2, [cumulative_prod_up_sweep_f_param_1];
	ld.param.u32 	%r7, [cumulative_prod_up_sweep_f_param_2];
	ld.param.u32 	%r8, [cumulative_prod_up_sweep_f_param_3];
	ld.param.u32 	%r9, [cumulative_prod_up_sweep_f_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB7_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB7_4;

$L__BB7_3:
	mul.wide.s32 	%rd6, %r19, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd5, [%rd7];
	mul.f64 	%fd7, %fd7, %fd5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB7_3;

$L__BB7_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd7;

$L__BB7_5:
	ret;

}
	// .globl	cumulative_prod_down_sweep_d
.visible .entry cumulative_prod_down_sweep_d(
	.param .u64 cumulative_prod_down_sweep_d_param_0,
	.param .u64 cumulative_prod_down_sweep_d_param_1,
	.param .u64 cumulative_prod_down_sweep_d_param_2,
	.param .u32 cumulative_prod_down_sweep_d_param_3,
	.param .u32 cumulative_prod_down_sweep_d_param_4,
	.param .u32 cumulative_prod_down_sweep_d_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_prod_down_sweep_d_param_0];
	ld.param.u64 	%rd5, [cumulative_prod_down_sweep_d_param_1];
	ld.param.u64 	%rd3, [cumulative_prod_down_sweep_d_param_2];
	ld.param.u32 	%r7, [cumulative_prod_down_sweep_d_param_3];
	ld.param.u32 	%r8, [cumulative_prod_down_sweep_d_param_4];
	ld.param.u32 	%r9, [cumulative_prod_down_sweep_d_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB8_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f64 	%fd9, 0d3FF0000000000000;
	@%p2 bra 	$L__BB8_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd9, [%rd8];

$L__BB8_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd7, [%rd10];
	mul.f64 	%fd10, %fd9, %fd7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f64 	[%rd11], %fd10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB8_6;

$L__BB8_5:
	mul.wide.s32 	%rd12, %r20, 8;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f64 	%fd8, [%rd13];
	mul.f64 	%fd10, %fd10, %fd8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f64 	[%rd14], %fd10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB8_5;

$L__BB8_6:
	ret;

}
	// .globl	cumulative_prod_down_sweep_f
.visible .entry cumulative_prod_down_sweep_f(
	.param .u64 cumulative_prod_down_sweep_f_param_0,
	.param .u64 cumulative_prod_down_sweep_f_param_1,
	.param .u64 cumulative_prod_down_sweep_f_param_2,
	.param .u32 cumulative_prod_down_sweep_f_param_3,
	.param .u32 cumulative_prod_down_sweep_f_param_4,
	.param .u32 cumulative_prod_down_sweep_f_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_prod_down_sweep_f_param_0];
	ld.param.u64 	%rd5, [cumulative_prod_down_sweep_f_param_1];
	ld.param.u64 	%rd3, [cumulative_prod_down_sweep_f_param_2];
	ld.param.u32 	%r7, [cumulative_prod_down_sweep_f_param_3];
	ld.param.u32 	%r8, [cumulative_prod_down_sweep_f_param_4];
	ld.param.u32 	%r9, [cumulative_prod_down_sweep_f_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB9_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f32 	%f9, 0f3F800000;
	@%p2 bra 	$L__BB9_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f9, [%rd8];

$L__BB9_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f7, [%rd10];
	mul.f32 	%f10, %f9, %f7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f32 	[%rd11], %f10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB9_6;

$L__BB9_5:
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f32 	%f8, [%rd13];
	mul.f32 	%f10, %f10, %f8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f32 	[%rd14], %f10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB9_5;

$L__BB9_6:
	ret;

}
	// .globl	cumulative_min_up_sweep_d
.visible .entry cumulative_min_up_sweep_d(
	.param .u64 cumulative_min_up_sweep_d_param_0,
	.param .u64 cumulative_min_up_sweep_d_param_1,
	.param .u32 cumulative_min_up_sweep_d_param_2,
	.param .u32 cumulative_min_up_sweep_d_param_3,
	.param .u32 cumulative_min_up_sweep_d_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_min_up_sweep_d_param_0];
	ld.param.u64 	%rd2, [cumulative_min_up_sweep_d_param_1];
	ld.param.u32 	%r7, [cumulative_min_up_sweep_d_param_2];
	ld.param.u32 	%r8, [cumulative_min_up_sweep_d_param_3];
	ld.param.u32 	%r9, [cumulative_min_up_sweep_d_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB10_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB10_4;

$L__BB10_3:
	mul.wide.s32 	%rd6, %r19, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd5, [%rd7];
	min.f64 	%fd7, %fd7, %fd5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB10_3;

$L__BB10_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd7;

$L__BB10_5:
	ret;

}
	// .globl	cumulative_min_up_sweep_f
.visible .entry cumulative_min_up_sweep_f(
	.param .u64 cumulative_min_up_sweep_f_param_0,
	.param .u64 cumulative_min_up_sweep_f_param_1,
	.param .u32 cumulative_min_up_sweep_f_param_2,
	.param .u32 cumulative_min_up_sweep_f_param_3,
	.param .u32 cumulative_min_up_sweep_f_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_min_up_sweep_f_param_0];
	ld.param.u64 	%rd2, [cumulative_min_up_sweep_f_param_1];
	ld.param.u32 	%r7, [cumulative_min_up_sweep_f_param_2];
	ld.param.u32 	%r8, [cumulative_min_up_sweep_f_param_3];
	ld.param.u32 	%r9, [cumulative_min_up_sweep_f_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB11_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB11_4;

$L__BB11_3:
	mul.wide.s32 	%rd6, %r19, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f5, [%rd7];
	min.f32 	%f7, %f7, %f5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB11_3;

$L__BB11_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f7;

$L__BB11_5:
	ret;

}
	// .globl	cumulative_min_down_sweep_d
.visible .entry cumulative_min_down_sweep_d(
	.param .u64 cumulative_min_down_sweep_d_param_0,
	.param .u64 cumulative_min_down_sweep_d_param_1,
	.param .u64 cumulative_min_down_sweep_d_param_2,
	.param .u32 cumulative_min_down_sweep_d_param_3,
	.param .u32 cumulative_min_down_sweep_d_param_4,
	.param .u32 cumulative_min_down_sweep_d_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_min_down_sweep_d_param_0];
	ld.param.u64 	%rd5, [cumulative_min_down_sweep_d_param_1];
	ld.param.u64 	%rd3, [cumulative_min_down_sweep_d_param_2];
	ld.param.u32 	%r7, [cumulative_min_down_sweep_d_param_3];
	ld.param.u32 	%r8, [cumulative_min_down_sweep_d_param_4];
	ld.param.u32 	%r9, [cumulative_min_down_sweep_d_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB12_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f64 	%fd9, 0d7FF0000000000000;
	@%p2 bra 	$L__BB12_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd9, [%rd8];

$L__BB12_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd7, [%rd10];
	min.f64 	%fd10, %fd9, %fd7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f64 	[%rd11], %fd10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB12_6;

$L__BB12_5:
	mul.wide.s32 	%rd12, %r20, 8;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f64 	%fd8, [%rd13];
	min.f64 	%fd10, %fd10, %fd8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f64 	[%rd14], %fd10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB12_5;

$L__BB12_6:
	ret;

}
	// .globl	cumulative_min_down_sweep_f
.visible .entry cumulative_min_down_sweep_f(
	.param .u64 cumulative_min_down_sweep_f_param_0,
	.param .u64 cumulative_min_down_sweep_f_param_1,
	.param .u64 cumulative_min_down_sweep_f_param_2,
	.param .u32 cumulative_min_down_sweep_f_param_3,
	.param .u32 cumulative_min_down_sweep_f_param_4,
	.param .u32 cumulative_min_down_sweep_f_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_min_down_sweep_f_param_0];
	ld.param.u64 	%rd5, [cumulative_min_down_sweep_f_param_1];
	ld.param.u64 	%rd3, [cumulative_min_down_sweep_f_param_2];
	ld.param.u32 	%r7, [cumulative_min_down_sweep_f_param_3];
	ld.param.u32 	%r8, [cumulative_min_down_sweep_f_param_4];
	ld.param.u32 	%r9, [cumulative_min_down_sweep_f_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB13_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f32 	%f9, 0f7F800000;
	@%p2 bra 	$L__BB13_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f9, [%rd8];

$L__BB13_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f7, [%rd10];
	min.f32 	%f10, %f9, %f7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f32 	[%rd11], %f10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB13_6;

$L__BB13_5:
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f32 	%f8, [%rd13];
	min.f32 	%f10, %f10, %f8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f32 	[%rd14], %f10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB13_5;

$L__BB13_6:
	ret;

}
	// .globl	cumulative_max_up_sweep_d
.visible .entry cumulative_max_up_sweep_d(
	.param .u64 cumulative_max_up_sweep_d_param_0,
	.param .u64 cumulative_max_up_sweep_d_param_1,
	.param .u32 cumulative_max_up_sweep_d_param_2,
	.param .u32 cumulative_max_up_sweep_d_param_3,
	.param .u32 cumulative_max_up_sweep_d_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_max_up_sweep_d_param_0];
	ld.param.u64 	%rd2, [cumulative_max_up_sweep_d_param_1];
	ld.param.u32 	%r7, [cumulative_max_up_sweep_d_param_2];
	ld.param.u32 	%r8, [cumulative_max_up_sweep_d_param_3];
	ld.param.u32 	%r9, [cumulative_max_up_sweep_d_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB14_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB14_4;

$L__BB14_3:
	mul.wide.s32 	%rd6, %r19, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd5, [%rd7];
	max.f64 	%fd7, %fd7, %fd5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB14_3;

$L__BB14_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd7;

$L__BB14_5:
	ret;

}
	// .globl	cumulative_max_up_sweep_f
.visible .entry cumulative_max_up_sweep_f(
	.param .u64 cumulative_max_up_sweep_f_param_0,
	.param .u64 cumulative_max_up_sweep_f_param_1,
	.param .u32 cumulative_max_up_sweep_f_param_2,
	.param .u32 cumulative_max_up_sweep_f_param_3,
	.param .u32 cumulative_max_up_sweep_f_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [cumulative_max_up_sweep_f_param_0];
	ld.param.u64 	%rd2, [cumulative_max_up_sweep_f_param_1];
	ld.param.u32 	%r7, [cumulative_max_up_sweep_f_param_2];
	ld.param.u32 	%r8, [cumulative_max_up_sweep_f_param_3];
	ld.param.u32 	%r9, [cumulative_max_up_sweep_f_param_4];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB15_5;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	mad.lo.s32 	%r15, %r2, %r9, %r1;
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f7, [%rd5];
	mad.lo.s32 	%r16, %r9, %r8, %r15;
	mul.lo.s32 	%r17, %r8, %r7;
	min.u32 	%r3, %r16, %r17;
	add.s32 	%r19, %r15, %r8;
	setp.ge.u32 	%p2, %r19, %r3;
	@%p2 bra 	$L__BB15_4;

$L__BB15_3:
	mul.wide.s32 	%rd6, %r19, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f5, [%rd7];
	max.f32 	%f7, %f7, %f5;
	add.s32 	%r19, %r19, %r8;
	setp.lt.u32 	%p3, %r19, %r3;
	@%p3 bra 	$L__BB15_3;

$L__BB15_4:
	add.s32 	%r18, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r18, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f7;

$L__BB15_5:
	ret;

}
	// .globl	cumulative_max_down_sweep_d
.visible .entry cumulative_max_down_sweep_d(
	.param .u64 cumulative_max_down_sweep_d_param_0,
	.param .u64 cumulative_max_down_sweep_d_param_1,
	.param .u64 cumulative_max_down_sweep_d_param_2,
	.param .u32 cumulative_max_down_sweep_d_param_3,
	.param .u32 cumulative_max_down_sweep_d_param_4,
	.param .u32 cumulative_max_down_sweep_d_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_max_down_sweep_d_param_0];
	ld.param.u64 	%rd5, [cumulative_max_down_sweep_d_param_1];
	ld.param.u64 	%rd3, [cumulative_max_down_sweep_d_param_2];
	ld.param.u32 	%r7, [cumulative_max_down_sweep_d_param_3];
	ld.param.u32 	%r8, [cumulative_max_down_sweep_d_param_4];
	ld.param.u32 	%r9, [cumulative_max_down_sweep_d_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB16_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f64 	%fd9, 0dFFF0000000000000;
	@%p2 bra 	$L__BB16_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd9, [%rd8];

$L__BB16_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd7, [%rd10];
	max.f64 	%fd10, %fd9, %fd7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f64 	[%rd11], %fd10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB16_6;

$L__BB16_5:
	mul.wide.s32 	%rd12, %r20, 8;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f64 	%fd8, [%rd13];
	max.f64 	%fd10, %fd10, %fd8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f64 	[%rd14], %fd10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB16_5;

$L__BB16_6:
	ret;

}
	// .globl	cumulative_max_down_sweep_f
.visible .entry cumulative_max_down_sweep_f(
	.param .u64 cumulative_max_down_sweep_f_param_0,
	.param .u64 cumulative_max_down_sweep_f_param_1,
	.param .u64 cumulative_max_down_sweep_f_param_2,
	.param .u32 cumulative_max_down_sweep_f_param_3,
	.param .u32 cumulative_max_down_sweep_f_param_4,
	.param .u32 cumulative_max_down_sweep_f_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [cumulative_max_down_sweep_f_param_0];
	ld.param.u64 	%rd5, [cumulative_max_down_sweep_f_param_1];
	ld.param.u64 	%rd3, [cumulative_max_down_sweep_f_param_2];
	ld.param.u32 	%r7, [cumulative_max_down_sweep_f_param_3];
	ld.param.u32 	%r8, [cumulative_max_down_sweep_f_param_4];
	ld.param.u32 	%r9, [cumulative_max_down_sweep_f_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	add.s32 	%r13, %r8, -1;
	setp.gt.u32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB17_6;

	mov.u32 	%r14, %ctaid.y;
	mul.lo.s32 	%r2, %r14, %r8;
	setp.eq.s32 	%p2, %r14, 0;
	mov.f32 	%f9, 0fFF800000;
	@%p2 bra 	$L__BB17_3;

	sub.s32 	%r15, %r2, %r8;
	add.s32 	%r16, %r1, %r15;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f9, [%rd8];

$L__BB17_3:
	mad.lo.s32 	%r17, %r2, %r9, %r1;
	mul.wide.u32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f7, [%rd10];
	max.f32 	%f10, %f9, %f7;
	add.s64 	%rd11, %rd1, %rd9;
	st.global.f32 	[%rd11], %f10;
	mad.lo.s32 	%r18, %r9, %r8, %r17;
	mul.lo.s32 	%r19, %r8, %r7;
	min.u32 	%r3, %r18, %r19;
	add.s32 	%r20, %r17, %r8;
	setp.ge.u32 	%p3, %r20, %r3;
	@%p3 bra 	$L__BB17_6;

$L__BB17_5:
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f32 	%f8, [%rd13];
	max.f32 	%f10, %f10, %f8;
	add.s64 	%rd14, %rd1, %rd12;
	st.global.f32 	[%rd14], %f10;
	add.s32 	%r20, %r20, %r8;
	setp.lt.u32 	%p4, %r20, %r3;
	@%p4 bra 	$L__BB17_5;

$L__BB17_6:
	ret;

}
	// .globl	cumulative_sum_prod_d
.visible .entry cumulative_sum_prod_d(
	.param .u64 cumulative_sum_prod_d_param_0,
	.param .u64 cumulative_sum_prod_d_param_1,
	.param .u64 cumulative_sum_prod_d_param_2,
	.param .u64 cumulative_sum_prod_d_param_3,
	.param .u32 cumulative_sum_prod_d_param_4,
	.param .u32 cumulative_sum_prod_d_param_5,
	.param .u32 cumulative_sum_prod_d_param_6
)
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<86>;
	.reg .f64 	%fd<89>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd10, [cumulative_sum_prod_d_param_0];
	ld.param.u64 	%rd11, [cumulative_sum_prod_d_param_1];
	ld.param.u64 	%rd12, [cumulative_sum_prod_d_param_2];
	ld.param.u64 	%rd13, [cumulative_sum_prod_d_param_3];
	ld.param.u32 	%r32, [cumulative_sum_prod_d_param_4];
	ld.param.u32 	%r33, [cumulative_sum_prod_d_param_5];
	ld.param.u32 	%r34, [cumulative_sum_prod_d_param_6];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r35, %ctaid.x;
	mul.lo.s32 	%r1, %r35, %r33;
	add.s32 	%r36, %r32, -1;
	setp.gt.u32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB18_26;

	add.s32 	%r37, %r1, %r33;
	min.u32 	%r2, %r37, %r32;
	setp.gt.u32 	%p2, %r34, 1;
	@%p2 bra 	$L__BB18_3;
	bra.uni 	$L__BB18_2;

$L__BB18_3:
	shl.b32 	%r40, %r35, 1;
	add.s32 	%r3, %r40, -2;
	setp.lt.s32 	%p3, %r3, 0;
	shl.b32 	%r41, %r1, 1;
	mul.wide.u32 	%rd16, %r41, 8;
	add.s64 	%rd2, %rd1, %rd16;
	mov.f64 	%fd72, 0d0000000000000000;
	@%p3 bra 	$L__BB18_5;

	cvta.to.global.u64 	%rd17, %rd12;
	mul.wide.s32 	%rd18, %r3, 8;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.f64 	%fd72, [%rd19];

$L__BB18_5:
	ld.global.v2.f64 	{%fd34, %fd88}, [%rd2];
	fma.rn.f64 	%fd87, %fd72, %fd88, %fd34;
	bra.uni 	$L__BB18_6;

$L__BB18_2:
	shl.b32 	%r38, %r1, 1;
	mul.wide.u32 	%rd14, %r38, 8;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.v2.f64 	{%fd87, %fd88}, [%rd15];

$L__BB18_6:
	setp.eq.s32 	%p4, %r34, 2;
	@%p4 bra 	$L__BB18_9;

	setp.ne.s32 	%p5, %r34, 3;
	@%p5 bra 	$L__BB18_10;

	cvta.to.global.u64 	%rd20, %rd11;
	mul.wide.u32 	%rd21, %r1, 8;
	add.s64 	%rd22, %rd20, %rd21;
	st.global.f64 	[%rd22], %fd87;
	bra.uni 	$L__BB18_10;

$L__BB18_9:
	shl.b32 	%r46, %r1, 1;
	cvta.to.global.u64 	%rd23, %rd11;
	mul.wide.u32 	%rd24, %r46, 8;
	add.s64 	%rd25, %rd23, %rd24;
	st.global.v2.f64 	[%rd25], {%fd87, %fd88};

$L__BB18_10:
	mad.lo.s32 	%r80, %r35, %r33, 1;
	setp.ge.u32 	%p6, %r80, %r2;
	@%p6 bra 	$L__BB18_23;

	shl.b32 	%r50, %r1, 1;
	add.s32 	%r75, %r50, 2;
	@%p4 bra 	$L__BB18_15;

	setp.ne.s32 	%p8, %r34, 3;
	@%p8 bra 	$L__BB18_22;

	cvta.to.global.u64 	%rd3, %rd11;

$L__BB18_14:
	mul.wide.u32 	%rd26, %r75, 8;
	add.s64 	%rd27, %rd1, %rd26;
	ld.global.v2.f64 	{%fd37, %fd38}, [%rd27];
	mul.f64 	%fd88, %fd88, %fd38;
	fma.rn.f64 	%fd87, %fd87, %fd38, %fd37;
	mul.wide.s32 	%rd28, %r80, 8;
	add.s64 	%rd29, %rd3, %rd28;
	st.global.f64 	[%rd29], %fd87;
	add.s32 	%r75, %r75, 2;
	add.s32 	%r80, %r80, 1;
	setp.lt.u32 	%p9, %r80, %r2;
	@%p9 bra 	$L__BB18_14;
	bra.uni 	$L__BB18_23;

$L__BB18_22:
	mul.wide.u32 	%rd45, %r75, 8;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.v2.f64 	{%fd68, %fd69}, [%rd46];
	mul.f64 	%fd88, %fd88, %fd69;
	fma.rn.f64 	%fd87, %fd87, %fd69, %fd68;
	add.s32 	%r75, %r75, 2;
	add.s32 	%r80, %r80, 1;
	setp.lt.u32 	%p14, %r80, %r2;
	@%p14 bra 	$L__BB18_22;
	bra.uni 	$L__BB18_23;

$L__BB18_15:
	mov.u32 	%r53, 2;
	sub.s32 	%r54, %r53, %r1;
	not.b32 	%r55, %r2;
	sub.s32 	%r56, %r54, %r55;
	and.b32  	%r79, %r56, 3;
	setp.eq.s32 	%p10, %r79, 0;
	@%p10 bra 	$L__BB18_18;

	add.s32 	%r77, %r50, 2;
	add.s32 	%r80, %r1, 1;
	cvta.to.global.u64 	%rd5, %rd11;

$L__BB18_17:
	.pragma "nounroll";
	mul.wide.u32 	%rd30, %r77, 8;
	add.s64 	%rd31, %rd1, %rd30;
	ld.global.v2.f64 	{%fd42, %fd43}, [%rd31];
	mul.f64 	%fd88, %fd88, %fd43;
	fma.rn.f64 	%fd87, %fd87, %fd43, %fd42;
	add.s64 	%rd32, %rd5, %rd30;
	st.global.v2.f64 	[%rd32], {%fd87, %fd88};
	add.s32 	%r80, %r80, 1;
	add.s32 	%r77, %r77, 2;
	add.s32 	%r79, %r79, -1;
	setp.ne.s32 	%p11, %r79, 0;
	@%p11 bra 	$L__BB18_17;

$L__BB18_18:
	mov.u32 	%r62, -3;
	sub.s32 	%r63, %r62, %r1;
	sub.s32 	%r67, %r63, %r55;
	setp.lt.u32 	%p12, %r67, 3;
	@%p12 bra 	$L__BB18_23;

	shl.b32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, 6;
	cvta.to.global.u64 	%rd7, %rd11;

$L__BB18_20:
	mul.wide.u32 	%rd33, %r81, 8;
	add.s64 	%rd34, %rd1, %rd33;
	ld.global.v2.f64 	{%fd46, %fd47}, [%rd34];
	add.s64 	%rd35, %rd7, %rd33;
	fma.rn.f64 	%fd50, %fd87, %fd47, %fd46;
	mul.f64 	%fd51, %fd88, %fd47;
	st.global.v2.f64 	[%rd35], {%fd50, %fd51};
	add.s32 	%r68, %r82, -4;
	mul.wide.u32 	%rd36, %r68, 8;
	add.s64 	%rd37, %rd1, %rd36;
	ld.global.v2.f64 	{%fd52, %fd53}, [%rd37];
	add.s64 	%rd38, %rd7, %rd36;
	fma.rn.f64 	%fd56, %fd50, %fd53, %fd52;
	mul.f64 	%fd57, %fd51, %fd53;
	st.global.v2.f64 	[%rd38], {%fd56, %fd57};
	add.s32 	%r69, %r82, -2;
	mul.wide.u32 	%rd39, %r69, 8;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.v2.f64 	{%fd58, %fd59}, [%rd40];
	add.s64 	%rd41, %rd7, %rd39;
	fma.rn.f64 	%fd62, %fd56, %fd59, %fd58;
	mul.f64 	%fd63, %fd57, %fd59;
	st.global.v2.f64 	[%rd41], {%fd62, %fd63};
	mul.wide.u32 	%rd42, %r82, 8;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.v2.f64 	{%fd64, %fd65}, [%rd43];
	mul.f64 	%fd88, %fd63, %fd65;
	fma.rn.f64 	%fd87, %fd62, %fd65, %fd64;
	add.s64 	%rd44, %rd7, %rd42;
	st.global.v2.f64 	[%rd44], {%fd87, %fd88};
	add.s32 	%r82, %r82, 8;
	add.s32 	%r81, %r81, 8;
	add.s32 	%r80, %r80, 4;
	setp.lt.u32 	%p13, %r80, %r2;
	@%p13 bra 	$L__BB18_20;

$L__BB18_23:
	setp.eq.s64 	%p15, %rd13, 0;
	@%p15 bra 	$L__BB18_26;

	mov.u32 	%r70, %nctaid.x;
	add.s32 	%r71, %r70, -1;
	setp.ge.u32 	%p16, %r35, %r71;
	@%p16 bra 	$L__BB18_26;

	shl.b32 	%r74, %r35, 1;
	cvta.to.global.u64 	%rd47, %rd13;
	mul.wide.u32 	%rd48, %r74, 8;
	add.s64 	%rd49, %rd47, %rd48;
	st.global.v2.f64 	[%rd49], {%fd87, %fd88};

$L__BB18_26:
	ret;

}
	// .globl	cumulative_sum_prod_f
.visible .entry cumulative_sum_prod_f(
	.param .u64 cumulative_sum_prod_f_param_0,
	.param .u64 cumulative_sum_prod_f_param_1,
	.param .u64 cumulative_sum_prod_f_param_2,
	.param .u64 cumulative_sum_prod_f_param_3,
	.param .u32 cumulative_sum_prod_f_param_4,
	.param .u32 cumulative_sum_prod_f_param_5,
	.param .u32 cumulative_sum_prod_f_param_6
)
{
	.reg .pred 	%p<17>;
	.reg .f32 	%f<89>;
	.reg .b32 	%r<86>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd10, [cumulative_sum_prod_f_param_0];
	ld.param.u64 	%rd11, [cumulative_sum_prod_f_param_1];
	ld.param.u64 	%rd12, [cumulative_sum_prod_f_param_2];
	ld.param.u64 	%rd13, [cumulative_sum_prod_f_param_3];
	ld.param.u32 	%r32, [cumulative_sum_prod_f_param_4];
	ld.param.u32 	%r33, [cumulative_sum_prod_f_param_5];
	ld.param.u32 	%r34, [cumulative_sum_prod_f_param_6];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r35, %ctaid.x;
	mul.lo.s32 	%r1, %r35, %r33;
	add.s32 	%r36, %r32, -1;
	setp.gt.u32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB19_26;

	add.s32 	%r37, %r1, %r33;
	min.u32 	%r2, %r37, %r32;
	setp.gt.u32 	%p2, %r34, 1;
	@%p2 bra 	$L__BB19_3;
	bra.uni 	$L__BB19_2;

$L__BB19_3:
	shl.b32 	%r40, %r35, 1;
	add.s32 	%r3, %r40, -2;
	setp.lt.s32 	%p3, %r3, 0;
	shl.b32 	%r41, %r1, 1;
	mul.wide.u32 	%rd16, %r41, 4;
	add.s64 	%rd2, %rd1, %rd16;
	mov.f32 	%f72, 0f00000000;
	@%p3 bra 	$L__BB19_5;

	cvta.to.global.u64 	%rd17, %rd12;
	mul.wide.s32 	%rd18, %r3, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.f32 	%f72, [%rd19];

$L__BB19_5:
	ld.global.v2.f32 	{%f34, %f88}, [%rd2];
	fma.rn.f32 	%f87, %f72, %f88, %f34;
	bra.uni 	$L__BB19_6;

$L__BB19_2:
	shl.b32 	%r38, %r1, 1;
	mul.wide.u32 	%rd14, %r38, 4;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.v2.f32 	{%f87, %f88}, [%rd15];

$L__BB19_6:
	setp.eq.s32 	%p4, %r34, 2;
	@%p4 bra 	$L__BB19_9;

	setp.ne.s32 	%p5, %r34, 3;
	@%p5 bra 	$L__BB19_10;

	cvta.to.global.u64 	%rd20, %rd11;
	mul.wide.u32 	%rd21, %r1, 4;
	add.s64 	%rd22, %rd20, %rd21;
	st.global.f32 	[%rd22], %f87;
	bra.uni 	$L__BB19_10;

$L__BB19_9:
	shl.b32 	%r46, %r1, 1;
	cvta.to.global.u64 	%rd23, %rd11;
	mul.wide.u32 	%rd24, %r46, 4;
	add.s64 	%rd25, %rd23, %rd24;
	st.global.v2.f32 	[%rd25], {%f87, %f88};

$L__BB19_10:
	mad.lo.s32 	%r80, %r35, %r33, 1;
	setp.ge.u32 	%p6, %r80, %r2;
	@%p6 bra 	$L__BB19_23;

	shl.b32 	%r50, %r1, 1;
	add.s32 	%r75, %r50, 2;
	@%p4 bra 	$L__BB19_15;

	setp.ne.s32 	%p8, %r34, 3;
	@%p8 bra 	$L__BB19_22;

	cvta.to.global.u64 	%rd3, %rd11;

$L__BB19_14:
	mul.wide.u32 	%rd26, %r75, 4;
	add.s64 	%rd27, %rd1, %rd26;
	ld.global.v2.f32 	{%f37, %f38}, [%rd27];
	mul.f32 	%f88, %f88, %f38;
	fma.rn.f32 	%f87, %f87, %f38, %f37;
	mul.wide.s32 	%rd28, %r80, 4;
	add.s64 	%rd29, %rd3, %rd28;
	st.global.f32 	[%rd29], %f87;
	add.s32 	%r75, %r75, 2;
	add.s32 	%r80, %r80, 1;
	setp.lt.u32 	%p9, %r80, %r2;
	@%p9 bra 	$L__BB19_14;
	bra.uni 	$L__BB19_23;

$L__BB19_22:
	mul.wide.u32 	%rd45, %r75, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.v2.f32 	{%f68, %f69}, [%rd46];
	mul.f32 	%f88, %f88, %f69;
	fma.rn.f32 	%f87, %f87, %f69, %f68;
	add.s32 	%r75, %r75, 2;
	add.s32 	%r80, %r80, 1;
	setp.lt.u32 	%p14, %r80, %r2;
	@%p14 bra 	$L__BB19_22;
	bra.uni 	$L__BB19_23;

$L__BB19_15:
	mov.u32 	%r53, 2;
	sub.s32 	%r54, %r53, %r1;
	not.b32 	%r55, %r2;
	sub.s32 	%r56, %r54, %r55;
	and.b32  	%r79, %r56, 3;
	setp.eq.s32 	%p10, %r79, 0;
	@%p10 bra 	$L__BB19_18;

	add.s32 	%r77, %r50, 2;
	add.s32 	%r80, %r1, 1;
	cvta.to.global.u64 	%rd5, %rd11;

$L__BB19_17:
	.pragma "nounroll";
	mul.wide.u32 	%rd30, %r77, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.global.v2.f32 	{%f42, %f43}, [%rd31];
	mul.f32 	%f88, %f88, %f43;
	fma.rn.f32 	%f87, %f87, %f43, %f42;
	add.s64 	%rd32, %rd5, %rd30;
	st.global.v2.f32 	[%rd32], {%f87, %f88};
	add.s32 	%r80, %r80, 1;
	add.s32 	%r77, %r77, 2;
	add.s32 	%r79, %r79, -1;
	setp.ne.s32 	%p11, %r79, 0;
	@%p11 bra 	$L__BB19_17;

$L__BB19_18:
	mov.u32 	%r62, -3;
	sub.s32 	%r63, %r62, %r1;
	sub.s32 	%r67, %r63, %r55;
	setp.lt.u32 	%p12, %r67, 3;
	@%p12 bra 	$L__BB19_23;

	shl.b32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, 6;
	cvta.to.global.u64 	%rd7, %rd11;

$L__BB19_20:
	mul.wide.u32 	%rd33, %r81, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.global.v2.f32 	{%f46, %f47}, [%rd34];
	add.s64 	%rd35, %rd7, %rd33;
	fma.rn.f32 	%f50, %f87, %f47, %f46;
	mul.f32 	%f51, %f88, %f47;
	st.global.v2.f32 	[%rd35], {%f50, %f51};
	add.s32 	%r68, %r82, -4;
	mul.wide.u32 	%rd36, %r68, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.global.v2.f32 	{%f52, %f53}, [%rd37];
	add.s64 	%rd38, %rd7, %rd36;
	fma.rn.f32 	%f56, %f50, %f53, %f52;
	mul.f32 	%f57, %f51, %f53;
	st.global.v2.f32 	[%rd38], {%f56, %f57};
	add.s32 	%r69, %r82, -2;
	mul.wide.u32 	%rd39, %r69, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.v2.f32 	{%f58, %f59}, [%rd40];
	add.s64 	%rd41, %rd7, %rd39;
	fma.rn.f32 	%f62, %f56, %f59, %f58;
	mul.f32 	%f63, %f57, %f59;
	st.global.v2.f32 	[%rd41], {%f62, %f63};
	mul.wide.u32 	%rd42, %r82, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.v2.f32 	{%f64, %f65}, [%rd43];
	mul.f32 	%f88, %f63, %f65;
	fma.rn.f32 	%f87, %f62, %f65, %f64;
	add.s64 	%rd44, %rd7, %rd42;
	st.global.v2.f32 	[%rd44], {%f87, %f88};
	add.s32 	%r82, %r82, 8;
	add.s32 	%r81, %r81, 8;
	add.s32 	%r80, %r80, 4;
	setp.lt.u32 	%p13, %r80, %r2;
	@%p13 bra 	$L__BB19_20;

$L__BB19_23:
	setp.eq.s64 	%p15, %rd13, 0;
	@%p15 bra 	$L__BB19_26;

	mov.u32 	%r70, %nctaid.x;
	add.s32 	%r71, %r70, -1;
	setp.ge.u32 	%p16, %r35, %r71;
	@%p16 bra 	$L__BB19_26;

	shl.b32 	%r74, %r35, 1;
	cvta.to.global.u64 	%rd47, %rd13;
	mul.wide.u32 	%rd48, %r74, 4;
	add.s64 	%rd49, %rd47, %rd48;
	st.global.v2.f32 	[%rd49], {%f87, %f88};

$L__BB19_26:
	ret;

}
	// .globl	sparse_dense_im2col_d
.visible .entry sparse_dense_im2col_d(
	.param .u64 sparse_dense_im2col_d_param_0,
	.param .u64 sparse_dense_im2col_d_param_1,
	.param .u64 sparse_dense_im2col_d_param_2,
	.param .u64 sparse_dense_im2col_d_param_3,
	.param .u32 sparse_dense_im2col_d_param_4,
	.param .u32 sparse_dense_im2col_d_param_5,
	.param .u32 sparse_dense_im2col_d_param_6,
	.param .u32 sparse_dense_im2col_d_param_7,
	.param .u32 sparse_dense_im2col_d_param_8,
	.param .u32 sparse_dense_im2col_d_param_9,
	.param .u32 sparse_dense_im2col_d_param_10,
	.param .u32 sparse_dense_im2col_d_param_11,
	.param .u32 sparse_dense_im2col_d_param_12,
	.param .u32 sparse_dense_im2col_d_param_13,
	.param .u32 sparse_dense_im2col_d_param_14,
	.param .u32 sparse_dense_im2col_d_param_15,
	.param .u32 sparse_dense_im2col_d_param_16,
	.param .u32 sparse_dense_im2col_d_param_17,
	.param .u32 sparse_dense_im2col_d_param_18,
	.param .u32 sparse_dense_im2col_d_param_19
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<74>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd4, [sparse_dense_im2col_d_param_0];
	ld.param.u64 	%rd5, [sparse_dense_im2col_d_param_1];
	ld.param.u64 	%rd6, [sparse_dense_im2col_d_param_2];
	ld.param.u64 	%rd7, [sparse_dense_im2col_d_param_3];
	ld.param.u32 	%r36, [sparse_dense_im2col_d_param_4];
	ld.param.u32 	%r23, [sparse_dense_im2col_d_param_7];
	ld.param.u32 	%r24, [sparse_dense_im2col_d_param_8];
	ld.param.u32 	%r25, [sparse_dense_im2col_d_param_9];
	ld.param.u32 	%r26, [sparse_dense_im2col_d_param_10];
	ld.param.u32 	%r27, [sparse_dense_im2col_d_param_11];
	ld.param.u32 	%r28, [sparse_dense_im2col_d_param_12];
	ld.param.u32 	%r29, [sparse_dense_im2col_d_param_13];
	ld.param.u32 	%r30, [sparse_dense_im2col_d_param_14];
	ld.param.u32 	%r31, [sparse_dense_im2col_d_param_15];
	ld.param.u32 	%r32, [sparse_dense_im2col_d_param_16];
	ld.param.u32 	%r33, [sparse_dense_im2col_d_param_17];
	ld.param.u32 	%r34, [sparse_dense_im2col_d_param_18];
	ld.param.u32 	%r35, [sparse_dense_im2col_d_param_19];
	mov.u32 	%r37, %ntid.x;
	mov.u32 	%r38, %ctaid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	setp.ge.s32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB20_13;

	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	cvta.to.global.u64 	%rd8, %rd4;
	mul.wide.s32 	%rd9, %r1, 8;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f64 	%fd1, [%rd10];
	mov.u32 	%r69, 0;

$L__BB20_2:
	mov.u32 	%r2, %r69;
	add.s32 	%r69, %r2, 1;
	mul.wide.s32 	%rd11, %r69, 4;
	add.s64 	%rd12, %rd3, %rd11;
	ld.global.u32 	%r41, [%rd12];
	setp.le.s32 	%p2, %r41, %r1;
	@%p2 bra 	$L__BB20_2;

	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd2, %rd13;
	ld.global.u32 	%r42, [%rd14];
	div.s32 	%r4, %r42, %r23;
	mul.lo.s32 	%r43, %r4, %r23;
	sub.s32 	%r44, %r42, %r43;
	div.s32 	%r45, %r44, %r24;
	mul.lo.s32 	%r46, %r45, %r24;
	sub.s32 	%r47, %r44, %r46;
	add.s32 	%r5, %r45, %r34;
	mul.lo.s32 	%r48, %r32, %r27;
	sub.s32 	%r49, %r5, %r48;
	add.s32 	%r50, %r49, 1;
	max.s32 	%r70, %r50, 0;
	add.s32 	%r51, %r25, -1;
	min.s32 	%r7, %r51, %r5;
	add.s32 	%r8, %r47, %r35;
	mul.lo.s32 	%r52, %r33, %r28;
	sub.s32 	%r53, %r8, %r52;
	add.s32 	%r54, %r53, 1;
	max.s32 	%r71, %r54, 0;
	add.s32 	%r55, %r26, -1;
	min.s32 	%r10, %r55, %r8;

$L__BB20_4:
	mov.u32 	%r72, %r70;
	sub.s32 	%r56, %r5, %r72;
	rem.s32 	%r57, %r56, %r32;
	setp.ne.s32 	%p3, %r57, 0;
	setp.le.s32 	%p4, %r72, %r7;
	and.pred  	%p5, %p4, %p3;
	add.s32 	%r70, %r72, 1;
	@%p5 bra 	$L__BB20_4;

$L__BB20_6:
	mov.u32 	%r13, %r71;
	sub.s32 	%r58, %r8, %r13;
	rem.s32 	%r59, %r58, %r33;
	setp.ne.s32 	%p6, %r59, 0;
	setp.le.s32 	%p7, %r13, %r10;
	and.pred  	%p8, %p7, %p6;
	add.s32 	%r71, %r13, 1;
	@%p8 bra 	$L__BB20_6;

	setp.gt.s32 	%p9, %r72, %r7;
	@%p9 bra 	$L__BB20_13;

	mul.lo.s32 	%r15, %r2, %r29;
	mul.lo.s32 	%r16, %r4, %r30;
	setp.gt.s32 	%p10, %r13, %r10;

$L__BB20_9:
	@%p10 bra 	$L__BB20_12;

	mad.lo.s32 	%r18, %r72, %r26, %r16;
	sub.s32 	%r60, %r5, %r72;
	div.s32 	%r61, %r60, %r32;
	mad.lo.s32 	%r19, %r61, %r28, %r15;
	mov.u32 	%r73, %r13;

$L__BB20_11:
	sub.s32 	%r62, %r8, %r73;
	div.s32 	%r63, %r62, %r33;
	add.s32 	%r64, %r18, %r73;
	mad.lo.s32 	%r65, %r64, %r31, %r19;
	add.s32 	%r66, %r65, %r63;
	mul.wide.s32 	%rd15, %r66, 8;
	add.s64 	%rd16, %rd1, %rd15;
	st.global.f64 	[%rd16], %fd1;
	add.s32 	%r73, %r73, %r33;
	setp.le.s32 	%p11, %r73, %r10;
	@%p11 bra 	$L__BB20_11;

$L__BB20_12:
	add.s32 	%r72, %r72, %r32;
	setp.le.s32 	%p12, %r72, %r7;
	@%p12 bra 	$L__BB20_9;

$L__BB20_13:
	ret;

}
	// .globl	sparse_dense_im2col_f
.visible .entry sparse_dense_im2col_f(
	.param .u64 sparse_dense_im2col_f_param_0,
	.param .u64 sparse_dense_im2col_f_param_1,
	.param .u64 sparse_dense_im2col_f_param_2,
	.param .u64 sparse_dense_im2col_f_param_3,
	.param .u32 sparse_dense_im2col_f_param_4,
	.param .u32 sparse_dense_im2col_f_param_5,
	.param .u32 sparse_dense_im2col_f_param_6,
	.param .u32 sparse_dense_im2col_f_param_7,
	.param .u32 sparse_dense_im2col_f_param_8,
	.param .u32 sparse_dense_im2col_f_param_9,
	.param .u32 sparse_dense_im2col_f_param_10,
	.param .u32 sparse_dense_im2col_f_param_11,
	.param .u32 sparse_dense_im2col_f_param_12,
	.param .u32 sparse_dense_im2col_f_param_13,
	.param .u32 sparse_dense_im2col_f_param_14,
	.param .u32 sparse_dense_im2col_f_param_15,
	.param .u32 sparse_dense_im2col_f_param_16,
	.param .u32 sparse_dense_im2col_f_param_17,
	.param .u32 sparse_dense_im2col_f_param_18,
	.param .u32 sparse_dense_im2col_f_param_19
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<74>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd4, [sparse_dense_im2col_f_param_0];
	ld.param.u64 	%rd5, [sparse_dense_im2col_f_param_1];
	ld.param.u64 	%rd6, [sparse_dense_im2col_f_param_2];
	ld.param.u64 	%rd7, [sparse_dense_im2col_f_param_3];
	ld.param.u32 	%r36, [sparse_dense_im2col_f_param_4];
	ld.param.u32 	%r23, [sparse_dense_im2col_f_param_7];
	ld.param.u32 	%r24, [sparse_dense_im2col_f_param_8];
	ld.param.u32 	%r25, [sparse_dense_im2col_f_param_9];
	ld.param.u32 	%r26, [sparse_dense_im2col_f_param_10];
	ld.param.u32 	%r27, [sparse_dense_im2col_f_param_11];
	ld.param.u32 	%r28, [sparse_dense_im2col_f_param_12];
	ld.param.u32 	%r29, [sparse_dense_im2col_f_param_13];
	ld.param.u32 	%r30, [sparse_dense_im2col_f_param_14];
	ld.param.u32 	%r31, [sparse_dense_im2col_f_param_15];
	ld.param.u32 	%r32, [sparse_dense_im2col_f_param_16];
	ld.param.u32 	%r33, [sparse_dense_im2col_f_param_17];
	ld.param.u32 	%r34, [sparse_dense_im2col_f_param_18];
	ld.param.u32 	%r35, [sparse_dense_im2col_f_param_19];
	mov.u32 	%r37, %ntid.x;
	mov.u32 	%r38, %ctaid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	setp.ge.s32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB21_13;

	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	cvta.to.global.u64 	%rd8, %rd4;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f1, [%rd10];
	mov.u32 	%r69, 0;

$L__BB21_2:
	mov.u32 	%r2, %r69;
	add.s32 	%r69, %r2, 1;
	mul.wide.s32 	%rd11, %r69, 4;
	add.s64 	%rd12, %rd3, %rd11;
	ld.global.u32 	%r41, [%rd12];
	setp.le.s32 	%p2, %r41, %r1;
	@%p2 bra 	$L__BB21_2;

	add.s64 	%rd14, %rd2, %rd9;
	ld.global.u32 	%r42, [%rd14];
	div.s32 	%r4, %r42, %r23;
	mul.lo.s32 	%r43, %r4, %r23;
	sub.s32 	%r44, %r42, %r43;
	div.s32 	%r45, %r44, %r24;
	mul.lo.s32 	%r46, %r45, %r24;
	sub.s32 	%r47, %r44, %r46;
	add.s32 	%r5, %r45, %r34;
	mul.lo.s32 	%r48, %r32, %r27;
	sub.s32 	%r49, %r5, %r48;
	add.s32 	%r50, %r49, 1;
	max.s32 	%r70, %r50, 0;
	add.s32 	%r51, %r25, -1;
	min.s32 	%r7, %r51, %r5;
	add.s32 	%r8, %r47, %r35;
	mul.lo.s32 	%r52, %r33, %r28;
	sub.s32 	%r53, %r8, %r52;
	add.s32 	%r54, %r53, 1;
	max.s32 	%r71, %r54, 0;
	add.s32 	%r55, %r26, -1;
	min.s32 	%r10, %r55, %r8;

$L__BB21_4:
	mov.u32 	%r72, %r70;
	sub.s32 	%r56, %r5, %r72;
	rem.s32 	%r57, %r56, %r32;
	setp.ne.s32 	%p3, %r57, 0;
	setp.le.s32 	%p4, %r72, %r7;
	and.pred  	%p5, %p4, %p3;
	add.s32 	%r70, %r72, 1;
	@%p5 bra 	$L__BB21_4;

$L__BB21_6:
	mov.u32 	%r13, %r71;
	sub.s32 	%r58, %r8, %r13;
	rem.s32 	%r59, %r58, %r33;
	setp.ne.s32 	%p6, %r59, 0;
	setp.le.s32 	%p7, %r13, %r10;
	and.pred  	%p8, %p7, %p6;
	add.s32 	%r71, %r13, 1;
	@%p8 bra 	$L__BB21_6;

	setp.gt.s32 	%p9, %r72, %r7;
	@%p9 bra 	$L__BB21_13;

	mul.lo.s32 	%r15, %r2, %r29;
	mul.lo.s32 	%r16, %r4, %r30;
	setp.gt.s32 	%p10, %r13, %r10;

$L__BB21_9:
	@%p10 bra 	$L__BB21_12;

	mad.lo.s32 	%r18, %r72, %r26, %r16;
	sub.s32 	%r60, %r5, %r72;
	div.s32 	%r61, %r60, %r32;
	mad.lo.s32 	%r19, %r61, %r28, %r15;
	mov.u32 	%r73, %r13;

$L__BB21_11:
	sub.s32 	%r62, %r8, %r73;
	div.s32 	%r63, %r62, %r33;
	add.s32 	%r64, %r18, %r73;
	mad.lo.s32 	%r65, %r64, %r31, %r19;
	add.s32 	%r66, %r65, %r63;
	mul.wide.s32 	%rd15, %r66, 4;
	add.s64 	%rd16, %rd1, %rd15;
	st.global.f32 	[%rd16], %f1;
	add.s32 	%r73, %r73, %r33;
	setp.le.s32 	%p11, %r73, %r10;
	@%p11 bra 	$L__BB21_11;

$L__BB21_12:
	add.s32 	%r72, %r72, %r32;
	setp.le.s32 	%p12, %r72, %r7;
	@%p12 bra 	$L__BB21_9;

$L__BB21_13:
	ret;

}
	// .globl	dense_dense_im2col_d
.visible .entry dense_dense_im2col_d(
	.param .u64 dense_dense_im2col_d_param_0,
	.param .u64 dense_dense_im2col_d_param_1,
	.param .u32 dense_dense_im2col_d_param_2,
	.param .u32 dense_dense_im2col_d_param_3,
	.param .u32 dense_dense_im2col_d_param_4,
	.param .u32 dense_dense_im2col_d_param_5,
	.param .u32 dense_dense_im2col_d_param_6,
	.param .u32 dense_dense_im2col_d_param_7,
	.param .u32 dense_dense_im2col_d_param_8,
	.param .u32 dense_dense_im2col_d_param_9,
	.param .u32 dense_dense_im2col_d_param_10,
	.param .u32 dense_dense_im2col_d_param_11,
	.param .u32 dense_dense_im2col_d_param_12,
	.param .u32 dense_dense_im2col_d_param_13,
	.param .u32 dense_dense_im2col_d_param_14,
	.param .u32 dense_dense_im2col_d_param_15,
	.param .u32 dense_dense_im2col_d_param_16
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<70>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [dense_dense_im2col_d_param_0];
	ld.param.u64 	%rd3, [dense_dense_im2col_d_param_1];
	ld.param.u32 	%r36, [dense_dense_im2col_d_param_2];
	ld.param.u32 	%r22, [dense_dense_im2col_d_param_3];
	ld.param.u32 	%r23, [dense_dense_im2col_d_param_4];
	ld.param.u32 	%r24, [dense_dense_im2col_d_param_5];
	ld.param.u32 	%r25, [dense_dense_im2col_d_param_6];
	ld.param.u32 	%r26, [dense_dense_im2col_d_param_7];
	ld.param.u32 	%r27, [dense_dense_im2col_d_param_8];
	ld.param.u32 	%r28, [dense_dense_im2col_d_param_9];
	ld.param.u32 	%r29, [dense_dense_im2col_d_param_10];
	ld.param.u32 	%r30, [dense_dense_im2col_d_param_11];
	ld.param.u32 	%r31, [dense_dense_im2col_d_param_12];
	ld.param.u32 	%r32, [dense_dense_im2col_d_param_13];
	ld.param.u32 	%r33, [dense_dense_im2col_d_param_14];
	ld.param.u32 	%r34, [dense_dense_im2col_d_param_15];
	ld.param.u32 	%r35, [dense_dense_im2col_d_param_16];
	mov.u32 	%r37, %ntid.x;
	mov.u32 	%r38, %ctaid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	setp.ge.s32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB22_11;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	div.s32 	%r2, %r1, %r22;
	mul.lo.s32 	%r40, %r2, %r22;
	sub.s32 	%r41, %r1, %r40;
	div.s32 	%r3, %r41, %r23;
	mul.lo.s32 	%r42, %r3, %r23;
	sub.s32 	%r43, %r41, %r42;
	div.s32 	%r44, %r43, %r24;
	mul.lo.s32 	%r45, %r44, %r24;
	sub.s32 	%r46, %r43, %r45;
	add.s32 	%r4, %r44, %r34;
	mul.lo.s32 	%r47, %r32, %r27;
	sub.s32 	%r48, %r4, %r47;
	add.s32 	%r49, %r48, 1;
	max.s32 	%r66, %r49, 0;
	add.s32 	%r50, %r25, -1;
	min.s32 	%r6, %r50, %r4;
	add.s32 	%r7, %r46, %r35;
	mul.lo.s32 	%r51, %r33, %r28;
	sub.s32 	%r52, %r7, %r51;
	add.s32 	%r53, %r52, 1;
	max.s32 	%r67, %r53, 0;
	add.s32 	%r54, %r26, -1;
	min.s32 	%r9, %r54, %r7;

$L__BB22_2:
	mov.u32 	%r68, %r66;
	sub.s32 	%r55, %r4, %r68;
	rem.s32 	%r56, %r55, %r32;
	setp.ne.s32 	%p2, %r56, 0;
	setp.le.s32 	%p3, %r68, %r6;
	and.pred  	%p4, %p3, %p2;
	add.s32 	%r66, %r68, 1;
	@%p4 bra 	$L__BB22_2;

$L__BB22_4:
	mov.u32 	%r12, %r67;
	sub.s32 	%r57, %r7, %r12;
	rem.s32 	%r58, %r57, %r33;
	setp.ne.s32 	%p5, %r58, 0;
	setp.le.s32 	%p6, %r12, %r9;
	and.pred  	%p7, %p6, %p5;
	add.s32 	%r67, %r12, 1;
	@%p7 bra 	$L__BB22_4;

	setp.gt.s32 	%p8, %r68, %r6;
	@%p8 bra 	$L__BB22_11;

	mul.lo.s32 	%r14, %r2, %r29;
	mul.lo.s32 	%r15, %r3, %r30;
	setp.gt.s32 	%p9, %r12, %r9;

$L__BB22_7:
	@%p9 bra 	$L__BB22_10;

	mad.lo.s32 	%r17, %r68, %r26, %r15;
	sub.s32 	%r59, %r4, %r68;
	div.s32 	%r60, %r59, %r32;
	mad.lo.s32 	%r18, %r60, %r28, %r14;
	mov.u32 	%r69, %r12;

$L__BB22_9:
	sub.s32 	%r61, %r7, %r69;
	div.s32 	%r62, %r61, %r33;
	add.s32 	%r63, %r17, %r69;
	mad.lo.s32 	%r64, %r63, %r31, %r18;
	add.s32 	%r65, %r64, %r62;
	mul.wide.s32 	%rd7, %r65, 8;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f64 	[%rd8], %fd1;
	add.s32 	%r69, %r69, %r33;
	setp.le.s32 	%p10, %r69, %r9;
	@%p10 bra 	$L__BB22_9;

$L__BB22_10:
	add.s32 	%r68, %r68, %r32;
	setp.le.s32 	%p11, %r68, %r6;
	@%p11 bra 	$L__BB22_7;

$L__BB22_11:
	ret;

}
	// .globl	dense_dense_im2col_f
.visible .entry dense_dense_im2col_f(
	.param .u64 dense_dense_im2col_f_param_0,
	.param .u64 dense_dense_im2col_f_param_1,
	.param .u32 dense_dense_im2col_f_param_2,
	.param .u32 dense_dense_im2col_f_param_3,
	.param .u32 dense_dense_im2col_f_param_4,
	.param .u32 dense_dense_im2col_f_param_5,
	.param .u32 dense_dense_im2col_f_param_6,
	.param .u32 dense_dense_im2col_f_param_7,
	.param .u32 dense_dense_im2col_f_param_8,
	.param .u32 dense_dense_im2col_f_param_9,
	.param .u32 dense_dense_im2col_f_param_10,
	.param .u32 dense_dense_im2col_f_param_11,
	.param .u32 dense_dense_im2col_f_param_12,
	.param .u32 dense_dense_im2col_f_param_13,
	.param .u32 dense_dense_im2col_f_param_14,
	.param .u32 dense_dense_im2col_f_param_15,
	.param .u32 dense_dense_im2col_f_param_16
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<70>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [dense_dense_im2col_f_param_0];
	ld.param.u64 	%rd3, [dense_dense_im2col_f_param_1];
	ld.param.u32 	%r36, [dense_dense_im2col_f_param_2];
	ld.param.u32 	%r22, [dense_dense_im2col_f_param_3];
	ld.param.u32 	%r23, [dense_dense_im2col_f_param_4];
	ld.param.u32 	%r24, [dense_dense_im2col_f_param_5];
	ld.param.u32 	%r25, [dense_dense_im2col_f_param_6];
	ld.param.u32 	%r26, [dense_dense_im2col_f_param_7];
	ld.param.u32 	%r27, [dense_dense_im2col_f_param_8];
	ld.param.u32 	%r28, [dense_dense_im2col_f_param_9];
	ld.param.u32 	%r29, [dense_dense_im2col_f_param_10];
	ld.param.u32 	%r30, [dense_dense_im2col_f_param_11];
	ld.param.u32 	%r31, [dense_dense_im2col_f_param_12];
	ld.param.u32 	%r32, [dense_dense_im2col_f_param_13];
	ld.param.u32 	%r33, [dense_dense_im2col_f_param_14];
	ld.param.u32 	%r34, [dense_dense_im2col_f_param_15];
	ld.param.u32 	%r35, [dense_dense_im2col_f_param_16];
	mov.u32 	%r37, %ntid.x;
	mov.u32 	%r38, %ctaid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	setp.ge.s32 	%p1, %r1, %r36;
	@%p1 bra 	$L__BB23_11;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	div.s32 	%r2, %r1, %r22;
	mul.lo.s32 	%r40, %r2, %r22;
	sub.s32 	%r41, %r1, %r40;
	div.s32 	%r3, %r41, %r23;
	mul.lo.s32 	%r42, %r3, %r23;
	sub.s32 	%r43, %r41, %r42;
	div.s32 	%r44, %r43, %r24;
	mul.lo.s32 	%r45, %r44, %r24;
	sub.s32 	%r46, %r43, %r45;
	add.s32 	%r4, %r44, %r34;
	mul.lo.s32 	%r47, %r32, %r27;
	sub.s32 	%r48, %r4, %r47;
	add.s32 	%r49, %r48, 1;
	max.s32 	%r66, %r49, 0;
	add.s32 	%r50, %r25, -1;
	min.s32 	%r6, %r50, %r4;
	add.s32 	%r7, %r46, %r35;
	mul.lo.s32 	%r51, %r33, %r28;
	sub.s32 	%r52, %r7, %r51;
	add.s32 	%r53, %r52, 1;
	max.s32 	%r67, %r53, 0;
	add.s32 	%r54, %r26, -1;
	min.s32 	%r9, %r54, %r7;

$L__BB23_2:
	mov.u32 	%r68, %r66;
	sub.s32 	%r55, %r4, %r68;
	rem.s32 	%r56, %r55, %r32;
	setp.ne.s32 	%p2, %r56, 0;
	setp.le.s32 	%p3, %r68, %r6;
	and.pred  	%p4, %p3, %p2;
	add.s32 	%r66, %r68, 1;
	@%p4 bra 	$L__BB23_2;

$L__BB23_4:
	mov.u32 	%r12, %r67;
	sub.s32 	%r57, %r7, %r12;
	rem.s32 	%r58, %r57, %r33;
	setp.ne.s32 	%p5, %r58, 0;
	setp.le.s32 	%p6, %r12, %r9;
	and.pred  	%p7, %p6, %p5;
	add.s32 	%r67, %r12, 1;
	@%p7 bra 	$L__BB23_4;

	setp.gt.s32 	%p8, %r68, %r6;
	@%p8 bra 	$L__BB23_11;

	mul.lo.s32 	%r14, %r2, %r29;
	mul.lo.s32 	%r15, %r3, %r30;
	setp.gt.s32 	%p9, %r12, %r9;

$L__BB23_7:
	@%p9 bra 	$L__BB23_10;

	mad.lo.s32 	%r17, %r68, %r26, %r15;
	sub.s32 	%r59, %r4, %r68;
	div.s32 	%r60, %r59, %r32;
	mad.lo.s32 	%r18, %r60, %r28, %r14;
	mov.u32 	%r69, %r12;

$L__BB23_9:
	sub.s32 	%r61, %r7, %r69;
	div.s32 	%r62, %r61, %r33;
	add.s32 	%r63, %r17, %r69;
	mad.lo.s32 	%r64, %r63, %r31, %r18;
	add.s32 	%r65, %r64, %r62;
	mul.wide.s32 	%rd7, %r65, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r69, %r69, %r33;
	setp.le.s32 	%p10, %r69, %r9;
	@%p10 bra 	$L__BB23_9;

$L__BB23_10:
	add.s32 	%r68, %r68, %r32;
	setp.le.s32 	%p11, %r68, %r6;
	@%p11 bra 	$L__BB23_7;

$L__BB23_11:
	ret;

}
	// .globl	reorg_knpq_d
.visible .entry reorg_knpq_d(
	.param .u64 reorg_knpq_d_param_0,
	.param .u64 reorg_knpq_d_param_1,
	.param .u32 reorg_knpq_d_param_2,
	.param .u32 reorg_knpq_d_param_3,
	.param .u32 reorg_knpq_d_param_4,
	.param .u32 reorg_knpq_d_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [reorg_knpq_d_param_0];
	ld.param.u64 	%rd2, [reorg_knpq_d_param_1];
	ld.param.u32 	%r5, [reorg_knpq_d_param_2];
	ld.param.u32 	%r2, [reorg_knpq_d_param_3];
	ld.param.u32 	%r3, [reorg_knpq_d_param_4];
	ld.param.u32 	%r4, [reorg_knpq_d_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r9, %r1, %r2;
	mul.lo.s32 	%r10, %r9, %r2;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r4;
	mul.lo.s32 	%r13, %r12, %r4;
	sub.s32 	%r14, %r11, %r13;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mul.lo.s32 	%r15, %r9, %r4;
	mad.lo.s32 	%r16, %r12, %r3, %r15;
	add.s32 	%r17, %r16, %r14;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r17, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB24_2:
	ret;

}
	// .globl	reorg_knpq_f
.visible .entry reorg_knpq_f(
	.param .u64 reorg_knpq_f_param_0,
	.param .u64 reorg_knpq_f_param_1,
	.param .u32 reorg_knpq_f_param_2,
	.param .u32 reorg_knpq_f_param_3,
	.param .u32 reorg_knpq_f_param_4,
	.param .u32 reorg_knpq_f_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [reorg_knpq_f_param_0];
	ld.param.u64 	%rd2, [reorg_knpq_f_param_1];
	ld.param.u32 	%r5, [reorg_knpq_f_param_2];
	ld.param.u32 	%r2, [reorg_knpq_f_param_3];
	ld.param.u32 	%r3, [reorg_knpq_f_param_4];
	ld.param.u32 	%r4, [reorg_knpq_f_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r9, %r1, %r2;
	mul.lo.s32 	%r10, %r9, %r2;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r4;
	mul.lo.s32 	%r13, %r12, %r4;
	sub.s32 	%r14, %r11, %r13;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mul.lo.s32 	%r15, %r9, %r4;
	mad.lo.s32 	%r16, %r12, %r3, %r15;
	add.s32 	%r17, %r16, %r14;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB25_2:
	ret;

}
	// .globl	slice_sparse_dense_row_d
.visible .entry slice_sparse_dense_row_d(
	.param .u64 slice_sparse_dense_row_d_param_0,
	.param .u64 slice_sparse_dense_row_d_param_1,
	.param .u64 slice_sparse_dense_row_d_param_2,
	.param .u64 slice_sparse_dense_row_d_param_3,
	.param .u32 slice_sparse_dense_row_d_param_4,
	.param .u32 slice_sparse_dense_row_d_param_5,
	.param .u32 slice_sparse_dense_row_d_param_6,
	.param .u32 slice_sparse_dense_row_d_param_7,
	.param .u32 slice_sparse_dense_row_d_param_8
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<25>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd9, [slice_sparse_dense_row_d_param_0];
	ld.param.u64 	%rd10, [slice_sparse_dense_row_d_param_1];
	ld.param.u64 	%rd11, [slice_sparse_dense_row_d_param_2];
	ld.param.u64 	%rd12, [slice_sparse_dense_row_d_param_3];
	ld.param.u32 	%r15, [slice_sparse_dense_row_d_param_4];
	ld.param.u32 	%r16, [slice_sparse_dense_row_d_param_5];
	ld.param.u32 	%r12, [slice_sparse_dense_row_d_param_6];
	ld.param.u32 	%r13, [slice_sparse_dense_row_d_param_7];
	ld.param.u32 	%r14, [slice_sparse_dense_row_d_param_8];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r18, %r17, %r19;
	add.s32 	%r2, %r1, %r15;
	setp.gt.s32 	%p1, %r2, %r16;
	@%p1 bra 	$L__BB26_6;

	cvta.to.global.u64 	%rd13, %rd10;
	mul.wide.s32 	%rd14, %r2, 4;
	add.s64 	%rd1, %rd13, %rd14;
	ld.global.u32 	%r23, [%rd1];
	ld.global.u32 	%r24, [%rd1+4];
	setp.ge.s32 	%p2, %r23, %r24;
	@%p2 bra 	$L__BB26_6;

	cvta.to.global.u64 	%rd2, %rd12;
	cvta.to.global.u64 	%rd15, %rd9;
	cvta.to.global.u64 	%rd16, %rd11;
	mul.lo.s32 	%r20, %r1, %r14;
	sub.s32 	%r5, %r20, %r12;
	mul.wide.s32 	%rd17, %r23, 8;
	add.s64 	%rd22, %rd15, %rd17;
	mul.wide.s32 	%rd18, %r23, 4;
	add.s64 	%rd21, %rd16, %rd18;

$L__BB26_3:
	ld.global.u32 	%r8, [%rd21];
	setp.lt.s32 	%p3, %r8, %r12;
	setp.gt.s32 	%p4, %r8, %r13;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB26_5;

	ld.global.f64 	%fd1, [%rd22];
	add.s32 	%r21, %r5, %r8;
	mul.wide.s32 	%rd19, %r21, 8;
	add.s64 	%rd20, %rd2, %rd19;
	st.global.f64 	[%rd20], %fd1;
	ld.global.u32 	%r24, [%rd1+4];

$L__BB26_5:
	add.s64 	%rd22, %rd22, 8;
	add.s64 	%rd21, %rd21, 4;
	add.s32 	%r23, %r23, 1;
	setp.lt.s32 	%p6, %r23, %r24;
	@%p6 bra 	$L__BB26_3;

$L__BB26_6:
	ret;

}
	// .globl	slice_sparse_dense_row_f
.visible .entry slice_sparse_dense_row_f(
	.param .u64 slice_sparse_dense_row_f_param_0,
	.param .u64 slice_sparse_dense_row_f_param_1,
	.param .u64 slice_sparse_dense_row_f_param_2,
	.param .u64 slice_sparse_dense_row_f_param_3,
	.param .u32 slice_sparse_dense_row_f_param_4,
	.param .u32 slice_sparse_dense_row_f_param_5,
	.param .u32 slice_sparse_dense_row_f_param_6,
	.param .u32 slice_sparse_dense_row_f_param_7,
	.param .u32 slice_sparse_dense_row_f_param_8
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd9, [slice_sparse_dense_row_f_param_0];
	ld.param.u64 	%rd10, [slice_sparse_dense_row_f_param_1];
	ld.param.u64 	%rd11, [slice_sparse_dense_row_f_param_2];
	ld.param.u64 	%rd12, [slice_sparse_dense_row_f_param_3];
	ld.param.u32 	%r15, [slice_sparse_dense_row_f_param_4];
	ld.param.u32 	%r16, [slice_sparse_dense_row_f_param_5];
	ld.param.u32 	%r12, [slice_sparse_dense_row_f_param_6];
	ld.param.u32 	%r13, [slice_sparse_dense_row_f_param_7];
	ld.param.u32 	%r14, [slice_sparse_dense_row_f_param_8];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r18, %r17, %r19;
	add.s32 	%r2, %r1, %r15;
	setp.gt.s32 	%p1, %r2, %r16;
	@%p1 bra 	$L__BB27_6;

	cvta.to.global.u64 	%rd13, %rd10;
	mul.wide.s32 	%rd14, %r2, 4;
	add.s64 	%rd1, %rd13, %rd14;
	ld.global.u32 	%r23, [%rd1];
	ld.global.u32 	%r24, [%rd1+4];
	setp.ge.s32 	%p2, %r23, %r24;
	@%p2 bra 	$L__BB27_6;

	cvta.to.global.u64 	%rd2, %rd12;
	cvta.to.global.u64 	%rd15, %rd9;
	cvta.to.global.u64 	%rd16, %rd11;
	mul.lo.s32 	%r20, %r1, %r14;
	sub.s32 	%r5, %r20, %r12;
	mul.wide.s32 	%rd17, %r23, 4;
	add.s64 	%rd21, %rd15, %rd17;
	add.s64 	%rd20, %rd16, %rd17;

$L__BB27_3:
	ld.global.u32 	%r8, [%rd20];
	setp.lt.s32 	%p3, %r8, %r12;
	setp.gt.s32 	%p4, %r8, %r13;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB27_5;

	ld.global.f32 	%f1, [%rd21];
	add.s32 	%r21, %r5, %r8;
	mul.wide.s32 	%rd18, %r21, 4;
	add.s64 	%rd19, %rd2, %rd18;
	st.global.f32 	[%rd19], %f1;
	ld.global.u32 	%r24, [%rd1+4];

$L__BB27_5:
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r23, %r23, 1;
	setp.lt.s32 	%p6, %r23, %r24;
	@%p6 bra 	$L__BB27_3;

$L__BB27_6:
	ret;

}
	// .globl	slice_sparse_dense_nnz_d
.visible .entry slice_sparse_dense_nnz_d(
	.param .u64 slice_sparse_dense_nnz_d_param_0,
	.param .u64 slice_sparse_dense_nnz_d_param_1,
	.param .u64 slice_sparse_dense_nnz_d_param_2,
	.param .u64 slice_sparse_dense_nnz_d_param_3,
	.param .u32 slice_sparse_dense_nnz_d_param_4,
	.param .u32 slice_sparse_dense_nnz_d_param_5,
	.param .u32 slice_sparse_dense_nnz_d_param_6,
	.param .u32 slice_sparse_dense_nnz_d_param_7,
	.param .u32 slice_sparse_dense_nnz_d_param_8
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd4, [slice_sparse_dense_nnz_d_param_0];
	ld.param.u64 	%rd7, [slice_sparse_dense_nnz_d_param_1];
	ld.param.u64 	%rd5, [slice_sparse_dense_nnz_d_param_2];
	ld.param.u64 	%rd6, [slice_sparse_dense_nnz_d_param_3];
	ld.param.u32 	%r5, [slice_sparse_dense_nnz_d_param_4];
	ld.param.u32 	%r9, [slice_sparse_dense_nnz_d_param_5];
	ld.param.u32 	%r6, [slice_sparse_dense_nnz_d_param_6];
	ld.param.u32 	%r7, [slice_sparse_dense_nnz_d_param_7];
	ld.param.u32 	%r8, [slice_sparse_dense_nnz_d_param_8];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r13, %r11, %r10, %r12;
	cvta.to.global.u64 	%rd1, %rd7;
	mul.wide.s32 	%rd8, %r5, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.u32 	%r14, [%rd9];
	add.s32 	%r1, %r13, %r14;
	mul.wide.s32 	%rd10, %r9, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.u32 	%r15, [%rd11+4];
	setp.ge.s32 	%p1, %r1, %r15;
	@%p1 bra 	$L__BB28_5;

	cvta.to.global.u64 	%rd12, %rd5;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r2, [%rd14];
	setp.lt.s32 	%p2, %r2, %r6;
	setp.gt.s32 	%p3, %r2, %r7;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB28_5;

	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd4;
	mov.u32 	%r21, %r5;

$L__BB28_3:
	mov.u32 	%r3, %r21;
	add.s32 	%r21, %r3, 1;
	mul.wide.s32 	%rd15, %r21, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.u32 	%r16, [%rd16];
	setp.le.s32 	%p5, %r16, %r1;
	@%p5 bra 	$L__BB28_3;

	mul.wide.s32 	%rd17, %r1, 8;
	add.s64 	%rd18, %rd3, %rd17;
	ld.global.f64 	%fd1, [%rd18];
	sub.s32 	%r17, %r3, %r5;
	mul.lo.s32 	%r18, %r17, %r8;
	sub.s32 	%r19, %r18, %r6;
	add.s32 	%r20, %r19, %r2;
	mul.wide.s32 	%rd19, %r20, 8;
	add.s64 	%rd20, %rd2, %rd19;
	st.global.f64 	[%rd20], %fd1;

$L__BB28_5:
	ret;

}
	// .globl	slice_sparse_dense_nnz_f
.visible .entry slice_sparse_dense_nnz_f(
	.param .u64 slice_sparse_dense_nnz_f_param_0,
	.param .u64 slice_sparse_dense_nnz_f_param_1,
	.param .u64 slice_sparse_dense_nnz_f_param_2,
	.param .u64 slice_sparse_dense_nnz_f_param_3,
	.param .u32 slice_sparse_dense_nnz_f_param_4,
	.param .u32 slice_sparse_dense_nnz_f_param_5,
	.param .u32 slice_sparse_dense_nnz_f_param_6,
	.param .u32 slice_sparse_dense_nnz_f_param_7,
	.param .u32 slice_sparse_dense_nnz_f_param_8
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd4, [slice_sparse_dense_nnz_f_param_0];
	ld.param.u64 	%rd7, [slice_sparse_dense_nnz_f_param_1];
	ld.param.u64 	%rd5, [slice_sparse_dense_nnz_f_param_2];
	ld.param.u64 	%rd6, [slice_sparse_dense_nnz_f_param_3];
	ld.param.u32 	%r5, [slice_sparse_dense_nnz_f_param_4];
	ld.param.u32 	%r9, [slice_sparse_dense_nnz_f_param_5];
	ld.param.u32 	%r6, [slice_sparse_dense_nnz_f_param_6];
	ld.param.u32 	%r7, [slice_sparse_dense_nnz_f_param_7];
	ld.param.u32 	%r8, [slice_sparse_dense_nnz_f_param_8];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r13, %r11, %r10, %r12;
	cvta.to.global.u64 	%rd1, %rd7;
	mul.wide.s32 	%rd8, %r5, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.u32 	%r14, [%rd9];
	add.s32 	%r1, %r13, %r14;
	mul.wide.s32 	%rd10, %r9, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.u32 	%r15, [%rd11+4];
	setp.ge.s32 	%p1, %r1, %r15;
	@%p1 bra 	$L__BB29_5;

	cvta.to.global.u64 	%rd12, %rd5;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r2, [%rd14];
	setp.lt.s32 	%p2, %r2, %r6;
	setp.gt.s32 	%p3, %r2, %r7;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB29_5;

	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd4;
	mov.u32 	%r21, %r5;

$L__BB29_3:
	mov.u32 	%r3, %r21;
	add.s32 	%r21, %r3, 1;
	mul.wide.s32 	%rd15, %r21, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.u32 	%r16, [%rd16];
	setp.le.s32 	%p5, %r16, %r1;
	@%p5 bra 	$L__BB29_3;

	add.s64 	%rd18, %rd3, %rd13;
	ld.global.f32 	%f1, [%rd18];
	sub.s32 	%r17, %r3, %r5;
	mul.lo.s32 	%r18, %r17, %r8;
	sub.s32 	%r19, %r18, %r6;
	add.s32 	%r20, %r19, %r2;
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd20, %rd2, %rd19;
	st.global.f32 	[%rd20], %f1;

$L__BB29_5:
	ret;

}
	// .globl	slice_dense_dense_d
.visible .entry slice_dense_dense_d(
	.param .u64 slice_dense_dense_d_param_0,
	.param .u64 slice_dense_dense_d_param_1,
	.param .u32 slice_dense_dense_d_param_2,
	.param .u32 slice_dense_dense_d_param_3,
	.param .u32 slice_dense_dense_d_param_4,
	.param .u32 slice_dense_dense_d_param_5,
	.param .u32 slice_dense_dense_d_param_6,
	.param .u32 slice_dense_dense_d_param_7,
	.param .u32 slice_dense_dense_d_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<15>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [slice_dense_dense_d_param_0];
	ld.param.u64 	%rd2, [slice_dense_dense_d_param_1];
	ld.param.u32 	%r3, [slice_dense_dense_d_param_2];
	ld.param.u32 	%r4, [slice_dense_dense_d_param_4];
	ld.param.u32 	%r5, [slice_dense_dense_d_param_6];
	ld.param.u32 	%r7, [slice_dense_dense_d_param_7];
	ld.param.u32 	%r6, [slice_dense_dense_d_param_8];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	div.s32 	%r2, %r1, %r6;
	setp.ge.s32 	%p1, %r2, %r7;
	setp.lt.s32 	%p2, %r6, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB30_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r11, %r2, %r3;
	rem.s32 	%r12, %r1, %r6;
	add.s32 	%r13, %r12, %r4;
	mad.lo.s32 	%r14, %r11, %r5, %r13;
	mul.wide.s32 	%rd4, %r14, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB30_2:
	ret;

}
	// .globl	slice_dense_dense_f
.visible .entry slice_dense_dense_f(
	.param .u64 slice_dense_dense_f_param_0,
	.param .u64 slice_dense_dense_f_param_1,
	.param .u32 slice_dense_dense_f_param_2,
	.param .u32 slice_dense_dense_f_param_3,
	.param .u32 slice_dense_dense_f_param_4,
	.param .u32 slice_dense_dense_f_param_5,
	.param .u32 slice_dense_dense_f_param_6,
	.param .u32 slice_dense_dense_f_param_7,
	.param .u32 slice_dense_dense_f_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [slice_dense_dense_f_param_0];
	ld.param.u64 	%rd2, [slice_dense_dense_f_param_1];
	ld.param.u32 	%r3, [slice_dense_dense_f_param_2];
	ld.param.u32 	%r4, [slice_dense_dense_f_param_4];
	ld.param.u32 	%r5, [slice_dense_dense_f_param_6];
	ld.param.u32 	%r7, [slice_dense_dense_f_param_7];
	ld.param.u32 	%r6, [slice_dense_dense_f_param_8];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	div.s32 	%r2, %r1, %r6;
	setp.ge.s32 	%p1, %r2, %r7;
	setp.lt.s32 	%p2, %r6, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r11, %r2, %r3;
	rem.s32 	%r12, %r1, %r6;
	add.s32 	%r13, %r12, %r4;
	mad.lo.s32 	%r14, %r11, %r5, %r13;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB31_2:
	ret;

}
	// .globl	copy_u2l_dense_d
.visible .entry copy_u2l_dense_d(
	.param .u64 copy_u2l_dense_d_param_0,
	.param .u32 copy_u2l_dense_d_param_1,
	.param .u32 copy_u2l_dense_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [copy_u2l_dense_d_param_0];
	ld.param.u32 	%r3, [copy_u2l_dense_d_param_1];
	ld.param.u32 	%r4, [copy_u2l_dense_d_param_2];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	div.s32 	%r8, %r1, %r3;
	mul.lo.s32 	%r9, %r8, %r3;
	sub.s32 	%r10, %r1, %r9;
	mad.lo.s32 	%r2, %r10, %r3, %r8;
	setp.le.s32 	%p1, %r10, %r8;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	mul.wide.s32 	%rd5, %r2, 8;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.f64 	[%rd6], %fd1;

$L__BB32_2:
	ret;

}
	// .globl	copy_u2l_dense_f
.visible .entry copy_u2l_dense_f(
	.param .u64 copy_u2l_dense_f_param_0,
	.param .u32 copy_u2l_dense_f_param_1,
	.param .u32 copy_u2l_dense_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [copy_u2l_dense_f_param_0];
	ld.param.u32 	%r3, [copy_u2l_dense_f_param_1];
	ld.param.u32 	%r4, [copy_u2l_dense_f_param_2];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	div.s32 	%r8, %r1, %r3;
	mul.lo.s32 	%r9, %r8, %r3;
	sub.s32 	%r10, %r1, %r9;
	mad.lo.s32 	%r2, %r10, %r3, %r8;
	setp.le.s32 	%p1, %r10, %r8;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB33_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.wide.s32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.f32 	[%rd6], %f1;

$L__BB33_2:
	ret;

}
	// .globl	relu_d
.visible .entry relu_d(
	.param .u64 relu_d_param_0,
	.param .u64 relu_d_param_1,
	.param .u32 relu_d_param_2,
	.param .u32 relu_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [relu_d_param_0];
	ld.param.u64 	%rd2, [relu_d_param_1];
	ld.param.u32 	%r2, [relu_d_param_2];
	ld.param.u32 	%r3, [relu_d_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd3;

$L__BB34_2:
	ret;

}
	// .globl	relu_f
.visible .entry relu_f(
	.param .u64 relu_f_param_0,
	.param .u64 relu_f_param_1,
	.param .u32 relu_f_param_2,
	.param .u32 relu_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [relu_f_param_0];
	ld.param.u64 	%rd2, [relu_f_param_1];
	ld.param.u32 	%r2, [relu_f_param_2];
	ld.param.u32 	%r3, [relu_f_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.f64.f32 	%fd1, %f1;
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvt.rn.f32.f64 	%f2, %fd3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB35_2:
	ret;

}
	// .globl	relu_backward_d
.visible .entry relu_backward_d(
	.param .u64 relu_backward_d_param_0,
	.param .u64 relu_backward_d_param_1,
	.param .u64 relu_backward_d_param_2,
	.param .u32 relu_backward_d_param_3,
	.param .u32 relu_backward_d_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [relu_backward_d_param_0];
	ld.param.u64 	%rd2, [relu_backward_d_param_1];
	ld.param.u64 	%rd3, [relu_backward_d_param_2];
	ld.param.u32 	%r2, [relu_backward_d_param_3];
	ld.param.u32 	%r3, [relu_backward_d_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB36_4;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd4, [%rd6];
	setp.leu.f64 	%p4, %fd4, 0d0000000000000000;
	mov.f64 	%fd5, 0d0000000000000000;
	@%p4 bra 	$L__BB36_3;

	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd9, %rd7, %rd5;
	ld.global.f64 	%fd5, [%rd9];

$L__BB36_3:
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd12, %rd10, %rd5;
	st.global.f64 	[%rd12], %fd5;

$L__BB36_4:
	ret;

}
	// .globl	relu_backward_f
.visible .entry relu_backward_f(
	.param .u64 relu_backward_f_param_0,
	.param .u64 relu_backward_f_param_1,
	.param .u64 relu_backward_f_param_2,
	.param .u32 relu_backward_f_param_3,
	.param .u32 relu_backward_f_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [relu_backward_f_param_0];
	ld.param.u64 	%rd2, [relu_backward_f_param_1];
	ld.param.u64 	%rd3, [relu_backward_f_param_2];
	ld.param.u32 	%r2, [relu_backward_f_param_3];
	ld.param.u32 	%r3, [relu_backward_f_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB37_4;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f4, [%rd6];
	setp.leu.f32 	%p4, %f4, 0f00000000;
	mov.f32 	%f5, 0f00000000;
	@%p4 bra 	$L__BB37_3;

	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd9, %rd7, %rd5;
	ld.global.f32 	%f5, [%rd9];

$L__BB37_3:
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd12, %rd10, %rd5;
	st.global.f32 	[%rd12], %f5;

$L__BB37_4:
	ret;

}
	// .globl	inplace_add_d
.visible .entry inplace_add_d(
	.param .u64 inplace_add_d_param_0,
	.param .u64 inplace_add_d_param_1,
	.param .u32 inplace_add_d_param_2,
	.param .u32 inplace_add_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [inplace_add_d_param_0];
	ld.param.u64 	%rd2, [inplace_add_d_param_1];
	ld.param.u32 	%r2, [inplace_add_d_param_2];
	ld.param.u32 	%r3, [inplace_add_d_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB38_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd1, [%rd7];
	ld.global.f64 	%fd2, [%rd5];
	add.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd7], %fd3;

$L__BB38_2:
	ret;

}
	// .globl	inplace_add_f
.visible .entry inplace_add_f(
	.param .u64 inplace_add_f_param_0,
	.param .u64 inplace_add_f_param_1,
	.param .u32 inplace_add_f_param_2,
	.param .u32 inplace_add_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [inplace_add_f_param_0];
	ld.param.u64 	%rd2, [inplace_add_f_param_1];
	ld.param.u32 	%r2, [inplace_add_f_param_2];
	ld.param.u32 	%r3, [inplace_add_f_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	div.s32 	%r7, %r1, %r3;
	setp.ge.s32 	%p1, %r7, %r2;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB39_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd7], %f3;

$L__BB39_2:
	ret;

}
	// .globl	bias_add_d
.visible .entry bias_add_d(
	.param .u64 bias_add_d_param_0,
	.param .u64 bias_add_d_param_1,
	.param .u64 bias_add_d_param_2,
	.param .u32 bias_add_d_param_3,
	.param .u32 bias_add_d_param_4,
	.param .u32 bias_add_d_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [bias_add_d_param_0];
	ld.param.u64 	%rd2, [bias_add_d_param_1];
	ld.param.u64 	%rd3, [bias_add_d_param_2];
	ld.param.u32 	%r4, [bias_add_d_param_3];
	ld.param.u32 	%r2, [bias_add_d_param_4];
	ld.param.u32 	%r3, [bias_add_d_param_5];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	div.s32 	%r8, %r1, %r2;
	setp.ge.s32 	%p1, %r8, %r4;
	setp.lt.s32 	%p2, %r2, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB40_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	rem.s32 	%r9, %r1, %r2;
	div.s32 	%r10, %r9, %r3;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd9];
	ld.global.f64 	%fd2, [%rd6];
	add.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f64 	[%rd11], %fd3;

$L__BB40_2:
	ret;

}
	// .globl	bias_add_f
.visible .entry bias_add_f(
	.param .u64 bias_add_f_param_0,
	.param .u64 bias_add_f_param_1,
	.param .u64 bias_add_f_param_2,
	.param .u32 bias_add_f_param_3,
	.param .u32 bias_add_f_param_4,
	.param .u32 bias_add_f_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [bias_add_f_param_0];
	ld.param.u64 	%rd2, [bias_add_f_param_1];
	ld.param.u64 	%rd3, [bias_add_f_param_2];
	ld.param.u32 	%r4, [bias_add_f_param_3];
	ld.param.u32 	%r2, [bias_add_f_param_4];
	ld.param.u32 	%r3, [bias_add_f_param_5];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	div.s32 	%r8, %r1, %r2;
	setp.ge.s32 	%p1, %r8, %r4;
	setp.lt.s32 	%p2, %r2, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB41_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	rem.s32 	%r9, %r1, %r2;
	div.s32 	%r10, %r9, %r3;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB41_2:
	ret;

}
	// .globl	daxpy_matrix_vector_d
.visible .entry daxpy_matrix_vector_d(
	.param .u64 daxpy_matrix_vector_d_param_0,
	.param .u64 daxpy_matrix_vector_d_param_1,
	.param .f64 daxpy_matrix_vector_d_param_2,
	.param .u64 daxpy_matrix_vector_d_param_3,
	.param .u32 daxpy_matrix_vector_d_param_4,
	.param .u32 daxpy_matrix_vector_d_param_5,
	.param .u32 daxpy_matrix_vector_d_param_6,
	.param .u32 daxpy_matrix_vector_d_param_7
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd3, [daxpy_matrix_vector_d_param_0];
	ld.param.u64 	%rd5, [daxpy_matrix_vector_d_param_1];
	ld.param.f64 	%fd2, [daxpy_matrix_vector_d_param_2];
	ld.param.u64 	%rd4, [daxpy_matrix_vector_d_param_3];
	ld.param.u32 	%r5, [daxpy_matrix_vector_d_param_4];
	ld.param.u32 	%r3, [daxpy_matrix_vector_d_param_5];
	ld.param.u32 	%r4, [daxpy_matrix_vector_d_param_6];
	cvta.to.global.u64 	%rd1, %rd5;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r9, %r7, %r6, %r8;
	div.s32 	%r1, %r9, %r3;
	mul.lo.s32 	%r10, %r1, %r3;
	sub.s32 	%r2, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r5;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB42_4;

	cvta.to.global.u64 	%rd6, %rd4;
	mad.lo.s32 	%r11, %r1, %r3, %r2;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r11, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd9];
	add.s64 	%rd2, %rd6, %rd8;
	setp.eq.s32 	%p4, %r4, 1;
	@%p4 bra 	$L__BB42_3;
	bra.uni 	$L__BB42_2;

$L__BB42_3:
	mul.wide.s32 	%rd12, %r2, 8;
	add.s64 	%rd13, %rd1, %rd12;
	ld.global.f64 	%fd5, [%rd13];
	fma.rn.f64 	%fd6, %fd5, %fd2, %fd1;
	st.global.f64 	[%rd2], %fd6;
	bra.uni 	$L__BB42_4;

$L__BB42_2:
	mul.wide.s32 	%rd10, %r1, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f64 	%fd3, [%rd11];
	fma.rn.f64 	%fd4, %fd3, %fd2, %fd1;
	st.global.f64 	[%rd2], %fd4;

$L__BB42_4:
	ret;

}
	// .globl	daxpy_matrix_vector_f
.visible .entry daxpy_matrix_vector_f(
	.param .u64 daxpy_matrix_vector_f_param_0,
	.param .u64 daxpy_matrix_vector_f_param_1,
	.param .f64 daxpy_matrix_vector_f_param_2,
	.param .u64 daxpy_matrix_vector_f_param_3,
	.param .u32 daxpy_matrix_vector_f_param_4,
	.param .u32 daxpy_matrix_vector_f_param_5,
	.param .u32 daxpy_matrix_vector_f_param_6,
	.param .u32 daxpy_matrix_vector_f_param_7
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd3, [daxpy_matrix_vector_f_param_0];
	ld.param.u64 	%rd5, [daxpy_matrix_vector_f_param_1];
	ld.param.f64 	%fd2, [daxpy_matrix_vector_f_param_2];
	ld.param.u64 	%rd4, [daxpy_matrix_vector_f_param_3];
	ld.param.u32 	%r5, [daxpy_matrix_vector_f_param_4];
	ld.param.u32 	%r3, [daxpy_matrix_vector_f_param_5];
	ld.param.u32 	%r4, [daxpy_matrix_vector_f_param_6];
	cvta.to.global.u64 	%rd1, %rd5;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r9, %r7, %r6, %r8;
	div.s32 	%r1, %r9, %r3;
	mul.lo.s32 	%r10, %r1, %r3;
	sub.s32 	%r2, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r5;
	setp.lt.s32 	%p2, %r3, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB43_4;

	cvta.to.global.u64 	%rd6, %rd4;
	mad.lo.s32 	%r11, %r1, %r3, %r2;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r11, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	cvt.f64.f32 	%fd1, %f1;
	add.s64 	%rd2, %rd6, %rd8;
	setp.eq.s32 	%p4, %r4, 1;
	@%p4 bra 	$L__BB43_3;
	bra.uni 	$L__BB43_2;

$L__BB43_3:
	mul.wide.s32 	%rd12, %r2, 4;
	add.s64 	%rd13, %rd1, %rd12;
	ld.global.f32 	%f4, [%rd13];
	cvt.f64.f32 	%fd5, %f4;
	fma.rn.f64 	%fd6, %fd5, %fd2, %fd1;
	cvt.rn.f32.f64 	%f5, %fd6;
	st.global.f32 	[%rd2], %f5;
	bra.uni 	$L__BB43_4;

$L__BB43_2:
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f32 	%f2, [%rd11];
	cvt.f64.f32 	%fd3, %f2;
	fma.rn.f64 	%fd4, %fd3, %fd2, %fd1;
	cvt.rn.f32.f64 	%f3, %fd4;
	st.global.f32 	[%rd2], %f3;

$L__BB43_4:
	ret;

}
	// .globl	bias_multiply_d
.visible .entry bias_multiply_d(
	.param .u64 bias_multiply_d_param_0,
	.param .u64 bias_multiply_d_param_1,
	.param .u64 bias_multiply_d_param_2,
	.param .u32 bias_multiply_d_param_3,
	.param .u32 bias_multiply_d_param_4,
	.param .u32 bias_multiply_d_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [bias_multiply_d_param_0];
	ld.param.u64 	%rd2, [bias_multiply_d_param_1];
	ld.param.u64 	%rd3, [bias_multiply_d_param_2];
	ld.param.u32 	%r4, [bias_multiply_d_param_3];
	ld.param.u32 	%r2, [bias_multiply_d_param_4];
	ld.param.u32 	%r3, [bias_multiply_d_param_5];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	div.s32 	%r8, %r1, %r2;
	setp.ge.s32 	%p1, %r8, %r4;
	setp.lt.s32 	%p2, %r2, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	rem.s32 	%r9, %r1, %r2;
	div.s32 	%r10, %r9, %r3;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd9];
	ld.global.f64 	%fd2, [%rd6];
	mul.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f64 	[%rd11], %fd3;

$L__BB44_2:
	ret;

}
	// .globl	bias_multiply_f
.visible .entry bias_multiply_f(
	.param .u64 bias_multiply_f_param_0,
	.param .u64 bias_multiply_f_param_1,
	.param .u64 bias_multiply_f_param_2,
	.param .u32 bias_multiply_f_param_3,
	.param .u32 bias_multiply_f_param_4,
	.param .u32 bias_multiply_f_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [bias_multiply_f_param_0];
	ld.param.u64 	%rd2, [bias_multiply_f_param_1];
	ld.param.u64 	%rd3, [bias_multiply_f_param_2];
	ld.param.u32 	%r4, [bias_multiply_f_param_3];
	ld.param.u32 	%r2, [bias_multiply_f_param_4];
	ld.param.u32 	%r3, [bias_multiply_f_param_5];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	div.s32 	%r8, %r1, %r2;
	setp.ge.s32 	%p1, %r8, %r4;
	setp.lt.s32 	%p2, %r2, 0;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	rem.s32 	%r9, %r1, %r2;
	div.s32 	%r10, %r9, %r3;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB45_2:
	ret;

}
	// .globl	matrix_matrix_cellwise_op_d
.visible .entry matrix_matrix_cellwise_op_d(
	.param .u64 matrix_matrix_cellwise_op_d_param_0,
	.param .u64 matrix_matrix_cellwise_op_d_param_1,
	.param .u64 matrix_matrix_cellwise_op_d_param_2,
	.param .u32 matrix_matrix_cellwise_op_d_param_3,
	.param .u32 matrix_matrix_cellwise_op_d_param_4,
	.param .u32 matrix_matrix_cellwise_op_d_param_5,
	.param .u32 matrix_matrix_cellwise_op_d_param_6,
	.param .u32 matrix_matrix_cellwise_op_d_param_7
)
{
	.reg .pred 	%p<86>;
	.reg .b32 	%r<59>;
	.reg .f64 	%fd<52>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd2, [matrix_matrix_cellwise_op_d_param_0];
	ld.param.u64 	%rd3, [matrix_matrix_cellwise_op_d_param_1];
	ld.param.u64 	%rd4, [matrix_matrix_cellwise_op_d_param_2];
	ld.param.u32 	%r14, [matrix_matrix_cellwise_op_d_param_3];
	ld.param.u32 	%r10, [matrix_matrix_cellwise_op_d_param_4];
	ld.param.u32 	%r11, [matrix_matrix_cellwise_op_d_param_5];
	ld.param.u32 	%r12, [matrix_matrix_cellwise_op_d_param_6];
	ld.param.u32 	%r13, [matrix_matrix_cellwise_op_d_param_7];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	div.s32 	%r2, %r1, %r10;
	setp.ge.s32 	%p2, %r2, %r14;
	setp.lt.s32 	%p3, %r10, 0;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB46_66;

	rem.s32 	%r18, %r1, %r10;
	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r3, %r2, %r10, %r18;
	setp.eq.s32 	%p5, %r11, 2;
	selp.b32 	%r19, %r18, %r3, %p5;
	setp.eq.s32 	%p6, %r11, 1;
	selp.b32 	%r20, %r2, %r19, %p6;
	setp.eq.s32 	%p7, %r12, 2;
	selp.b32 	%r21, %r18, %r3, %p7;
	setp.eq.s32 	%p8, %r12, 1;
	selp.b32 	%r22, %r2, %r21, %p8;
	mul.wide.s32 	%rd6, %r20, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd7];
	cvta.to.global.u64 	%rd8, %rd3;
	mul.wide.s32 	%rd9, %r22, 8;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f64 	%fd2, [%rd10];
	mov.f64 	%fd51, 0d7FEFFFFFFFFFFFFF;
	setp.gt.s32 	%p9, %r13, 8;
	@%p9 bra 	$L__BB46_14;
	bra.uni 	$L__BB46_2;

$L__BB46_14:
	setp.gt.s32 	%p10, %r13, 13;
	@%p10 bra 	$L__BB46_21;

	setp.gt.s32 	%p17, %r13, 10;
	@%p17 bra 	$L__BB46_18;
	bra.uni 	$L__BB46_16;

$L__BB46_18:
	setp.eq.s32 	%p18, %r13, 11;
	@%p18 bra 	$L__BB46_39;

	setp.eq.s32 	%p19, %r13, 12;
	@%p19 bra 	$L__BB46_38;

	setp.eq.s32 	%p20, %r13, 13;
	@%p20 bra 	$L__BB46_37;
	bra.uni 	$L__BB46_65;

$L__BB46_37:
	cvt.rni.s64.f64 	%rd13, %fd1;
	cvt.rni.s64.f64 	%rd14, %fd2;
	cvt.u32.u64 	%r32, %rd13;
	cvt.u32.u64 	%r33, %rd14;
	and.b32  	%r34, %r33, %r32;
	setp.eq.s32 	%p48, %r34, 0;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p48;
	bra.uni 	$L__BB46_65;

$L__BB46_2:
	setp.gt.s32 	%p23, %r13, 3;
	@%p23 bra 	$L__BB46_8;
	bra.uni 	$L__BB46_3;

$L__BB46_8:
	setp.gt.s32 	%p24, %r13, 5;
	@%p24 bra 	$L__BB46_11;
	bra.uni 	$L__BB46_9;

$L__BB46_11:
	setp.eq.s32 	%p25, %r13, 6;
	@%p25 bra 	$L__BB46_44;

	setp.eq.s32 	%p26, %r13, 7;
	@%p26 bra 	$L__BB46_43;

	setp.eq.s32 	%p27, %r13, 8;
	@%p27 bra 	$L__BB46_42;
	bra.uni 	$L__BB46_65;

$L__BB46_42:
	setp.ltu.f64 	%p51, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p51;
	bra.uni 	$L__BB46_65;

$L__BB46_21:
	setp.gt.s32 	%p11, %r13, 15;
	@%p11 bra 	$L__BB46_24;
	bra.uni 	$L__BB46_22;

$L__BB46_24:
	setp.eq.s32 	%p12, %r13, 16;
	@%p12 bra 	$L__BB46_34;

	setp.eq.s32 	%p13, %r13, 17;
	@%p13 bra 	$L__BB46_30;

	setp.ne.s32 	%p14, %r13, 18;
	@%p14 bra 	$L__BB46_65;

	div.rn.f64 	%fd51, %fd1, %fd2;
	abs.f64 	%fd36, %fd51;
	setp.gtu.f64 	%p35, %fd36, 0d7FF0000000000000;
	@%p35 bra 	$L__BB46_65;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd51;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd51;
	}
	and.b32  	%r25, %r24, 2147483647;
	setp.eq.s32 	%p36, %r25, 2146435072;
	setp.eq.s32 	%p37, %r23, 0;
	and.pred  	%p38, %p36, %p37;
	@%p38 bra 	$L__BB46_65;

	cvt.rmi.f64.f64 	%fd51, %fd51;
	bra.uni 	$L__BB46_65;

$L__BB46_3:
	setp.gt.s32 	%p30, %r13, 1;
	@%p30 bra 	$L__BB46_6;

	setp.eq.s32 	%p33, %r13, 0;
	@%p33 bra 	$L__BB46_64;

	setp.eq.s32 	%p34, %r13, 1;
	@%p34 bra 	$L__BB46_63;
	bra.uni 	$L__BB46_65;

$L__BB46_63:
	sub.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_16:
	setp.eq.s32 	%p21, %r13, 9;
	@%p21 bra 	$L__BB46_41;

	setp.eq.s32 	%p22, %r13, 10;
	@%p22 bra 	$L__BB46_40;
	bra.uni 	$L__BB46_65;

$L__BB46_40:
	setp.eq.f64 	%p49, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p49;
	bra.uni 	$L__BB46_65;

$L__BB46_9:
	setp.eq.s32 	%p28, %r13, 4;
	@%p28 bra 	$L__BB46_46;

	setp.eq.s32 	%p29, %r13, 5;
	@%p29 bra 	$L__BB46_45;
	bra.uni 	$L__BB46_65;

$L__BB46_45:
	setp.geu.f64 	%p54, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p54;
	bra.uni 	$L__BB46_65;

$L__BB46_22:
	setp.eq.s32 	%p15, %r13, 14;
	@%p15 bra 	$L__BB46_36;

	setp.eq.s32 	%p16, %r13, 15;
	@%p16 bra 	$L__BB46_35;
	bra.uni 	$L__BB46_65;

$L__BB46_35:
	mul.f64 	%fd42, %fd1, %fd2;
	mov.f64 	%fd43, 0d3FF0000000000000;
	sub.f64 	%fd51, %fd43, %fd42;
	bra.uni 	$L__BB46_65;

$L__BB46_6:
	setp.eq.s32 	%p31, %r13, 2;
	@%p31 bra 	$L__BB46_62;

	setp.eq.s32 	%p32, %r13, 3;
	@%p32 bra 	$L__BB46_61;
	bra.uni 	$L__BB46_65;

$L__BB46_61:
	div.rn.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_38:
	max.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_44:
	setp.gtu.f64 	%p53, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p53;
	bra.uni 	$L__BB46_65;

$L__BB46_43:
	setp.leu.f64 	%p52, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p52;
	bra.uni 	$L__BB46_65;

$L__BB46_30:
	setp.eq.f64 	%p39, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p40, %fd2, 0d8000000000000000;
	or.pred  	%p41, %p39, %p40;
	mov.f64 	%fd51, 0d7FF8000000000000;
	@%p41 bra 	$L__BB46_65;

	div.rn.f64 	%fd51, %fd1, %fd2;
	abs.f64 	%fd38, %fd51;
	setp.gtu.f64 	%p42, %fd38, 0d7FF0000000000000;
	@%p42 bra 	$L__BB46_65;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd51;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd51;
	}
	and.b32  	%r28, %r27, 2147483647;
	setp.eq.s32 	%p43, %r28, 2146435072;
	setp.eq.s32 	%p44, %r26, 0;
	and.pred  	%p45, %p43, %p44;
	@%p45 bra 	$L__BB46_65;

	cvt.rmi.f64.f64 	%fd39, %fd51;
	mul.f64 	%fd40, %fd2, %fd39;
	sub.f64 	%fd51, %fd1, %fd40;
	bra.uni 	$L__BB46_65;

$L__BB46_64:
	add.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_62:
	mul.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_39:
	min.f64 	%fd51, %fd1, %fd2;
	bra.uni 	$L__BB46_65;

$L__BB46_34:
	setp.neu.f64 	%p46, %fd1, 0d0000000000000000;
	sub.f64 	%fd41, %fd1, %fd2;
	selp.f64 	%fd51, %fd41, 0d0000000000000000, %p46;
	bra.uni 	$L__BB46_65;

$L__BB46_41:
	setp.neu.f64 	%p50, %fd1, %fd2;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p50;
	bra.uni 	$L__BB46_65;

$L__BB46_46:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd2;
	}
	bfe.u32 	%r35, %r5, 20, 11;
	add.s32 	%r36, %r35, -1012;
	mov.b64 	%rd15, %fd2;
	shl.b64 	%rd1, %rd15, %r36;
	setp.eq.s64 	%p1, %rd1, -9223372036854775808;
	setp.ne.s64 	%p55, %rd1, -9223372036854775808;
	abs.f64 	%fd19, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd19;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd49, [retval0+0];
	} // callseq 0
	setp.gt.s32 	%p56, %r4, -1;
	or.pred  	%p57, %p56, %p55;
	@%p57 bra 	$L__BB46_48;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r37}, %fd49;
	}
	xor.b32  	%r38, %r37, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r39, %temp}, %fd49;
	}
	mov.b64 	%fd49, {%r39, %r38};

$L__BB46_48:
	setp.eq.f64 	%p58, %fd1, 0d0000000000000000;
	@%p58 bra 	$L__BB46_52;
	bra.uni 	$L__BB46_49;

$L__BB46_52:
	abs.f64 	%fd46, %fd2;
	setp.neu.f64 	%p62, %fd46, 0d3FE0000000000000;
	and.pred  	%p63, %p1, %p62;
	selp.u32 	%r58, 1, 0, %p63;
	selp.b32 	%r40, %r4, 0, %p63;
	mov.u32 	%r41, 0;
	or.b32  	%r42, %r40, 2146435072;
	setp.lt.s32 	%p64, %r5, 0;
	selp.b32 	%r43, %r42, %r40, %p64;
	mov.b64 	%fd49, {%r41, %r43};
	bra.uni 	$L__BB46_53;

$L__BB46_36:
	cvt.rni.s64.f64 	%rd11, %fd1;
	cvt.rni.s64.f64 	%rd12, %fd2;
	cvt.u32.u64 	%r29, %rd11;
	cvt.u32.u64 	%r30, %rd12;
	or.b32  	%r31, %r30, %r29;
	setp.eq.s32 	%p47, %r31, 0;
	selp.f64 	%fd51, 0d0000000000000000, 0d3FF0000000000000, %p47;
	bra.uni 	$L__BB46_65;

$L__BB46_49:
	selp.u32 	%r58, 1, 0, %p1;
	@%p56 bra 	$L__BB46_53;

	cvt.rzi.f64.f64 	%fd44, %fd2;
	setp.eq.f64 	%p60, %fd44, %fd2;
	@%p60 bra 	$L__BB46_53;

	mov.f64 	%fd49, 0dFFF8000000000000;

$L__BB46_53:
	add.f64 	%fd25, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd25;
	}
	and.b32  	%r45, %r44, 2146435072;
	setp.ne.s32 	%p65, %r45, 2146435072;
	mov.f64 	%fd50, %fd49;
	@%p65 bra 	$L__BB46_60;

	setp.gtu.f64 	%p66, %fd19, 0d7FF0000000000000;
	mov.f64 	%fd50, %fd25;
	@%p66 bra 	$L__BB46_60;

	abs.f64 	%fd47, %fd2;
	setp.gtu.f64 	%p67, %fd47, 0d7FF0000000000000;
	mov.f64 	%fd50, %fd25;
	@%p67 bra 	$L__BB46_60;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd2;
	}
	and.b32  	%r9, %r5, 2147483647;
	setp.eq.s32 	%p68, %r9, 2146435072;
	setp.eq.s32 	%p69, %r46, 0;
	and.pred  	%p70, %p68, %p69;
	@%p70 bra 	$L__BB46_59;
	bra.uni 	$L__BB46_57;

$L__BB46_59:
	setp.gt.f64 	%p80, %fd19, 0d3FF0000000000000;
	selp.b32 	%r53, 2146435072, 0, %p80;
	mov.u32 	%r54, 0;
	xor.b32  	%r55, %r53, 2146435072;
	setp.lt.s32 	%p81, %r5, 0;
	selp.b32 	%r56, %r55, %r53, %p81;
	setp.eq.f64 	%p82, %fd1, 0dBFF0000000000000;
	selp.b32 	%r57, 1072693248, %r56, %p82;
	mov.b64 	%fd50, {%r54, %r57};
	bra.uni 	$L__BB46_60;

$L__BB46_57:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd1;
	}
	and.b32  	%r48, %r4, 2147483647;
	setp.ne.s32 	%p71, %r48, 2146435072;
	setp.ne.s32 	%p72, %r47, 0;
	or.pred  	%p73, %p71, %p72;
	mov.f64 	%fd50, %fd49;
	@%p73 bra 	$L__BB46_60;

	setp.lt.s32 	%p74, %r4, 0;
	mov.u32 	%r49, 0;
	setp.gt.s32 	%p75, %r5, -1;
	selp.b32 	%r50, 2146435072, 0, %p75;
	setp.ne.s32 	%p76, %r58, 0;
	and.pred  	%p77, %p74, %p76;
	setp.ne.s32 	%p78, %r9, 1071644672;
	and.pred  	%p79, %p78, %p77;
	or.b32  	%r51, %r50, -2147483648;
	selp.b32 	%r52, %r51, %r50, %p79;
	mov.b64 	%fd50, {%r49, %r52};

$L__BB46_60:
	setp.eq.f64 	%p83, %fd2, 0d0000000000000000;
	setp.eq.f64 	%p84, %fd1, 0d3FF0000000000000;
	or.pred  	%p85, %p84, %p83;
	selp.f64 	%fd51, 0d3FF0000000000000, %fd50, %p85;

$L__BB46_65:
	cvta.to.global.u64 	%rd16, %rd4;
	mul.wide.s32 	%rd17, %r3, 8;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.f64 	[%rd18], %fd51;
	bar.sync 	0;

$L__BB46_66:
	ret;

}
	// .globl	matrix_matrix_cellwise_op_f
.visible .entry matrix_matrix_cellwise_op_f(
	.param .u64 matrix_matrix_cellwise_op_f_param_0,
	.param .u64 matrix_matrix_cellwise_op_f_param_1,
	.param .u64 matrix_matrix_cellwise_op_f_param_2,
	.param .u32 matrix_matrix_cellwise_op_f_param_3,
	.param .u32 matrix_matrix_cellwise_op_f_param_4,
	.param .u32 matrix_matrix_cellwise_op_f_param_5,
	.param .u32 matrix_matrix_cellwise_op_f_param_6,
	.param .u32 matrix_matrix_cellwise_op_f_param_7
)
{
	.reg .pred 	%p<79>;
	.reg .f32 	%f<159>;
	.reg .b32 	%r<75>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [matrix_matrix_cellwise_op_f_param_0];
	ld.param.u64 	%rd2, [matrix_matrix_cellwise_op_f_param_1];
	ld.param.u64 	%rd3, [matrix_matrix_cellwise_op_f_param_2];
	ld.param.u32 	%r8, [matrix_matrix_cellwise_op_f_param_3];
	ld.param.u32 	%r4, [matrix_matrix_cellwise_op_f_param_4];
	ld.param.u32 	%r5, [matrix_matrix_cellwise_op_f_param_5];
	ld.param.u32 	%r6, [matrix_matrix_cellwise_op_f_param_6];
	ld.param.u32 	%r7, [matrix_matrix_cellwise_op_f_param_7];
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	div.s32 	%r2, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r8;
	setp.lt.s32 	%p3, %r4, 0;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB47_64;

	rem.s32 	%r12, %r1, %r4;
	cvta.to.global.u64 	%rd4, %rd1;
	mad.lo.s32 	%r3, %r2, %r4, %r12;
	setp.eq.s32 	%p5, %r5, 2;
	selp.b32 	%r13, %r12, %r3, %p5;
	setp.eq.s32 	%p6, %r5, 1;
	selp.b32 	%r14, %r2, %r13, %p6;
	setp.eq.s32 	%p7, %r6, 2;
	selp.b32 	%r15, %r12, %r3, %p7;
	setp.eq.s32 	%p8, %r6, 1;
	selp.b32 	%r16, %r2, %r15, %p8;
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r16, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f2, [%rd9];
	mov.f32 	%f158, 0f7F7FFFFF;
	setp.gt.s32 	%p9, %r7, 8;
	@%p9 bra 	$L__BB47_14;
	bra.uni 	$L__BB47_2;

$L__BB47_14:
	setp.gt.s32 	%p10, %r7, 13;
	@%p10 bra 	$L__BB47_21;

	setp.gt.s32 	%p17, %r7, 10;
	@%p17 bra 	$L__BB47_18;
	bra.uni 	$L__BB47_16;

$L__BB47_18:
	setp.eq.s32 	%p18, %r7, 11;
	@%p18 bra 	$L__BB47_37;

	setp.eq.s32 	%p19, %r7, 12;
	@%p19 bra 	$L__BB47_36;

	setp.eq.s32 	%p20, %r7, 13;
	@%p20 bra 	$L__BB47_35;
	bra.uni 	$L__BB47_63;

$L__BB47_35:
	mul.f32 	%f58, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r34, %f58;
	cvt.rzi.f32.f32 	%f59, %f58;
	mul.f32 	%f60, %f59, 0f4F800000;
	sub.f32 	%f61, %f1, %f60;
	mov.b32 	%r35, %f61;
	setp.gt.u32 	%p44, %r35, -1090519040;
	selp.u32 	%r36, 1, 0, %p44;
	abs.f32 	%f62, %f61;
	cvt.rni.u32.f32 	%r37, %f62;
	neg.s32 	%r38, %r37;
	selp.b32 	%r39, %r38, %r37, %p44;
	sub.s32 	%r40, %r34, %r36;
	mov.b64 	%fd3, {%r39, %r40};
	mov.b64 	%rd12, %fd3;
	mul.f32 	%f63, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r41, %f63;
	cvt.rzi.f32.f32 	%f64, %f63;
	mul.f32 	%f65, %f64, 0f4F800000;
	sub.f32 	%f66, %f2, %f65;
	mov.b32 	%r42, %f66;
	setp.gt.u32 	%p45, %r42, -1090519040;
	selp.u32 	%r43, 1, 0, %p45;
	abs.f32 	%f67, %f66;
	cvt.rni.u32.f32 	%r44, %f67;
	neg.s32 	%r45, %r44;
	selp.b32 	%r46, %r45, %r44, %p45;
	sub.s32 	%r47, %r41, %r43;
	mov.b64 	%fd4, {%r46, %r47};
	mov.b64 	%rd13, %fd4;
	cvt.u32.u64 	%r48, %rd12;
	cvt.u32.u64 	%r49, %rd13;
	and.b32  	%r50, %r49, %r48;
	setp.eq.s32 	%p46, %r50, 0;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p46;
	bra.uni 	$L__BB47_63;

$L__BB47_2:
	setp.gt.s32 	%p23, %r7, 3;
	@%p23 bra 	$L__BB47_8;
	bra.uni 	$L__BB47_3;

$L__BB47_8:
	setp.gt.s32 	%p24, %r7, 5;
	@%p24 bra 	$L__BB47_11;
	bra.uni 	$L__BB47_9;

$L__BB47_11:
	setp.eq.s32 	%p25, %r7, 6;
	@%p25 bra 	$L__BB47_42;

	setp.eq.s32 	%p26, %r7, 7;
	@%p26 bra 	$L__BB47_41;

	setp.eq.s32 	%p27, %r7, 8;
	@%p27 bra 	$L__BB47_40;
	bra.uni 	$L__BB47_63;

$L__BB47_40:
	setp.ltu.f32 	%p49, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p49;
	bra.uni 	$L__BB47_63;

$L__BB47_21:
	setp.gt.s32 	%p11, %r7, 15;
	@%p11 bra 	$L__BB47_24;
	bra.uni 	$L__BB47_22;

$L__BB47_24:
	setp.eq.s32 	%p12, %r7, 16;
	@%p12 bra 	$L__BB47_32;

	setp.eq.s32 	%p13, %r7, 17;
	@%p13 bra 	$L__BB47_29;

	setp.ne.s32 	%p14, %r7, 18;
	@%p14 bra 	$L__BB47_63;

	div.rn.f32 	%f158, %f1, %f2;
	abs.f32 	%f40, %f158;
	setp.geu.f32 	%p35, %f40, 0f7F800000;
	@%p35 bra 	$L__BB47_63;

	cvt.rmi.f32.f32 	%f158, %f158;
	bra.uni 	$L__BB47_63;

$L__BB47_3:
	setp.gt.s32 	%p30, %r7, 1;
	@%p30 bra 	$L__BB47_6;

	setp.eq.s32 	%p33, %r7, 0;
	@%p33 bra 	$L__BB47_62;

	setp.eq.s32 	%p34, %r7, 1;
	@%p34 bra 	$L__BB47_61;
	bra.uni 	$L__BB47_63;

$L__BB47_61:
	sub.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_16:
	setp.eq.s32 	%p21, %r7, 9;
	@%p21 bra 	$L__BB47_39;

	setp.eq.s32 	%p22, %r7, 10;
	@%p22 bra 	$L__BB47_38;
	bra.uni 	$L__BB47_63;

$L__BB47_38:
	setp.eq.f32 	%p47, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p47;
	bra.uni 	$L__BB47_63;

$L__BB47_9:
	setp.eq.s32 	%p28, %r7, 4;
	@%p28 bra 	$L__BB47_44;

	setp.eq.s32 	%p29, %r7, 5;
	@%p29 bra 	$L__BB47_43;
	bra.uni 	$L__BB47_63;

$L__BB47_43:
	setp.geu.f32 	%p52, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p52;
	bra.uni 	$L__BB47_63;

$L__BB47_22:
	setp.eq.s32 	%p15, %r7, 14;
	@%p15 bra 	$L__BB47_34;

	setp.eq.s32 	%p16, %r7, 15;
	@%p16 bra 	$L__BB47_33;
	bra.uni 	$L__BB47_63;

$L__BB47_33:
	mul.f32 	%f46, %f1, %f2;
	mov.f32 	%f47, 0f3F800000;
	sub.f32 	%f158, %f47, %f46;
	bra.uni 	$L__BB47_63;

$L__BB47_6:
	setp.eq.s32 	%p31, %r7, 2;
	@%p31 bra 	$L__BB47_60;

	setp.eq.s32 	%p32, %r7, 3;
	@%p32 bra 	$L__BB47_59;
	bra.uni 	$L__BB47_63;

$L__BB47_59:
	div.rn.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_37:
	min.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_36:
	max.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_42:
	setp.gtu.f32 	%p51, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p51;
	bra.uni 	$L__BB47_63;

$L__BB47_41:
	setp.leu.f32 	%p50, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p50;
	bra.uni 	$L__BB47_63;

$L__BB47_32:
	setp.neu.f32 	%p40, %f1, 0f00000000;
	sub.f32 	%f45, %f1, %f2;
	selp.f32 	%f158, %f45, 0f00000000, %p40;
	bra.uni 	$L__BB47_63;

$L__BB47_29:
	setp.eq.f32 	%p36, %f2, 0f00000000;
	setp.eq.f32 	%p37, %f2, 0f80000000;
	or.pred  	%p38, %p36, %p37;
	mov.f32 	%f158, 0f7FC00000;
	@%p38 bra 	$L__BB47_63;

	div.rn.f32 	%f158, %f1, %f2;
	abs.f32 	%f42, %f158;
	setp.geu.f32 	%p39, %f42, 0f7F800000;
	@%p39 bra 	$L__BB47_63;

	cvt.rmi.f32.f32 	%f43, %f158;
	mul.f32 	%f44, %f2, %f43;
	sub.f32 	%f158, %f1, %f44;
	bra.uni 	$L__BB47_63;

$L__BB47_62:
	add.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_39:
	setp.neu.f32 	%p48, %f1, %f2;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p48;
	bra.uni 	$L__BB47_63;

$L__BB47_44:
	mul.f32 	%f69, %f2, 0f3F000000;
	cvt.rzi.f32.f32 	%f70, %f69;
	add.f32 	%f71, %f70, %f70;
	sub.f32 	%f72, %f2, %f71;
	abs.f32 	%f19, %f72;
	abs.f32 	%f20, %f1;
	setp.lt.f32 	%p53, %f20, 0f00800000;
	mul.f32 	%f73, %f20, 0f4B800000;
	selp.f32 	%f74, %f73, %f20, %p53;
	selp.f32 	%f75, 0fC3170000, 0fC2FE0000, %p53;
	mov.b32 	%r51, %f74;
	and.b32  	%r52, %r51, 8388607;
	or.b32  	%r53, %r52, 1065353216;
	mov.b32 	%f76, %r53;
	shr.u32 	%r54, %r51, 23;
	cvt.rn.f32.u32 	%f77, %r54;
	add.f32 	%f78, %f75, %f77;
	setp.gt.f32 	%p54, %f76, 0f3FB504F3;
	mul.f32 	%f79, %f76, 0f3F000000;
	add.f32 	%f80, %f78, 0f3F800000;
	selp.f32 	%f81, %f80, %f78, %p54;
	selp.f32 	%f82, %f79, %f76, %p54;
	add.f32 	%f83, %f82, 0fBF800000;
	add.f32 	%f84, %f82, 0f3F800000;
	rcp.approx.ftz.f32 	%f85, %f84;
	add.f32 	%f86, %f83, %f83;
	mul.f32 	%f87, %f86, %f85;
	mul.f32 	%f88, %f87, %f87;
	mov.f32 	%f89, 0f3C4CAF63;
	mov.f32 	%f90, 0f3B18F0FE;
	fma.rn.f32 	%f91, %f90, %f88, %f89;
	mov.f32 	%f92, 0f3DAAAABD;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mul.rn.f32 	%f94, %f93, %f88;
	mul.rn.f32 	%f95, %f94, %f87;
	sub.f32 	%f96, %f83, %f87;
	add.f32 	%f97, %f96, %f96;
	neg.f32 	%f98, %f87;
	fma.rn.f32 	%f99, %f98, %f83, %f97;
	mul.rn.f32 	%f100, %f85, %f99;
	add.f32 	%f101, %f95, %f87;
	sub.f32 	%f102, %f87, %f101;
	add.f32 	%f103, %f95, %f102;
	add.f32 	%f104, %f100, %f103;
	add.f32 	%f105, %f101, %f104;
	sub.f32 	%f106, %f101, %f105;
	add.f32 	%f107, %f104, %f106;
	mov.f32 	%f108, 0f3F317200;
	mul.rn.f32 	%f109, %f81, %f108;
	mov.f32 	%f110, 0f35BFBE8E;
	mul.rn.f32 	%f111, %f81, %f110;
	add.f32 	%f112, %f109, %f105;
	sub.f32 	%f113, %f109, %f112;
	add.f32 	%f114, %f105, %f113;
	add.f32 	%f115, %f107, %f114;
	add.f32 	%f116, %f111, %f115;
	add.f32 	%f117, %f112, %f116;
	sub.f32 	%f118, %f112, %f117;
	add.f32 	%f119, %f116, %f118;
	abs.f32 	%f21, %f2;
	setp.gt.f32 	%p55, %f21, 0f77F684DF;
	mul.f32 	%f120, %f2, 0f39000000;
	selp.f32 	%f121, %f120, %f2, %p55;
	mul.rn.f32 	%f122, %f121, %f117;
	neg.f32 	%f123, %f122;
	fma.rn.f32 	%f124, %f121, %f117, %f123;
	fma.rn.f32 	%f125, %f121, %f119, %f124;
	mov.f32 	%f126, 0f00000000;
	fma.rn.f32 	%f127, %f126, %f117, %f125;
	add.rn.f32 	%f128, %f122, %f127;
	neg.f32 	%f129, %f128;
	add.rn.f32 	%f130, %f122, %f129;
	add.rn.f32 	%f131, %f130, %f127;
	mov.b32 	%r55, %f128;
	setp.eq.s32 	%p56, %r55, 1118925336;
	add.s32 	%r56, %r55, -1;
	mov.b32 	%f132, %r56;
	add.f32 	%f133, %f131, 0f37000000;
	selp.f32 	%f22, %f133, %f131, %p56;
	selp.f32 	%f134, %f132, %f128, %p56;
	mov.f32 	%f135, 0f3FB8AA3B;
	mul.rn.f32 	%f136, %f134, %f135;
	cvt.rzi.f32.f32 	%f137, %f136;
	abs.f32 	%f138, %f137;
	setp.gt.f32 	%p57, %f138, 0f42FC0000;
	mov.b32 	%r57, %f137;
	and.b32  	%r58, %r57, -2147483648;
	or.b32  	%r59, %r58, 1123811328;
	mov.b32 	%f139, %r59;
	selp.f32 	%f140, %f139, %f137, %p57;
	mov.f32 	%f141, 0fBF317218;
	fma.rn.f32 	%f142, %f140, %f141, %f134;
	mov.f32 	%f143, 0f3102E308;
	fma.rn.f32 	%f144, %f140, %f143, %f142;
	mul.f32 	%f145, %f144, 0f3FB8AA3B;
	add.f32 	%f146, %f140, 0f4B40007F;
	mov.b32 	%r60, %f146;
	shl.b32 	%r61, %r60, 23;
	mov.b32 	%f147, %r61;
	ex2.approx.ftz.f32 	%f148, %f145;
	mul.f32 	%f23, %f148, %f147;
	setp.eq.f32 	%p58, %f23, 0f7F800000;
	mov.f32 	%f155, 0f7F800000;
	@%p58 bra 	$L__BB47_46;

	fma.rn.f32 	%f155, %f23, %f22, %f23;

$L__BB47_46:
	setp.lt.f32 	%p59, %f1, 0f00000000;
	setp.eq.f32 	%p60, %f19, 0f3F800000;
	and.pred  	%p1, %p59, %p60;
	setp.eq.f32 	%p61, %f1, 0f00000000;
	@%p61 bra 	$L__BB47_50;
	bra.uni 	$L__BB47_47;

$L__BB47_50:
	add.f32 	%f152, %f1, %f1;
	mov.b32 	%r64, %f152;
	selp.b32 	%r65, %r64, 0, %p60;
	or.b32  	%r66, %r65, 2139095040;
	setp.lt.f32 	%p65, %f2, 0f00000000;
	selp.b32 	%r67, %r66, %r65, %p65;
	mov.b32 	%f157, %r67;
	bra.uni 	$L__BB47_51;

$L__BB47_34:
	mul.f32 	%f48, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r17, %f48;
	cvt.rzi.f32.f32 	%f49, %f48;
	mul.f32 	%f50, %f49, 0f4F800000;
	sub.f32 	%f51, %f1, %f50;
	mov.b32 	%r18, %f51;
	setp.gt.u32 	%p41, %r18, -1090519040;
	selp.u32 	%r19, 1, 0, %p41;
	abs.f32 	%f52, %f51;
	cvt.rni.u32.f32 	%r20, %f52;
	neg.s32 	%r21, %r20;
	selp.b32 	%r22, %r21, %r20, %p41;
	sub.s32 	%r23, %r17, %r19;
	mov.b64 	%fd1, {%r22, %r23};
	mov.b64 	%rd10, %fd1;
	mul.f32 	%f53, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r24, %f53;
	cvt.rzi.f32.f32 	%f54, %f53;
	mul.f32 	%f55, %f54, 0f4F800000;
	sub.f32 	%f56, %f2, %f55;
	mov.b32 	%r25, %f56;
	setp.gt.u32 	%p42, %r25, -1090519040;
	selp.u32 	%r26, 1, 0, %p42;
	abs.f32 	%f57, %f56;
	cvt.rni.u32.f32 	%r27, %f57;
	neg.s32 	%r28, %r27;
	selp.b32 	%r29, %r28, %r27, %p42;
	sub.s32 	%r30, %r24, %r26;
	mov.b64 	%fd2, {%r29, %r30};
	mov.b64 	%rd11, %fd2;
	cvt.u32.u64 	%r31, %rd10;
	cvt.u32.u64 	%r32, %rd11;
	or.b32  	%r33, %r32, %r31;
	setp.eq.s32 	%p43, %r33, 0;
	selp.f32 	%f158, 0f00000000, 0f3F800000, %p43;
	bra.uni 	$L__BB47_63;

$L__BB47_60:
	mul.f32 	%f158, %f1, %f2;
	bra.uni 	$L__BB47_63;

$L__BB47_47:
	mov.b32 	%r62, %f155;
	xor.b32  	%r63, %r62, -2147483648;
	mov.b32 	%f149, %r63;
	selp.f32 	%f157, %f149, %f155, %p1;
	setp.geu.f32 	%p62, %f1, 0f00000000;
	@%p62 bra 	$L__BB47_51;

	cvt.rzi.f32.f32 	%f150, %f2;
	setp.eq.f32 	%p63, %f150, %f2;
	@%p63 bra 	$L__BB47_51;

	mov.f32 	%f157, 0f7FFFFFFF;

$L__BB47_51:
	add.f32 	%f153, %f20, %f21;
	mov.b32 	%r68, %f153;
	setp.lt.s32 	%p66, %r68, 2139095040;
	@%p66 bra 	$L__BB47_58;

	setp.gtu.f32 	%p67, %f20, 0f7F800000;
	setp.gtu.f32 	%p68, %f21, 0f7F800000;
	or.pred  	%p69, %p67, %p68;
	@%p69 bra 	$L__BB47_57;
	bra.uni 	$L__BB47_53;

$L__BB47_57:
	add.f32 	%f157, %f1, %f2;
	bra.uni 	$L__BB47_58;

$L__BB47_53:
	setp.eq.f32 	%p70, %f21, 0f7F800000;
	@%p70 bra 	$L__BB47_56;
	bra.uni 	$L__BB47_54;

$L__BB47_56:
	setp.gt.f32 	%p73, %f20, 0f3F800000;
	selp.b32 	%r72, 2139095040, 0, %p73;
	xor.b32  	%r73, %r72, 2139095040;
	setp.lt.f32 	%p74, %f2, 0f00000000;
	selp.b32 	%r74, %r73, %r72, %p74;
	mov.b32 	%f154, %r74;
	setp.eq.f32 	%p75, %f1, 0fBF800000;
	selp.f32 	%f157, 0f3F800000, %f154, %p75;
	bra.uni 	$L__BB47_58;

$L__BB47_54:
	setp.neu.f32 	%p71, %f20, 0f7F800000;
	@%p71 bra 	$L__BB47_58;

	setp.ge.f32 	%p72, %f2, 0f00000000;
	selp.b32 	%r69, 2139095040, 0, %p72;
	or.b32  	%r70, %r69, -2147483648;
	selp.b32 	%r71, %r70, %r69, %p1;
	mov.b32 	%f157, %r71;

$L__BB47_58:
	setp.eq.f32 	%p76, %f2, 0f00000000;
	setp.eq.f32 	%p77, %f1, 0f3F800000;
	or.pred  	%p78, %p77, %p76;
	selp.f32 	%f158, 0f3F800000, %f157, %p78;

$L__BB47_63:
	cvta.to.global.u64 	%rd14, %rd3;
	mul.wide.s32 	%rd15, %r3, 4;
	add.s64 	%rd16, %rd14, %rd15;
	st.global.f32 	[%rd16], %f158;
	bar.sync 	0;

$L__BB47_64:
	ret;

}
	// .globl	matrix_scalar_op_d
.visible .entry matrix_scalar_op_d(
	.param .u64 matrix_scalar_op_d_param_0,
	.param .f64 matrix_scalar_op_d_param_1,
	.param .u64 matrix_scalar_op_d_param_2,
	.param .u32 matrix_scalar_op_d_param_3,
	.param .u32 matrix_scalar_op_d_param_4,
	.param .u32 matrix_scalar_op_d_param_5
)
{
	.reg .pred 	%p<159>;
	.reg .b32 	%r<92>;
	.reg .f64 	%fd<101>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd4, [matrix_scalar_op_d_param_0];
	ld.param.f64 	%fd66, [matrix_scalar_op_d_param_1];
	ld.param.u64 	%rd5, [matrix_scalar_op_d_param_2];
	ld.param.u32 	%r16, [matrix_scalar_op_d_param_3];
	ld.param.u32 	%r14, [matrix_scalar_op_d_param_4];
	ld.param.u32 	%r15, [matrix_scalar_op_d_param_5];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r18, %r17, %r19;
	setp.ge.s32 	%p3, %r1, %r16;
	@%p3 bra 	$L__BB48_132;

	cvta.to.global.u64 	%rd6, %rd5;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd9];
	add.s64 	%rd1, %rd6, %rd8;
	setp.eq.s32 	%p4, %r15, 0;
	@%p4 bra 	$L__BB48_67;

	mov.f64 	%fd96, 0d7FEFFFFFFFFFFFFF;
	setp.gt.s32 	%p5, %r14, 8;
	@%p5 bra 	$L__BB48_15;
	bra.uni 	$L__BB48_3;

$L__BB48_15:
	setp.gt.s32 	%p6, %r14, 13;
	@%p6 bra 	$L__BB48_22;

	setp.gt.s32 	%p13, %r14, 10;
	@%p13 bra 	$L__BB48_19;
	bra.uni 	$L__BB48_17;

$L__BB48_19:
	setp.eq.s32 	%p14, %r14, 11;
	@%p14 bra 	$L__BB48_40;

	setp.eq.s32 	%p15, %r14, 12;
	@%p15 bra 	$L__BB48_39;

	setp.eq.s32 	%p16, %r14, 13;
	@%p16 bra 	$L__BB48_38;
	bra.uni 	$L__BB48_66;

$L__BB48_38:
	cvt.rni.s64.f64 	%rd12, %fd66;
	cvt.rni.s64.f64 	%rd13, %fd1;
	cvt.u32.u64 	%r29, %rd12;
	cvt.u32.u64 	%r30, %rd13;
	and.b32  	%r31, %r30, %r29;
	setp.eq.s32 	%p44, %r31, 0;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p44;
	bra.uni 	$L__BB48_66;

$L__BB48_67:
	mov.f64 	%fd100, 0d7FEFFFFFFFFFFFFF;
	setp.gt.s32 	%p82, %r14, 8;
	@%p82 bra 	$L__BB48_80;
	bra.uni 	$L__BB48_68;

$L__BB48_80:
	setp.gt.s32 	%p83, %r14, 13;
	@%p83 bra 	$L__BB48_87;

	setp.gt.s32 	%p90, %r14, 10;
	@%p90 bra 	$L__BB48_84;
	bra.uni 	$L__BB48_82;

$L__BB48_84:
	setp.eq.s32 	%p91, %r14, 11;
	@%p91 bra 	$L__BB48_105;

	setp.eq.s32 	%p92, %r14, 12;
	@%p92 bra 	$L__BB48_104;

	setp.eq.s32 	%p93, %r14, 13;
	@%p93 bra 	$L__BB48_103;
	bra.uni 	$L__BB48_131;

$L__BB48_103:
	cvt.rni.s64.f64 	%rd17, %fd1;
	cvt.rni.s64.f64 	%rd18, %fd66;
	cvt.u32.u64 	%r64, %rd17;
	cvt.u32.u64 	%r65, %rd18;
	and.b32  	%r66, %r65, %r64;
	setp.eq.s32 	%p121, %r66, 0;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p121;
	bra.uni 	$L__BB48_131;

$L__BB48_3:
	setp.gt.s32 	%p19, %r14, 3;
	@%p19 bra 	$L__BB48_9;
	bra.uni 	$L__BB48_4;

$L__BB48_9:
	setp.gt.s32 	%p20, %r14, 5;
	@%p20 bra 	$L__BB48_12;
	bra.uni 	$L__BB48_10;

$L__BB48_12:
	setp.eq.s32 	%p21, %r14, 6;
	@%p21 bra 	$L__BB48_45;

	setp.eq.s32 	%p22, %r14, 7;
	@%p22 bra 	$L__BB48_44;

	setp.eq.s32 	%p23, %r14, 8;
	@%p23 bra 	$L__BB48_43;
	bra.uni 	$L__BB48_66;

$L__BB48_43:
	setp.gtu.f64 	%p47, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p47;
	bra.uni 	$L__BB48_66;

$L__BB48_68:
	setp.gt.s32 	%p96, %r14, 3;
	@%p96 bra 	$L__BB48_74;
	bra.uni 	$L__BB48_69;

$L__BB48_74:
	setp.gt.s32 	%p97, %r14, 5;
	@%p97 bra 	$L__BB48_77;
	bra.uni 	$L__BB48_75;

$L__BB48_77:
	setp.eq.s32 	%p98, %r14, 6;
	@%p98 bra 	$L__BB48_110;

	setp.eq.s32 	%p99, %r14, 7;
	@%p99 bra 	$L__BB48_109;

	setp.eq.s32 	%p100, %r14, 8;
	@%p100 bra 	$L__BB48_108;
	bra.uni 	$L__BB48_131;

$L__BB48_108:
	setp.ltu.f64 	%p124, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p124;
	bra.uni 	$L__BB48_131;

$L__BB48_22:
	setp.gt.s32 	%p7, %r14, 15;
	@%p7 bra 	$L__BB48_25;
	bra.uni 	$L__BB48_23;

$L__BB48_25:
	setp.eq.s32 	%p8, %r14, 16;
	@%p8 bra 	$L__BB48_35;

	setp.eq.s32 	%p9, %r14, 17;
	@%p9 bra 	$L__BB48_31;

	setp.ne.s32 	%p10, %r14, 18;
	@%p10 bra 	$L__BB48_66;

	div.rn.f64 	%fd96, %fd66, %fd1;
	abs.f64 	%fd68, %fd96;
	setp.gtu.f64 	%p31, %fd68, 0d7FF0000000000000;
	@%p31 bra 	$L__BB48_66;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd96;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd96;
	}
	and.b32  	%r22, %r21, 2147483647;
	setp.eq.s32 	%p32, %r22, 2146435072;
	setp.eq.s32 	%p33, %r20, 0;
	and.pred  	%p34, %p32, %p33;
	@%p34 bra 	$L__BB48_66;

	cvt.rmi.f64.f64 	%fd96, %fd96;
	bra.uni 	$L__BB48_66;

$L__BB48_4:
	setp.gt.s32 	%p26, %r14, 1;
	@%p26 bra 	$L__BB48_7;

	setp.eq.s32 	%p29, %r14, 0;
	@%p29 bra 	$L__BB48_65;

	setp.eq.s32 	%p30, %r14, 1;
	@%p30 bra 	$L__BB48_64;
	bra.uni 	$L__BB48_66;

$L__BB48_64:
	sub.f64 	%fd96, %fd66, %fd1;
	bra.uni 	$L__BB48_66;

$L__BB48_87:
	setp.gt.s32 	%p84, %r14, 15;
	@%p84 bra 	$L__BB48_90;
	bra.uni 	$L__BB48_88;

$L__BB48_90:
	setp.eq.s32 	%p85, %r14, 16;
	@%p85 bra 	$L__BB48_100;

	setp.eq.s32 	%p86, %r14, 17;
	@%p86 bra 	$L__BB48_96;

	setp.ne.s32 	%p87, %r14, 18;
	@%p87 bra 	$L__BB48_131;

	div.rn.f64 	%fd100, %fd1, %fd66;
	abs.f64 	%fd81, %fd100;
	setp.gtu.f64 	%p108, %fd81, 0d7FF0000000000000;
	@%p108 bra 	$L__BB48_131;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r55, %temp}, %fd100;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd100;
	}
	and.b32  	%r57, %r56, 2147483647;
	setp.eq.s32 	%p109, %r57, 2146435072;
	setp.eq.s32 	%p110, %r55, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	$L__BB48_131;

	cvt.rmi.f64.f64 	%fd100, %fd100;
	bra.uni 	$L__BB48_131;

$L__BB48_69:
	setp.gt.s32 	%p103, %r14, 1;
	@%p103 bra 	$L__BB48_72;

	setp.eq.s32 	%p106, %r14, 0;
	@%p106 bra 	$L__BB48_130;

	setp.eq.s32 	%p107, %r14, 1;
	@%p107 bra 	$L__BB48_129;
	bra.uni 	$L__BB48_131;

$L__BB48_129:
	sub.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_17:
	setp.eq.s32 	%p17, %r14, 9;
	@%p17 bra 	$L__BB48_42;

	setp.eq.s32 	%p18, %r14, 10;
	@%p18 bra 	$L__BB48_41;
	bra.uni 	$L__BB48_66;

$L__BB48_41:
	setp.eq.f64 	%p45, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p45;
	bra.uni 	$L__BB48_66;

$L__BB48_10:
	setp.eq.s32 	%p24, %r14, 4;
	@%p24 bra 	$L__BB48_47;

	setp.eq.s32 	%p25, %r14, 5;
	@%p25 bra 	$L__BB48_46;
	bra.uni 	$L__BB48_66;

$L__BB48_46:
	setp.leu.f64 	%p50, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p50;
	bra.uni 	$L__BB48_66;

$L__BB48_23:
	setp.eq.s32 	%p11, %r14, 14;
	@%p11 bra 	$L__BB48_37;

	setp.eq.s32 	%p12, %r14, 15;
	@%p12 bra 	$L__BB48_36;
	bra.uni 	$L__BB48_66;

$L__BB48_36:
	mul.f64 	%fd74, %fd1, %fd66;
	mov.f64 	%fd75, 0d3FF0000000000000;
	sub.f64 	%fd96, %fd75, %fd74;
	bra.uni 	$L__BB48_66;

$L__BB48_7:
	setp.eq.s32 	%p27, %r14, 2;
	@%p27 bra 	$L__BB48_63;

	setp.eq.s32 	%p28, %r14, 3;
	@%p28 bra 	$L__BB48_62;
	bra.uni 	$L__BB48_66;

$L__BB48_62:
	div.rn.f64 	%fd96, %fd66, %fd1;
	bra.uni 	$L__BB48_66;

$L__BB48_82:
	setp.eq.s32 	%p94, %r14, 9;
	@%p94 bra 	$L__BB48_107;

	setp.eq.s32 	%p95, %r14, 10;
	@%p95 bra 	$L__BB48_106;
	bra.uni 	$L__BB48_131;

$L__BB48_106:
	setp.eq.f64 	%p122, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p122;
	bra.uni 	$L__BB48_131;

$L__BB48_75:
	setp.eq.s32 	%p101, %r14, 4;
	@%p101 bra 	$L__BB48_112;

	setp.eq.s32 	%p102, %r14, 5;
	@%p102 bra 	$L__BB48_111;
	bra.uni 	$L__BB48_131;

$L__BB48_111:
	setp.geu.f64 	%p127, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p127;
	bra.uni 	$L__BB48_131;

$L__BB48_88:
	setp.eq.s32 	%p88, %r14, 14;
	@%p88 bra 	$L__BB48_102;

	setp.eq.s32 	%p89, %r14, 15;
	@%p89 bra 	$L__BB48_101;
	bra.uni 	$L__BB48_131;

$L__BB48_101:
	mul.f64 	%fd87, %fd1, %fd66;
	mov.f64 	%fd88, 0d3FF0000000000000;
	sub.f64 	%fd100, %fd88, %fd87;
	bra.uni 	$L__BB48_131;

$L__BB48_72:
	setp.eq.s32 	%p104, %r14, 2;
	@%p104 bra 	$L__BB48_128;

	setp.eq.s32 	%p105, %r14, 3;
	@%p105 bra 	$L__BB48_127;
	bra.uni 	$L__BB48_131;

$L__BB48_127:
	div.rn.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_40:
	min.f64 	%fd96, %fd66, %fd1;
	bra.uni 	$L__BB48_66;

$L__BB48_39:
	max.f64 	%fd96, %fd66, %fd1;
	bra.uni 	$L__BB48_66;

$L__BB48_45:
	setp.ltu.f64 	%p49, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p49;
	bra.uni 	$L__BB48_66;

$L__BB48_44:
	setp.geu.f64 	%p48, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p48;
	bra.uni 	$L__BB48_66;

$L__BB48_35:
	setp.neu.f64 	%p42, %fd66, 0d0000000000000000;
	sub.f64 	%fd73, %fd66, %fd1;
	selp.f64 	%fd96, %fd73, 0d0000000000000000, %p42;
	bra.uni 	$L__BB48_66;

$L__BB48_31:
	setp.eq.f64 	%p35, %fd1, 0d0000000000000000;
	setp.eq.f64 	%p36, %fd1, 0d8000000000000000;
	or.pred  	%p37, %p35, %p36;
	mov.f64 	%fd96, 0d7FF8000000000000;
	@%p37 bra 	$L__BB48_66;

	div.rn.f64 	%fd96, %fd66, %fd1;
	abs.f64 	%fd70, %fd96;
	setp.gtu.f64 	%p38, %fd70, 0d7FF0000000000000;
	@%p38 bra 	$L__BB48_66;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd96;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd96;
	}
	and.b32  	%r25, %r24, 2147483647;
	setp.eq.s32 	%p39, %r25, 2146435072;
	setp.eq.s32 	%p40, %r23, 0;
	and.pred  	%p41, %p39, %p40;
	@%p41 bra 	$L__BB48_66;

	cvt.rmi.f64.f64 	%fd71, %fd96;
	mul.f64 	%fd72, %fd1, %fd71;
	sub.f64 	%fd96, %fd66, %fd72;
	bra.uni 	$L__BB48_66;

$L__BB48_65:
	add.f64 	%fd96, %fd1, %fd66;
	bra.uni 	$L__BB48_66;

$L__BB48_42:
	setp.neu.f64 	%p46, %fd1, %fd66;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p46;
	bra.uni 	$L__BB48_66;

$L__BB48_47:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd66;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd1;
	}
	bfe.u32 	%r32, %r3, 20, 11;
	add.s32 	%r33, %r32, -1012;
	mov.b64 	%rd14, %fd1;
	shl.b64 	%rd2, %rd14, %r33;
	setp.eq.s64 	%p1, %rd2, -9223372036854775808;
	setp.ne.s64 	%p51, %rd2, -9223372036854775808;
	abs.f64 	%fd18, %fd66;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd18;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd94, [retval0+0];
	} // callseq 1
	setp.gt.s32 	%p52, %r2, -1;
	or.pred  	%p53, %p52, %p51;
	@%p53 bra 	$L__BB48_49;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r34}, %fd94;
	}
	xor.b32  	%r35, %r34, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd94;
	}
	mov.b64 	%fd94, {%r36, %r35};

$L__BB48_49:
	setp.eq.f64 	%p54, %fd66, 0d0000000000000000;
	@%p54 bra 	$L__BB48_53;
	bra.uni 	$L__BB48_50;

$L__BB48_53:
	abs.f64 	%fd78, %fd1;
	setp.neu.f64 	%p58, %fd78, 0d3FE0000000000000;
	and.pred  	%p59, %p1, %p58;
	selp.u32 	%r90, 1, 0, %p59;
	selp.b32 	%r37, %r2, 0, %p59;
	mov.u32 	%r38, 0;
	or.b32  	%r39, %r37, 2146435072;
	setp.lt.s32 	%p60, %r3, 0;
	selp.b32 	%r40, %r39, %r37, %p60;
	mov.b64 	%fd94, {%r38, %r40};
	bra.uni 	$L__BB48_54;

$L__BB48_37:
	cvt.rni.s64.f64 	%rd10, %fd66;
	cvt.rni.s64.f64 	%rd11, %fd1;
	cvt.u32.u64 	%r26, %rd10;
	cvt.u32.u64 	%r27, %rd11;
	or.b32  	%r28, %r27, %r26;
	setp.eq.s32 	%p43, %r28, 0;
	selp.f64 	%fd96, 0d0000000000000000, 0d3FF0000000000000, %p43;
	bra.uni 	$L__BB48_66;

$L__BB48_63:
	mul.f64 	%fd96, %fd1, %fd66;
	bra.uni 	$L__BB48_66;

$L__BB48_104:
	max.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_110:
	setp.gtu.f64 	%p126, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p126;
	bra.uni 	$L__BB48_131;

$L__BB48_109:
	setp.leu.f64 	%p125, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p125;
	bra.uni 	$L__BB48_131;

$L__BB48_96:
	setp.eq.f64 	%p112, %fd66, 0d0000000000000000;
	setp.eq.f64 	%p113, %fd66, 0d8000000000000000;
	or.pred  	%p114, %p112, %p113;
	mov.f64 	%fd100, 0d7FF8000000000000;
	@%p114 bra 	$L__BB48_131;

	div.rn.f64 	%fd100, %fd1, %fd66;
	abs.f64 	%fd83, %fd100;
	setp.gtu.f64 	%p115, %fd83, 0d7FF0000000000000;
	@%p115 bra 	$L__BB48_131;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd100;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r59}, %fd100;
	}
	and.b32  	%r60, %r59, 2147483647;
	setp.eq.s32 	%p116, %r60, 2146435072;
	setp.eq.s32 	%p117, %r58, 0;
	and.pred  	%p118, %p116, %p117;
	@%p118 bra 	$L__BB48_131;

	cvt.rmi.f64.f64 	%fd84, %fd100;
	mul.f64 	%fd85, %fd84, %fd66;
	sub.f64 	%fd100, %fd1, %fd85;
	bra.uni 	$L__BB48_131;

$L__BB48_130:
	add.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_128:
	mul.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_105:
	min.f64 	%fd100, %fd1, %fd66;
	bra.uni 	$L__BB48_131;

$L__BB48_100:
	setp.neu.f64 	%p119, %fd1, 0d0000000000000000;
	sub.f64 	%fd86, %fd1, %fd66;
	selp.f64 	%fd100, %fd86, 0d0000000000000000, %p119;
	bra.uni 	$L__BB48_131;

$L__BB48_107:
	setp.neu.f64 	%p123, %fd1, %fd66;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p123;
	bra.uni 	$L__BB48_131;

$L__BB48_112:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd66;
	}
	bfe.u32 	%r67, %r9, 20, 11;
	add.s32 	%r68, %r67, -1012;
	mov.b64 	%rd19, %fd66;
	shl.b64 	%rd3, %rd19, %r68;
	setp.eq.s64 	%p2, %rd3, -9223372036854775808;
	setp.ne.s64 	%p128, %rd3, -9223372036854775808;
	abs.f64 	%fd50, %fd1;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd50;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd66;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd98, [retval0+0];
	} // callseq 2
	setp.gt.s32 	%p129, %r8, -1;
	or.pred  	%p130, %p129, %p128;
	@%p130 bra 	$L__BB48_114;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd98;
	}
	xor.b32  	%r70, %r69, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r71, %temp}, %fd98;
	}
	mov.b64 	%fd98, {%r71, %r70};

$L__BB48_114:
	setp.eq.f64 	%p131, %fd1, 0d0000000000000000;
	@%p131 bra 	$L__BB48_118;
	bra.uni 	$L__BB48_115;

$L__BB48_118:
	abs.f64 	%fd91, %fd66;
	setp.neu.f64 	%p135, %fd91, 0d3FE0000000000000;
	and.pred  	%p136, %p2, %p135;
	selp.u32 	%r91, 1, 0, %p136;
	selp.b32 	%r72, %r8, 0, %p136;
	mov.u32 	%r73, 0;
	or.b32  	%r74, %r72, 2146435072;
	setp.lt.s32 	%p137, %r9, 0;
	selp.b32 	%r75, %r74, %r72, %p137;
	mov.b64 	%fd98, {%r73, %r75};
	bra.uni 	$L__BB48_119;

$L__BB48_102:
	cvt.rni.s64.f64 	%rd15, %fd1;
	cvt.rni.s64.f64 	%rd16, %fd66;
	cvt.u32.u64 	%r61, %rd15;
	cvt.u32.u64 	%r62, %rd16;
	or.b32  	%r63, %r62, %r61;
	setp.eq.s32 	%p120, %r63, 0;
	selp.f64 	%fd100, 0d0000000000000000, 0d3FF0000000000000, %p120;
	bra.uni 	$L__BB48_131;

$L__BB48_50:
	selp.u32 	%r90, 1, 0, %p1;
	@%p52 bra 	$L__BB48_54;

	cvt.rzi.f64.f64 	%fd76, %fd1;
	setp.eq.f64 	%p56, %fd76, %fd1;
	@%p56 bra 	$L__BB48_54;

	mov.f64 	%fd94, 0dFFF8000000000000;

$L__BB48_54:
	add.f64 	%fd24, %fd1, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd24;
	}
	and.b32  	%r42, %r41, 2146435072;
	setp.ne.s32 	%p61, %r42, 2146435072;
	mov.f64 	%fd95, %fd94;
	@%p61 bra 	$L__BB48_61;

	setp.gtu.f64 	%p62, %fd18, 0d7FF0000000000000;
	mov.f64 	%fd95, %fd24;
	@%p62 bra 	$L__BB48_61;

	abs.f64 	%fd79, %fd1;
	setp.gtu.f64 	%p63, %fd79, 0d7FF0000000000000;
	mov.f64 	%fd95, %fd24;
	@%p63 bra 	$L__BB48_61;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %fd1;
	}
	and.b32  	%r7, %r3, 2147483647;
	setp.eq.s32 	%p64, %r7, 2146435072;
	setp.eq.s32 	%p65, %r43, 0;
	and.pred  	%p66, %p64, %p65;
	@%p66 bra 	$L__BB48_60;
	bra.uni 	$L__BB48_58;

$L__BB48_60:
	setp.gt.f64 	%p76, %fd18, 0d3FF0000000000000;
	selp.b32 	%r50, 2146435072, 0, %p76;
	mov.u32 	%r51, 0;
	xor.b32  	%r52, %r50, 2146435072;
	setp.lt.s32 	%p77, %r3, 0;
	selp.b32 	%r53, %r52, %r50, %p77;
	setp.eq.f64 	%p78, %fd66, 0dBFF0000000000000;
	selp.b32 	%r54, 1072693248, %r53, %p78;
	mov.b64 	%fd95, {%r51, %r54};
	bra.uni 	$L__BB48_61;

$L__BB48_115:
	selp.u32 	%r91, 1, 0, %p2;
	@%p129 bra 	$L__BB48_119;

	cvt.rzi.f64.f64 	%fd89, %fd66;
	setp.eq.f64 	%p133, %fd89, %fd66;
	@%p133 bra 	$L__BB48_119;

	mov.f64 	%fd98, 0dFFF8000000000000;

$L__BB48_119:
	add.f64 	%fd56, %fd1, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd56;
	}
	and.b32  	%r77, %r76, 2146435072;
	setp.ne.s32 	%p138, %r77, 2146435072;
	mov.f64 	%fd99, %fd98;
	@%p138 bra 	$L__BB48_126;

	setp.gtu.f64 	%p139, %fd50, 0d7FF0000000000000;
	mov.f64 	%fd99, %fd56;
	@%p139 bra 	$L__BB48_126;

	abs.f64 	%fd92, %fd66;
	setp.gtu.f64 	%p140, %fd92, 0d7FF0000000000000;
	mov.f64 	%fd99, %fd56;
	@%p140 bra 	$L__BB48_126;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %fd66;
	}
	and.b32  	%r13, %r9, 2147483647;
	setp.eq.s32 	%p141, %r13, 2146435072;
	setp.eq.s32 	%p142, %r78, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	$L__BB48_125;
	bra.uni 	$L__BB48_123;

$L__BB48_125:
	setp.gt.f64 	%p153, %fd50, 0d3FF0000000000000;
	selp.b32 	%r85, 2146435072, 0, %p153;
	mov.u32 	%r86, 0;
	xor.b32  	%r87, %r85, 2146435072;
	setp.lt.s32 	%p154, %r9, 0;
	selp.b32 	%r88, %r87, %r85, %p154;
	setp.eq.f64 	%p155, %fd1, 0dBFF0000000000000;
	selp.b32 	%r89, 1072693248, %r88, %p155;
	mov.b64 	%fd99, {%r86, %r89};
	bra.uni 	$L__BB48_126;

$L__BB48_58:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd66;
	}
	and.b32  	%r45, %r2, 2147483647;
	setp.ne.s32 	%p67, %r45, 2146435072;
	setp.ne.s32 	%p68, %r44, 0;
	or.pred  	%p69, %p67, %p68;
	mov.f64 	%fd95, %fd94;
	@%p69 bra 	$L__BB48_61;

	setp.lt.s32 	%p70, %r2, 0;
	mov.u32 	%r46, 0;
	setp.gt.s32 	%p71, %r3, -1;
	selp.b32 	%r47, 2146435072, 0, %p71;
	setp.ne.s32 	%p72, %r90, 0;
	and.pred  	%p73, %p70, %p72;
	setp.ne.s32 	%p74, %r7, 1071644672;
	and.pred  	%p75, %p74, %p73;
	or.b32  	%r48, %r47, -2147483648;
	selp.b32 	%r49, %r48, %r47, %p75;
	mov.b64 	%fd95, {%r46, %r49};

$L__BB48_61:
	setp.eq.f64 	%p79, %fd1, 0d0000000000000000;
	setp.eq.f64 	%p80, %fd66, 0d3FF0000000000000;
	or.pred  	%p81, %p80, %p79;
	selp.f64 	%fd96, 0d3FF0000000000000, %fd95, %p81;

$L__BB48_66:
	st.global.f64 	[%rd1], %fd96;
	bra.uni 	$L__BB48_132;

$L__BB48_123:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r79, %temp}, %fd1;
	}
	and.b32  	%r80, %r8, 2147483647;
	setp.ne.s32 	%p144, %r80, 2146435072;
	setp.ne.s32 	%p145, %r79, 0;
	or.pred  	%p146, %p144, %p145;
	mov.f64 	%fd99, %fd98;
	@%p146 bra 	$L__BB48_126;

	setp.lt.s32 	%p147, %r8, 0;
	mov.u32 	%r81, 0;
	setp.gt.s32 	%p148, %r9, -1;
	selp.b32 	%r82, 2146435072, 0, %p148;
	setp.ne.s32 	%p149, %r91, 0;
	and.pred  	%p150, %p147, %p149;
	setp.ne.s32 	%p151, %r13, 1071644672;
	and.pred  	%p152, %p151, %p150;
	or.b32  	%r83, %r82, -2147483648;
	selp.b32 	%r84, %r83, %r82, %p152;
	mov.b64 	%fd99, {%r81, %r84};

$L__BB48_126:
	setp.eq.f64 	%p156, %fd66, 0d0000000000000000;
	setp.eq.f64 	%p157, %fd1, 0d3FF0000000000000;
	or.pred  	%p158, %p156, %p157;
	selp.f64 	%fd100, 0d3FF0000000000000, %fd99, %p158;

$L__BB48_131:
	st.global.f64 	[%rd1], %fd100;

$L__BB48_132:
	bar.sync 	0;
	ret;

}
	// .globl	matrix_scalar_op_f
.visible .entry matrix_scalar_op_f(
	.param .u64 matrix_scalar_op_f_param_0,
	.param .f64 matrix_scalar_op_f_param_1,
	.param .u64 matrix_scalar_op_f_param_2,
	.param .u32 matrix_scalar_op_f_param_3,
	.param .u32 matrix_scalar_op_f_param_4,
	.param .u32 matrix_scalar_op_f_param_5
)
{
	.reg .pred 	%p<145>;
	.reg .f32 	%f<315>;
	.reg .b32 	%r<124>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [matrix_scalar_op_f_param_0];
	ld.param.f64 	%fd1, [matrix_scalar_op_f_param_1];
	ld.param.u64 	%rd3, [matrix_scalar_op_f_param_2];
	ld.param.u32 	%r4, [matrix_scalar_op_f_param_3];
	ld.param.u32 	%r2, [matrix_scalar_op_f_param_4];
	ld.param.u32 	%r3, [matrix_scalar_op_f_param_5];
	cvt.rn.f32.f64 	%f1, %fd1;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.s32 	%p3, %r1, %r4;
	@%p3 bra 	$L__BB49_128;

	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	add.s64 	%rd1, %rd4, %rd6;
	setp.eq.s32 	%p4, %r3, 0;
	@%p4 bra 	$L__BB49_65;

	mov.f32 	%f310, 0f7F7FFFFF;
	setp.gt.s32 	%p5, %r2, 8;
	@%p5 bra 	$L__BB49_15;
	bra.uni 	$L__BB49_3;

$L__BB49_15:
	setp.gt.s32 	%p6, %r2, 13;
	@%p6 bra 	$L__BB49_22;

	setp.gt.s32 	%p13, %r2, 10;
	@%p13 bra 	$L__BB49_19;
	bra.uni 	$L__BB49_17;

$L__BB49_19:
	setp.eq.s32 	%p14, %r2, 11;
	@%p14 bra 	$L__BB49_38;

	setp.eq.s32 	%p15, %r2, 12;
	@%p15 bra 	$L__BB49_37;

	setp.eq.s32 	%p16, %r2, 13;
	@%p16 bra 	$L__BB49_36;
	bra.uni 	$L__BB49_64;

$L__BB49_36:
	mul.f32 	%f94, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r25, %f94;
	cvt.rzi.f32.f32 	%f95, %f94;
	mul.f32 	%f96, %f95, 0f4F800000;
	sub.f32 	%f97, %f1, %f96;
	mov.b32 	%r26, %f97;
	setp.gt.u32 	%p40, %r26, -1090519040;
	selp.u32 	%r27, 1, 0, %p40;
	abs.f32 	%f98, %f97;
	cvt.rni.u32.f32 	%r28, %f98;
	neg.s32 	%r29, %r28;
	selp.b32 	%r30, %r29, %r28, %p40;
	sub.s32 	%r31, %r25, %r27;
	mov.b64 	%fd4, {%r30, %r31};
	mov.b64 	%rd10, %fd4;
	mul.f32 	%f99, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r32, %f99;
	cvt.rzi.f32.f32 	%f100, %f99;
	mul.f32 	%f101, %f100, 0f4F800000;
	sub.f32 	%f102, %f2, %f101;
	mov.b32 	%r33, %f102;
	setp.gt.u32 	%p41, %r33, -1090519040;
	selp.u32 	%r34, 1, 0, %p41;
	abs.f32 	%f103, %f102;
	cvt.rni.u32.f32 	%r35, %f103;
	neg.s32 	%r36, %r35;
	selp.b32 	%r37, %r36, %r35, %p41;
	sub.s32 	%r38, %r32, %r34;
	mov.b64 	%fd5, {%r37, %r38};
	mov.b64 	%rd11, %fd5;
	cvt.u32.u64 	%r39, %rd10;
	cvt.u32.u64 	%r40, %rd11;
	and.b32  	%r41, %r40, %r39;
	setp.eq.s32 	%p42, %r41, 0;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p42;
	bra.uni 	$L__BB49_64;

$L__BB49_65:
	mov.f32 	%f314, 0f7F7FFFFF;
	setp.gt.s32 	%p75, %r2, 8;
	@%p75 bra 	$L__BB49_78;
	bra.uni 	$L__BB49_66;

$L__BB49_78:
	setp.gt.s32 	%p76, %r2, 13;
	@%p76 bra 	$L__BB49_85;

	setp.gt.s32 	%p83, %r2, 10;
	@%p83 bra 	$L__BB49_82;
	bra.uni 	$L__BB49_80;

$L__BB49_82:
	setp.eq.s32 	%p84, %r2, 11;
	@%p84 bra 	$L__BB49_101;

	setp.eq.s32 	%p85, %r2, 12;
	@%p85 bra 	$L__BB49_100;

	setp.eq.s32 	%p86, %r2, 13;
	@%p86 bra 	$L__BB49_99;
	bra.uni 	$L__BB49_127;

$L__BB49_99:
	mul.f32 	%f210, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r83, %f210;
	cvt.rzi.f32.f32 	%f211, %f210;
	mul.f32 	%f212, %f211, 0f4F800000;
	sub.f32 	%f213, %f2, %f212;
	mov.b32 	%r84, %f213;
	setp.gt.u32 	%p110, %r84, -1090519040;
	selp.u32 	%r85, 1, 0, %p110;
	abs.f32 	%f214, %f213;
	cvt.rni.u32.f32 	%r86, %f214;
	neg.s32 	%r87, %r86;
	selp.b32 	%r88, %r87, %r86, %p110;
	sub.s32 	%r89, %r83, %r85;
	mov.b64 	%fd8, {%r88, %r89};
	mov.b64 	%rd14, %fd8;
	mul.f32 	%f215, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r90, %f215;
	cvt.rzi.f32.f32 	%f216, %f215;
	mul.f32 	%f217, %f216, 0f4F800000;
	sub.f32 	%f218, %f1, %f217;
	mov.b32 	%r91, %f218;
	setp.gt.u32 	%p111, %r91, -1090519040;
	selp.u32 	%r92, 1, 0, %p111;
	abs.f32 	%f219, %f218;
	cvt.rni.u32.f32 	%r93, %f219;
	neg.s32 	%r94, %r93;
	selp.b32 	%r95, %r94, %r93, %p111;
	sub.s32 	%r96, %r90, %r92;
	mov.b64 	%fd9, {%r95, %r96};
	mov.b64 	%rd15, %fd9;
	cvt.u32.u64 	%r97, %rd14;
	cvt.u32.u64 	%r98, %rd15;
	and.b32  	%r99, %r98, %r97;
	setp.eq.s32 	%p112, %r99, 0;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p112;
	bra.uni 	$L__BB49_127;

$L__BB49_3:
	setp.gt.s32 	%p19, %r2, 3;
	@%p19 bra 	$L__BB49_9;
	bra.uni 	$L__BB49_4;

$L__BB49_9:
	setp.gt.s32 	%p20, %r2, 5;
	@%p20 bra 	$L__BB49_12;
	bra.uni 	$L__BB49_10;

$L__BB49_12:
	setp.eq.s32 	%p21, %r2, 6;
	@%p21 bra 	$L__BB49_43;

	setp.eq.s32 	%p22, %r2, 7;
	@%p22 bra 	$L__BB49_42;

	setp.eq.s32 	%p23, %r2, 8;
	@%p23 bra 	$L__BB49_41;
	bra.uni 	$L__BB49_64;

$L__BB49_41:
	setp.gtu.f32 	%p45, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p45;
	bra.uni 	$L__BB49_64;

$L__BB49_66:
	setp.gt.s32 	%p89, %r2, 3;
	@%p89 bra 	$L__BB49_72;
	bra.uni 	$L__BB49_67;

$L__BB49_72:
	setp.gt.s32 	%p90, %r2, 5;
	@%p90 bra 	$L__BB49_75;
	bra.uni 	$L__BB49_73;

$L__BB49_75:
	setp.eq.s32 	%p91, %r2, 6;
	@%p91 bra 	$L__BB49_106;

	setp.eq.s32 	%p92, %r2, 7;
	@%p92 bra 	$L__BB49_105;

	setp.eq.s32 	%p93, %r2, 8;
	@%p93 bra 	$L__BB49_104;
	bra.uni 	$L__BB49_127;

$L__BB49_104:
	setp.ltu.f32 	%p115, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p115;
	bra.uni 	$L__BB49_127;

$L__BB49_22:
	setp.gt.s32 	%p7, %r2, 15;
	@%p7 bra 	$L__BB49_25;
	bra.uni 	$L__BB49_23;

$L__BB49_25:
	setp.eq.s32 	%p8, %r2, 16;
	@%p8 bra 	$L__BB49_33;

	setp.eq.s32 	%p9, %r2, 17;
	@%p9 bra 	$L__BB49_30;

	setp.ne.s32 	%p10, %r2, 18;
	@%p10 bra 	$L__BB49_64;

	div.rn.f32 	%f310, %f1, %f2;
	abs.f32 	%f76, %f310;
	setp.geu.f32 	%p31, %f76, 0f7F800000;
	@%p31 bra 	$L__BB49_64;

	cvt.rmi.f32.f32 	%f310, %f310;
	bra.uni 	$L__BB49_64;

$L__BB49_4:
	setp.gt.s32 	%p26, %r2, 1;
	@%p26 bra 	$L__BB49_7;

	setp.eq.s32 	%p29, %r2, 0;
	@%p29 bra 	$L__BB49_63;

	setp.eq.s32 	%p30, %r2, 1;
	@%p30 bra 	$L__BB49_62;
	bra.uni 	$L__BB49_64;

$L__BB49_62:
	sub.f32 	%f310, %f1, %f2;
	bra.uni 	$L__BB49_64;

$L__BB49_85:
	setp.gt.s32 	%p77, %r2, 15;
	@%p77 bra 	$L__BB49_88;
	bra.uni 	$L__BB49_86;

$L__BB49_88:
	setp.eq.s32 	%p78, %r2, 16;
	@%p78 bra 	$L__BB49_96;

	setp.eq.s32 	%p79, %r2, 17;
	@%p79 bra 	$L__BB49_93;

	setp.ne.s32 	%p80, %r2, 18;
	@%p80 bra 	$L__BB49_127;

	div.rn.f32 	%f314, %f2, %f1;
	abs.f32 	%f192, %f314;
	setp.geu.f32 	%p101, %f192, 0f7F800000;
	@%p101 bra 	$L__BB49_127;

	cvt.rmi.f32.f32 	%f314, %f314;
	bra.uni 	$L__BB49_127;

$L__BB49_67:
	setp.gt.s32 	%p96, %r2, 1;
	@%p96 bra 	$L__BB49_70;

	setp.eq.s32 	%p99, %r2, 0;
	@%p99 bra 	$L__BB49_126;

	setp.eq.s32 	%p100, %r2, 1;
	@%p100 bra 	$L__BB49_125;
	bra.uni 	$L__BB49_127;

$L__BB49_125:
	sub.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_17:
	setp.eq.s32 	%p17, %r2, 9;
	@%p17 bra 	$L__BB49_40;

	setp.eq.s32 	%p18, %r2, 10;
	@%p18 bra 	$L__BB49_39;
	bra.uni 	$L__BB49_64;

$L__BB49_39:
	setp.eq.f32 	%p43, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p43;
	bra.uni 	$L__BB49_64;

$L__BB49_10:
	setp.eq.s32 	%p24, %r2, 4;
	@%p24 bra 	$L__BB49_45;

	setp.eq.s32 	%p25, %r2, 5;
	@%p25 bra 	$L__BB49_44;
	bra.uni 	$L__BB49_64;

$L__BB49_44:
	setp.leu.f32 	%p48, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p48;
	bra.uni 	$L__BB49_64;

$L__BB49_23:
	setp.eq.s32 	%p11, %r2, 14;
	@%p11 bra 	$L__BB49_35;

	setp.eq.s32 	%p12, %r2, 15;
	@%p12 bra 	$L__BB49_34;
	bra.uni 	$L__BB49_64;

$L__BB49_34:
	mul.f32 	%f82, %f2, %f1;
	mov.f32 	%f83, 0f3F800000;
	sub.f32 	%f310, %f83, %f82;
	bra.uni 	$L__BB49_64;

$L__BB49_7:
	setp.eq.s32 	%p27, %r2, 2;
	@%p27 bra 	$L__BB49_61;

	setp.eq.s32 	%p28, %r2, 3;
	@%p28 bra 	$L__BB49_60;
	bra.uni 	$L__BB49_64;

$L__BB49_60:
	div.rn.f32 	%f310, %f1, %f2;
	bra.uni 	$L__BB49_64;

$L__BB49_80:
	setp.eq.s32 	%p87, %r2, 9;
	@%p87 bra 	$L__BB49_103;

	setp.eq.s32 	%p88, %r2, 10;
	@%p88 bra 	$L__BB49_102;
	bra.uni 	$L__BB49_127;

$L__BB49_102:
	setp.eq.f32 	%p113, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p113;
	bra.uni 	$L__BB49_127;

$L__BB49_73:
	setp.eq.s32 	%p94, %r2, 4;
	@%p94 bra 	$L__BB49_108;

	setp.eq.s32 	%p95, %r2, 5;
	@%p95 bra 	$L__BB49_107;
	bra.uni 	$L__BB49_127;

$L__BB49_107:
	setp.geu.f32 	%p118, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p118;
	bra.uni 	$L__BB49_127;

$L__BB49_86:
	setp.eq.s32 	%p81, %r2, 14;
	@%p81 bra 	$L__BB49_98;

	setp.eq.s32 	%p82, %r2, 15;
	@%p82 bra 	$L__BB49_97;
	bra.uni 	$L__BB49_127;

$L__BB49_97:
	mul.f32 	%f198, %f2, %f1;
	mov.f32 	%f199, 0f3F800000;
	sub.f32 	%f314, %f199, %f198;
	bra.uni 	$L__BB49_127;

$L__BB49_70:
	setp.eq.s32 	%p97, %r2, 2;
	@%p97 bra 	$L__BB49_124;

	setp.eq.s32 	%p98, %r2, 3;
	@%p98 bra 	$L__BB49_123;
	bra.uni 	$L__BB49_127;

$L__BB49_123:
	div.rn.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_38:
	min.f32 	%f310, %f1, %f2;
	bra.uni 	$L__BB49_64;

$L__BB49_37:
	max.f32 	%f310, %f1, %f2;
	bra.uni 	$L__BB49_64;

$L__BB49_43:
	setp.ltu.f32 	%p47, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p47;
	bra.uni 	$L__BB49_64;

$L__BB49_42:
	setp.geu.f32 	%p46, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p46;
	bra.uni 	$L__BB49_64;

$L__BB49_33:
	setp.neu.f32 	%p36, %f1, 0f00000000;
	sub.f32 	%f81, %f1, %f2;
	selp.f32 	%f310, %f81, 0f00000000, %p36;
	bra.uni 	$L__BB49_64;

$L__BB49_30:
	setp.eq.f32 	%p32, %f2, 0f00000000;
	setp.eq.f32 	%p33, %f2, 0f80000000;
	or.pred  	%p34, %p32, %p33;
	mov.f32 	%f310, 0f7FC00000;
	@%p34 bra 	$L__BB49_64;

	div.rn.f32 	%f310, %f1, %f2;
	abs.f32 	%f78, %f310;
	setp.geu.f32 	%p35, %f78, 0f7F800000;
	@%p35 bra 	$L__BB49_64;

	cvt.rmi.f32.f32 	%f79, %f310;
	mul.f32 	%f80, %f2, %f79;
	sub.f32 	%f310, %f1, %f80;
	bra.uni 	$L__BB49_64;

$L__BB49_63:
	add.f32 	%f310, %f2, %f1;
	bra.uni 	$L__BB49_64;

$L__BB49_40:
	setp.neu.f32 	%p44, %f2, %f1;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p44;
	bra.uni 	$L__BB49_64;

$L__BB49_45:
	mul.f32 	%f105, %f2, 0f3F000000;
	cvt.rzi.f32.f32 	%f106, %f105;
	add.f32 	%f107, %f106, %f106;
	sub.f32 	%f108, %f2, %f107;
	abs.f32 	%f19, %f108;
	abs.f32 	%f20, %f1;
	setp.lt.f32 	%p49, %f20, 0f00800000;
	mul.f32 	%f109, %f20, 0f4B800000;
	selp.f32 	%f110, %f109, %f20, %p49;
	selp.f32 	%f111, 0fC3170000, 0fC2FE0000, %p49;
	mov.b32 	%r42, %f110;
	and.b32  	%r43, %r42, 8388607;
	or.b32  	%r44, %r43, 1065353216;
	mov.b32 	%f112, %r44;
	shr.u32 	%r45, %r42, 23;
	cvt.rn.f32.u32 	%f113, %r45;
	add.f32 	%f114, %f111, %f113;
	setp.gt.f32 	%p50, %f112, 0f3FB504F3;
	mul.f32 	%f115, %f112, 0f3F000000;
	add.f32 	%f116, %f114, 0f3F800000;
	selp.f32 	%f117, %f116, %f114, %p50;
	selp.f32 	%f118, %f115, %f112, %p50;
	add.f32 	%f119, %f118, 0fBF800000;
	add.f32 	%f120, %f118, 0f3F800000;
	rcp.approx.ftz.f32 	%f121, %f120;
	add.f32 	%f122, %f119, %f119;
	mul.f32 	%f123, %f122, %f121;
	mul.f32 	%f124, %f123, %f123;
	mov.f32 	%f125, 0f3C4CAF63;
	mov.f32 	%f126, 0f3B18F0FE;
	fma.rn.f32 	%f127, %f126, %f124, %f125;
	mov.f32 	%f128, 0f3DAAAABD;
	fma.rn.f32 	%f129, %f127, %f124, %f128;
	mul.rn.f32 	%f130, %f129, %f124;
	mul.rn.f32 	%f131, %f130, %f123;
	sub.f32 	%f132, %f119, %f123;
	add.f32 	%f133, %f132, %f132;
	neg.f32 	%f134, %f123;
	fma.rn.f32 	%f135, %f134, %f119, %f133;
	mul.rn.f32 	%f136, %f121, %f135;
	add.f32 	%f137, %f131, %f123;
	sub.f32 	%f138, %f123, %f137;
	add.f32 	%f139, %f131, %f138;
	add.f32 	%f140, %f136, %f139;
	add.f32 	%f141, %f137, %f140;
	sub.f32 	%f142, %f137, %f141;
	add.f32 	%f143, %f140, %f142;
	mov.f32 	%f144, 0f3F317200;
	mul.rn.f32 	%f145, %f117, %f144;
	mov.f32 	%f146, 0f35BFBE8E;
	mul.rn.f32 	%f147, %f117, %f146;
	add.f32 	%f148, %f145, %f141;
	sub.f32 	%f149, %f145, %f148;
	add.f32 	%f150, %f141, %f149;
	add.f32 	%f151, %f143, %f150;
	add.f32 	%f152, %f147, %f151;
	add.f32 	%f153, %f148, %f152;
	sub.f32 	%f154, %f148, %f153;
	add.f32 	%f155, %f152, %f154;
	abs.f32 	%f21, %f2;
	setp.gt.f32 	%p51, %f21, 0f77F684DF;
	mul.f32 	%f156, %f2, 0f39000000;
	selp.f32 	%f157, %f156, %f2, %p51;
	mul.rn.f32 	%f158, %f157, %f153;
	neg.f32 	%f159, %f158;
	fma.rn.f32 	%f160, %f157, %f153, %f159;
	fma.rn.f32 	%f161, %f157, %f155, %f160;
	mov.f32 	%f162, 0f00000000;
	fma.rn.f32 	%f163, %f162, %f153, %f161;
	add.rn.f32 	%f164, %f158, %f163;
	neg.f32 	%f165, %f164;
	add.rn.f32 	%f166, %f158, %f165;
	add.rn.f32 	%f167, %f166, %f163;
	mov.b32 	%r46, %f164;
	setp.eq.s32 	%p52, %r46, 1118925336;
	add.s32 	%r47, %r46, -1;
	mov.b32 	%f168, %r47;
	add.f32 	%f169, %f167, 0f37000000;
	selp.f32 	%f22, %f169, %f167, %p52;
	selp.f32 	%f170, %f168, %f164, %p52;
	mov.f32 	%f171, 0f3FB8AA3B;
	mul.rn.f32 	%f172, %f170, %f171;
	cvt.rzi.f32.f32 	%f173, %f172;
	abs.f32 	%f174, %f173;
	setp.gt.f32 	%p53, %f174, 0f42FC0000;
	mov.b32 	%r48, %f173;
	and.b32  	%r49, %r48, -2147483648;
	or.b32  	%r50, %r49, 1123811328;
	mov.b32 	%f175, %r50;
	selp.f32 	%f176, %f175, %f173, %p53;
	mov.f32 	%f177, 0fBF317218;
	fma.rn.f32 	%f178, %f176, %f177, %f170;
	mov.f32 	%f179, 0f3102E308;
	fma.rn.f32 	%f180, %f176, %f179, %f178;
	mul.f32 	%f181, %f180, 0f3FB8AA3B;
	add.f32 	%f182, %f176, 0f4B40007F;
	mov.b32 	%r51, %f182;
	shl.b32 	%r52, %r51, 23;
	mov.b32 	%f183, %r52;
	ex2.approx.ftz.f32 	%f184, %f181;
	mul.f32 	%f23, %f184, %f183;
	setp.eq.f32 	%p54, %f23, 0f7F800000;
	mov.f32 	%f307, 0f7F800000;
	@%p54 bra 	$L__BB49_47;

	fma.rn.f32 	%f307, %f23, %f22, %f23;

$L__BB49_47:
	setp.lt.f32 	%p55, %f1, 0f00000000;
	setp.eq.f32 	%p56, %f19, 0f3F800000;
	and.pred  	%p1, %p55, %p56;
	setp.eq.f32 	%p57, %f1, 0f00000000;
	@%p57 bra 	$L__BB49_51;
	bra.uni 	$L__BB49_48;

$L__BB49_51:
	add.f32 	%f188, %f1, %f1;
	mov.b32 	%r55, %f188;
	selp.b32 	%r56, %r55, 0, %p56;
	or.b32  	%r57, %r56, 2139095040;
	setp.lt.f32 	%p61, %f2, 0f00000000;
	selp.b32 	%r58, %r57, %r56, %p61;
	mov.b32 	%f309, %r58;
	bra.uni 	$L__BB49_52;

$L__BB49_35:
	mul.f32 	%f84, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r8, %f84;
	cvt.rzi.f32.f32 	%f85, %f84;
	mul.f32 	%f86, %f85, 0f4F800000;
	sub.f32 	%f87, %f1, %f86;
	mov.b32 	%r9, %f87;
	setp.gt.u32 	%p37, %r9, -1090519040;
	selp.u32 	%r10, 1, 0, %p37;
	abs.f32 	%f88, %f87;
	cvt.rni.u32.f32 	%r11, %f88;
	neg.s32 	%r12, %r11;
	selp.b32 	%r13, %r12, %r11, %p37;
	sub.s32 	%r14, %r8, %r10;
	mov.b64 	%fd2, {%r13, %r14};
	mov.b64 	%rd8, %fd2;
	mul.f32 	%f89, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r15, %f89;
	cvt.rzi.f32.f32 	%f90, %f89;
	mul.f32 	%f91, %f90, 0f4F800000;
	sub.f32 	%f92, %f2, %f91;
	mov.b32 	%r16, %f92;
	setp.gt.u32 	%p38, %r16, -1090519040;
	selp.u32 	%r17, 1, 0, %p38;
	abs.f32 	%f93, %f92;
	cvt.rni.u32.f32 	%r18, %f93;
	neg.s32 	%r19, %r18;
	selp.b32 	%r20, %r19, %r18, %p38;
	sub.s32 	%r21, %r15, %r17;
	mov.b64 	%fd3, {%r20, %r21};
	mov.b64 	%rd9, %fd3;
	cvt.u32.u64 	%r22, %rd8;
	cvt.u32.u64 	%r23, %rd9;
	or.b32  	%r24, %r23, %r22;
	setp.eq.s32 	%p39, %r24, 0;
	selp.f32 	%f310, 0f00000000, 0f3F800000, %p39;
	bra.uni 	$L__BB49_64;

$L__BB49_61:
	mul.f32 	%f310, %f2, %f1;
	bra.uni 	$L__BB49_64;

$L__BB49_101:
	min.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_100:
	max.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_106:
	setp.gtu.f32 	%p117, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p117;
	bra.uni 	$L__BB49_127;

$L__BB49_105:
	setp.leu.f32 	%p116, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p116;
	bra.uni 	$L__BB49_127;

$L__BB49_96:
	setp.neu.f32 	%p106, %f2, 0f00000000;
	sub.f32 	%f197, %f2, %f1;
	selp.f32 	%f314, %f197, 0f00000000, %p106;
	bra.uni 	$L__BB49_127;

$L__BB49_93:
	setp.eq.f32 	%p102, %f1, 0f00000000;
	setp.eq.f32 	%p103, %f1, 0f80000000;
	or.pred  	%p104, %p102, %p103;
	mov.f32 	%f314, 0f7FC00000;
	@%p104 bra 	$L__BB49_127;

	div.rn.f32 	%f314, %f2, %f1;
	abs.f32 	%f194, %f314;
	setp.geu.f32 	%p105, %f194, 0f7F800000;
	@%p105 bra 	$L__BB49_127;

	cvt.rmi.f32.f32 	%f195, %f314;
	mul.f32 	%f196, %f195, %f1;
	sub.f32 	%f314, %f2, %f196;
	bra.uni 	$L__BB49_127;

$L__BB49_126:
	add.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_103:
	setp.neu.f32 	%p114, %f2, %f1;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p114;
	bra.uni 	$L__BB49_127;

$L__BB49_108:
	mul.f32 	%f221, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f222, %f221;
	add.f32 	%f223, %f222, %f222;
	sub.f32 	%f224, %f1, %f223;
	abs.f32 	%f55, %f224;
	abs.f32 	%f56, %f2;
	setp.lt.f32 	%p119, %f56, 0f00800000;
	mul.f32 	%f225, %f56, 0f4B800000;
	selp.f32 	%f226, %f225, %f56, %p119;
	selp.f32 	%f227, 0fC3170000, 0fC2FE0000, %p119;
	mov.b32 	%r100, %f226;
	and.b32  	%r101, %r100, 8388607;
	or.b32  	%r102, %r101, 1065353216;
	mov.b32 	%f228, %r102;
	shr.u32 	%r103, %r100, 23;
	cvt.rn.f32.u32 	%f229, %r103;
	add.f32 	%f230, %f227, %f229;
	setp.gt.f32 	%p120, %f228, 0f3FB504F3;
	mul.f32 	%f231, %f228, 0f3F000000;
	add.f32 	%f232, %f230, 0f3F800000;
	selp.f32 	%f233, %f232, %f230, %p120;
	selp.f32 	%f234, %f231, %f228, %p120;
	add.f32 	%f235, %f234, 0fBF800000;
	add.f32 	%f236, %f234, 0f3F800000;
	rcp.approx.ftz.f32 	%f237, %f236;
	add.f32 	%f238, %f235, %f235;
	mul.f32 	%f239, %f238, %f237;
	mul.f32 	%f240, %f239, %f239;
	mov.f32 	%f241, 0f3C4CAF63;
	mov.f32 	%f242, 0f3B18F0FE;
	fma.rn.f32 	%f243, %f242, %f240, %f241;
	mov.f32 	%f244, 0f3DAAAABD;
	fma.rn.f32 	%f245, %f243, %f240, %f244;
	mul.rn.f32 	%f246, %f245, %f240;
	mul.rn.f32 	%f247, %f246, %f239;
	sub.f32 	%f248, %f235, %f239;
	add.f32 	%f249, %f248, %f248;
	neg.f32 	%f250, %f239;
	fma.rn.f32 	%f251, %f250, %f235, %f249;
	mul.rn.f32 	%f252, %f237, %f251;
	add.f32 	%f253, %f247, %f239;
	sub.f32 	%f254, %f239, %f253;
	add.f32 	%f255, %f247, %f254;
	add.f32 	%f256, %f252, %f255;
	add.f32 	%f257, %f253, %f256;
	sub.f32 	%f258, %f253, %f257;
	add.f32 	%f259, %f256, %f258;
	mov.f32 	%f260, 0f3F317200;
	mul.rn.f32 	%f261, %f233, %f260;
	mov.f32 	%f262, 0f35BFBE8E;
	mul.rn.f32 	%f263, %f233, %f262;
	add.f32 	%f264, %f261, %f257;
	sub.f32 	%f265, %f261, %f264;
	add.f32 	%f266, %f257, %f265;
	add.f32 	%f267, %f259, %f266;
	add.f32 	%f268, %f263, %f267;
	add.f32 	%f269, %f264, %f268;
	sub.f32 	%f270, %f264, %f269;
	add.f32 	%f271, %f268, %f270;
	abs.f32 	%f57, %f1;
	setp.gt.f32 	%p121, %f57, 0f77F684DF;
	mul.f32 	%f272, %f1, 0f39000000;
	selp.f32 	%f273, %f272, %f1, %p121;
	mul.rn.f32 	%f274, %f273, %f269;
	neg.f32 	%f275, %f274;
	fma.rn.f32 	%f276, %f273, %f269, %f275;
	fma.rn.f32 	%f277, %f273, %f271, %f276;
	mov.f32 	%f278, 0f00000000;
	fma.rn.f32 	%f279, %f278, %f269, %f277;
	add.rn.f32 	%f280, %f274, %f279;
	neg.f32 	%f281, %f280;
	add.rn.f32 	%f282, %f274, %f281;
	add.rn.f32 	%f283, %f282, %f279;
	mov.b32 	%r104, %f280;
	setp.eq.s32 	%p122, %r104, 1118925336;
	add.s32 	%r105, %r104, -1;
	mov.b32 	%f284, %r105;
	add.f32 	%f285, %f283, 0f37000000;
	selp.f32 	%f58, %f285, %f283, %p122;
	selp.f32 	%f286, %f284, %f280, %p122;
	mov.f32 	%f287, 0f3FB8AA3B;
	mul.rn.f32 	%f288, %f286, %f287;
	cvt.rzi.f32.f32 	%f289, %f288;
	abs.f32 	%f290, %f289;
	setp.gt.f32 	%p123, %f290, 0f42FC0000;
	mov.b32 	%r106, %f289;
	and.b32  	%r107, %r106, -2147483648;
	or.b32  	%r108, %r107, 1123811328;
	mov.b32 	%f291, %r108;
	selp.f32 	%f292, %f291, %f289, %p123;
	mov.f32 	%f293, 0fBF317218;
	fma.rn.f32 	%f294, %f292, %f293, %f286;
	mov.f32 	%f295, 0f3102E308;
	fma.rn.f32 	%f296, %f292, %f295, %f294;
	mul.f32 	%f297, %f296, 0f3FB8AA3B;
	add.f32 	%f298, %f292, 0f4B40007F;
	mov.b32 	%r109, %f298;
	shl.b32 	%r110, %r109, 23;
	mov.b32 	%f299, %r110;
	ex2.approx.ftz.f32 	%f300, %f297;
	mul.f32 	%f59, %f300, %f299;
	setp.eq.f32 	%p124, %f59, 0f7F800000;
	mov.f32 	%f311, 0f7F800000;
	@%p124 bra 	$L__BB49_110;

	fma.rn.f32 	%f311, %f59, %f58, %f59;

$L__BB49_110:
	setp.lt.f32 	%p125, %f2, 0f00000000;
	setp.eq.f32 	%p126, %f55, 0f3F800000;
	and.pred  	%p2, %p125, %p126;
	setp.eq.f32 	%p127, %f2, 0f00000000;
	@%p127 bra 	$L__BB49_114;
	bra.uni 	$L__BB49_111;

$L__BB49_114:
	add.f32 	%f304, %f2, %f2;
	mov.b32 	%r113, %f304;
	selp.b32 	%r114, %r113, 0, %p126;
	or.b32  	%r115, %r114, 2139095040;
	setp.lt.f32 	%p131, %f1, 0f00000000;
	selp.b32 	%r116, %r115, %r114, %p131;
	mov.b32 	%f313, %r116;
	bra.uni 	$L__BB49_115;

$L__BB49_98:
	mul.f32 	%f200, %f2, 0f2F800000;
	cvt.rzi.s32.f32 	%r66, %f200;
	cvt.rzi.f32.f32 	%f201, %f200;
	mul.f32 	%f202, %f201, 0f4F800000;
	sub.f32 	%f203, %f2, %f202;
	mov.b32 	%r67, %f203;
	setp.gt.u32 	%p107, %r67, -1090519040;
	selp.u32 	%r68, 1, 0, %p107;
	abs.f32 	%f204, %f203;
	cvt.rni.u32.f32 	%r69, %f204;
	neg.s32 	%r70, %r69;
	selp.b32 	%r71, %r70, %r69, %p107;
	sub.s32 	%r72, %r66, %r68;
	mov.b64 	%fd6, {%r71, %r72};
	mov.b64 	%rd12, %fd6;
	mul.f32 	%f205, %f1, 0f2F800000;
	cvt.rzi.s32.f32 	%r73, %f205;
	cvt.rzi.f32.f32 	%f206, %f205;
	mul.f32 	%f207, %f206, 0f4F800000;
	sub.f32 	%f208, %f1, %f207;
	mov.b32 	%r74, %f208;
	setp.gt.u32 	%p108, %r74, -1090519040;
	selp.u32 	%r75, 1, 0, %p108;
	abs.f32 	%f209, %f208;
	cvt.rni.u32.f32 	%r76, %f209;
	neg.s32 	%r77, %r76;
	selp.b32 	%r78, %r77, %r76, %p108;
	sub.s32 	%r79, %r73, %r75;
	mov.b64 	%fd7, {%r78, %r79};
	mov.b64 	%rd13, %fd7;
	cvt.u32.u64 	%r80, %rd12;
	cvt.u32.u64 	%r81, %rd13;
	or.b32  	%r82, %r81, %r80;
	setp.eq.s32 	%p109, %r82, 0;
	selp.f32 	%f314, 0f00000000, 0f3F800000, %p109;
	bra.uni 	$L__BB49_127;

$L__BB49_124:
	mul.f32 	%f314, %f2, %f1;
	bra.uni 	$L__BB49_127;

$L__BB49_48:
	mov.b32 	%r53, %f307;
	xor.b32  	%r54, %r53, -2147483648;
	mov.b32 	%f185, %r54;
	selp.f32 	%f309, %f185, %f307, %p1;
	setp.geu.f32 	%p58, %f1, 0f00000000;
	@%p58 bra 	$L__BB49_52;

	cvt.rzi.f32.f32 	%f186, %f2;
	setp.eq.f32 	%p59, %f186, %f2;
	@%p59 bra 	$L__BB49_52;

	mov.f32 	%f309, 0f7FFFFFFF;

$L__BB49_52:
	add.f32 	%f189, %f20, %f21;
	mov.b32 	%r59, %f189;
	setp.lt.s32 	%p62, %r59, 2139095040;
	@%p62 bra 	$L__BB49_59;

	setp.gtu.f32 	%p63, %f20, 0f7F800000;
	setp.gtu.f32 	%p64, %f21, 0f7F800000;
	or.pred  	%p65, %p63, %p64;
	@%p65 bra 	$L__BB49_58;
	bra.uni 	$L__BB49_54;

$L__BB49_58:
	add.f32 	%f309, %f2, %f1;
	bra.uni 	$L__BB49_59;

$L__BB49_54:
	setp.eq.f32 	%p66, %f21, 0f7F800000;
	@%p66 bra 	$L__BB49_57;
	bra.uni 	$L__BB49_55;

$L__BB49_57:
	setp.gt.f32 	%p69, %f20, 0f3F800000;
	selp.b32 	%r63, 2139095040, 0, %p69;
	xor.b32  	%r64, %r63, 2139095040;
	setp.lt.f32 	%p70, %f2, 0f00000000;
	selp.b32 	%r65, %r64, %r63, %p70;
	mov.b32 	%f190, %r65;
	setp.eq.f32 	%p71, %f1, 0fBF800000;
	selp.f32 	%f309, 0f3F800000, %f190, %p71;
	bra.uni 	$L__BB49_59;

$L__BB49_111:
	mov.b32 	%r111, %f311;
	xor.b32  	%r112, %r111, -2147483648;
	mov.b32 	%f301, %r112;
	selp.f32 	%f313, %f301, %f311, %p2;
	setp.geu.f32 	%p128, %f2, 0f00000000;
	@%p128 bra 	$L__BB49_115;

	cvt.rzi.f32.f32 	%f302, %f1;
	setp.eq.f32 	%p129, %f302, %f1;
	@%p129 bra 	$L__BB49_115;

	mov.f32 	%f313, 0f7FFFFFFF;

$L__BB49_115:
	add.f32 	%f305, %f56, %f57;
	mov.b32 	%r117, %f305;
	setp.lt.s32 	%p132, %r117, 2139095040;
	@%p132 bra 	$L__BB49_122;

	setp.gtu.f32 	%p133, %f56, 0f7F800000;
	setp.gtu.f32 	%p134, %f57, 0f7F800000;
	or.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB49_121;
	bra.uni 	$L__BB49_117;

$L__BB49_121:
	add.f32 	%f313, %f2, %f1;
	bra.uni 	$L__BB49_122;

$L__BB49_117:
	setp.eq.f32 	%p136, %f57, 0f7F800000;
	@%p136 bra 	$L__BB49_120;
	bra.uni 	$L__BB49_118;

$L__BB49_120:
	setp.gt.f32 	%p139, %f56, 0f3F800000;
	selp.b32 	%r121, 2139095040, 0, %p139;
	xor.b32  	%r122, %r121, 2139095040;
	setp.lt.f32 	%p140, %f1, 0f00000000;
	selp.b32 	%r123, %r122, %r121, %p140;
	mov.b32 	%f306, %r123;
	setp.eq.f32 	%p141, %f2, 0fBF800000;
	selp.f32 	%f313, 0f3F800000, %f306, %p141;
	bra.uni 	$L__BB49_122;

$L__BB49_55:
	setp.neu.f32 	%p67, %f20, 0f7F800000;
	@%p67 bra 	$L__BB49_59;

	setp.ge.f32 	%p68, %f2, 0f00000000;
	selp.b32 	%r60, 2139095040, 0, %p68;
	or.b32  	%r61, %r60, -2147483648;
	selp.b32 	%r62, %r61, %r60, %p1;
	mov.b32 	%f309, %r62;

$L__BB49_59:
	setp.eq.f32 	%p72, %f2, 0f00000000;
	setp.eq.f32 	%p73, %f1, 0f3F800000;
	or.pred  	%p74, %p73, %p72;
	selp.f32 	%f310, 0f3F800000, %f309, %p74;

$L__BB49_64:
	st.global.f32 	[%rd1], %f310;
	bra.uni 	$L__BB49_128;

$L__BB49_118:
	setp.neu.f32 	%p137, %f56, 0f7F800000;
	@%p137 bra 	$L__BB49_122;

	setp.ge.f32 	%p138, %f1, 0f00000000;
	selp.b32 	%r118, 2139095040, 0, %p138;
	or.b32  	%r119, %r118, -2147483648;
	selp.b32 	%r120, %r119, %r118, %p2;
	mov.b32 	%f313, %r120;

$L__BB49_122:
	setp.eq.f32 	%p142, %f1, 0f00000000;
	setp.eq.f32 	%p143, %f2, 0f3F800000;
	or.pred  	%p144, %p142, %p143;
	selp.f32 	%f314, 0f3F800000, %f313, %p144;

$L__BB49_127:
	st.global.f32 	[%rd1], %f314;

$L__BB49_128:
	bar.sync 	0;
	ret;

}
	// .globl	fill_d
.visible .entry fill_d(
	.param .u64 fill_d_param_0,
	.param .f64 fill_d_param_1,
	.param .u32 fill_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fill_d_param_0];
	ld.param.f64 	%fd1, [fill_d_param_1];
	ld.param.u32 	%r2, [fill_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f64 	[%rd4], %fd1;

$L__BB50_2:
	ret;

}
	// .globl	fill_f
.visible .entry fill_f(
	.param .u64 fill_f_param_0,
	.param .f64 fill_f_param_1,
	.param .u32 fill_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fill_f_param_0];
	ld.param.f64 	%fd1, [fill_f_param_1];
	ld.param.u32 	%r2, [fill_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB51_2;

	cvt.rn.f32.f64 	%f1, %fd1;
	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB51_2:
	ret;

}
	// .globl	cbind_d
.visible .entry cbind_d(
	.param .u64 cbind_d_param_0,
	.param .u64 cbind_d_param_1,
	.param .u64 cbind_d_param_2,
	.param .u32 cbind_d_param_3,
	.param .u32 cbind_d_param_4,
	.param .u32 cbind_d_param_5,
	.param .u32 cbind_d_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [cbind_d_param_0];
	ld.param.u64 	%rd3, [cbind_d_param_1];
	ld.param.u64 	%rd4, [cbind_d_param_2];
	ld.param.u32 	%r7, [cbind_d_param_3];
	ld.param.u32 	%r4, [cbind_d_param_4];
	ld.param.u32 	%r5, [cbind_d_param_5];
	ld.param.u32 	%r6, [cbind_d_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	max.s32 	%r8, %r4, %r6;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r12, %r10, %r9, %r11;
	div.s32 	%r1, %r12, %r8;
	mul.lo.s32 	%r13, %r1, %r8;
	sub.s32 	%r2, %r12, %r13;
	add.s32 	%r3, %r6, %r4;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB52_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r14, %r1, %r4, %r2;
	mul.wide.s32 	%rd6, %r14, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd7];
	mad.lo.s32 	%r15, %r1, %r3, %r2;
	mul.wide.s32 	%rd8, %r15, 8;
	add.s64 	%rd9, %rd1, %rd8;
	st.global.f64 	[%rd9], %fd1;

$L__BB52_2:
	setp.ge.s32 	%p4, %r1, %r5;
	setp.ge.s32 	%p5, %r2, %r6;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB52_4;

	cvta.to.global.u64 	%rd10, %rd3;
	mad.lo.s32 	%r16, %r1, %r6, %r2;
	mul.wide.s32 	%rd11, %r16, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f64 	%fd2, [%rd12];
	add.s32 	%r17, %r2, %r4;
	mad.lo.s32 	%r18, %r1, %r3, %r17;
	mul.wide.s32 	%rd13, %r18, 8;
	add.s64 	%rd14, %rd1, %rd13;
	st.global.f64 	[%rd14], %fd2;

$L__BB52_4:
	ret;

}
	// .globl	cbind_f
.visible .entry cbind_f(
	.param .u64 cbind_f_param_0,
	.param .u64 cbind_f_param_1,
	.param .u64 cbind_f_param_2,
	.param .u32 cbind_f_param_3,
	.param .u32 cbind_f_param_4,
	.param .u32 cbind_f_param_5,
	.param .u32 cbind_f_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [cbind_f_param_0];
	ld.param.u64 	%rd3, [cbind_f_param_1];
	ld.param.u64 	%rd4, [cbind_f_param_2];
	ld.param.u32 	%r7, [cbind_f_param_3];
	ld.param.u32 	%r4, [cbind_f_param_4];
	ld.param.u32 	%r5, [cbind_f_param_5];
	ld.param.u32 	%r6, [cbind_f_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	max.s32 	%r8, %r4, %r6;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r12, %r10, %r9, %r11;
	div.s32 	%r1, %r12, %r8;
	mul.lo.s32 	%r13, %r1, %r8;
	sub.s32 	%r2, %r12, %r13;
	add.s32 	%r3, %r6, %r4;
	setp.ge.s32 	%p1, %r1, %r7;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB53_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r14, %r1, %r4, %r2;
	mul.wide.s32 	%rd6, %r14, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mad.lo.s32 	%r15, %r1, %r3, %r2;
	mul.wide.s32 	%rd8, %r15, 4;
	add.s64 	%rd9, %rd1, %rd8;
	st.global.f32 	[%rd9], %f1;

$L__BB53_2:
	setp.ge.s32 	%p4, %r1, %r5;
	setp.ge.s32 	%p5, %r2, %r6;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB53_4;

	cvta.to.global.u64 	%rd10, %rd3;
	mad.lo.s32 	%r16, %r1, %r6, %r2;
	mul.wide.s32 	%rd11, %r16, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f2, [%rd12];
	add.s32 	%r17, %r2, %r4;
	mad.lo.s32 	%r18, %r1, %r3, %r17;
	mul.wide.s32 	%rd13, %r18, 4;
	add.s64 	%rd14, %rd1, %rd13;
	st.global.f32 	[%rd14], %f2;

$L__BB53_4:
	ret;

}
	// .globl	rbind_d
.visible .entry rbind_d(
	.param .u64 rbind_d_param_0,
	.param .u64 rbind_d_param_1,
	.param .u64 rbind_d_param_2,
	.param .u32 rbind_d_param_3,
	.param .u32 rbind_d_param_4,
	.param .u32 rbind_d_param_5,
	.param .u32 rbind_d_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [rbind_d_param_0];
	ld.param.u64 	%rd3, [rbind_d_param_1];
	ld.param.u64 	%rd4, [rbind_d_param_2];
	ld.param.u32 	%r3, [rbind_d_param_3];
	ld.param.u32 	%r4, [rbind_d_param_4];
	ld.param.u32 	%r5, [rbind_d_param_5];
	ld.param.u32 	%r6, [rbind_d_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	max.s32 	%r7, %r4, %r6;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r11, %r9, %r8, %r10;
	div.s32 	%r1, %r11, %r7;
	mul.lo.s32 	%r12, %r1, %r7;
	sub.s32 	%r2, %r11, %r12;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB54_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r13, %r1, %r4, %r2;
	mul.wide.s32 	%rd6, %r13, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd7];
	add.s64 	%rd8, %rd1, %rd6;
	st.global.f64 	[%rd8], %fd1;

$L__BB54_2:
	setp.ge.s32 	%p4, %r1, %r5;
	setp.ge.s32 	%p5, %r2, %r6;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB54_4;

	cvta.to.global.u64 	%rd9, %rd3;
	mad.lo.s32 	%r14, %r1, %r6, %r2;
	mul.wide.s32 	%rd10, %r14, 8;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.f64 	%fd2, [%rd11];
	add.s32 	%r15, %r1, %r3;
	mad.lo.s32 	%r16, %r15, %r4, %r2;
	mul.wide.s32 	%rd12, %r16, 8;
	add.s64 	%rd13, %rd1, %rd12;
	st.global.f64 	[%rd13], %fd2;

$L__BB54_4:
	ret;

}
	// .globl	rbind_f
.visible .entry rbind_f(
	.param .u64 rbind_f_param_0,
	.param .u64 rbind_f_param_1,
	.param .u64 rbind_f_param_2,
	.param .u32 rbind_f_param_3,
	.param .u32 rbind_f_param_4,
	.param .u32 rbind_f_param_5,
	.param .u32 rbind_f_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [rbind_f_param_0];
	ld.param.u64 	%rd3, [rbind_f_param_1];
	ld.param.u64 	%rd4, [rbind_f_param_2];
	ld.param.u32 	%r3, [rbind_f_param_3];
	ld.param.u32 	%r4, [rbind_f_param_4];
	ld.param.u32 	%r5, [rbind_f_param_5];
	ld.param.u32 	%r6, [rbind_f_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	max.s32 	%r7, %r4, %r6;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r11, %r9, %r8, %r10;
	div.s32 	%r1, %r11, %r7;
	mul.lo.s32 	%r12, %r1, %r7;
	sub.s32 	%r2, %r11, %r12;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB55_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r13, %r1, %r4, %r2;
	mul.wide.s32 	%rd6, %r13, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	add.s64 	%rd8, %rd1, %rd6;
	st.global.f32 	[%rd8], %f1;

$L__BB55_2:
	setp.ge.s32 	%p4, %r1, %r5;
	setp.ge.s32 	%p5, %r2, %r6;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB55_4;

	cvta.to.global.u64 	%rd9, %rd3;
	mad.lo.s32 	%r14, %r1, %r6, %r2;
	mul.wide.s32 	%rd10, %r14, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.f32 	%f2, [%rd11];
	add.s32 	%r15, %r1, %r3;
	mad.lo.s32 	%r16, %r15, %r4, %r2;
	mul.wide.s32 	%rd12, %r16, 4;
	add.s64 	%rd13, %rd1, %rd12;
	st.global.f32 	[%rd13], %f2;

$L__BB55_4:
	ret;

}
	// .globl	reduce_sum_d
.visible .entry reduce_sum_d(
	.param .u64 reduce_sum_d_param_0,
	.param .u64 reduce_sum_d_param_1,
	.param .u32 reduce_sum_d_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_sum_d_param_0];
	ld.param.u64 	%rd2, [reduce_sum_d_param_1];
	ld.param.u32 	%r11, [reduce_sum_d_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f64 	%fd44, 0d0000000000000000;
	@%p1 bra 	$L__BB56_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB56_2:
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd30, [%rd5];
	add.f64 	%fd44, %fd44, %fd30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB56_4;

	mul.wide.u32 	%rd6, %r8, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd31, [%rd7];
	add.f64 	%fd44, %fd44, %fd31;

$L__BB56_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB56_2;

$L__BB56_5:
	shl.b32 	%r13, %r4, 3;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f64 	[%r10], %fd44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB56_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB56_8;

	ld.shared.f64 	%fd32, [%r10+4096];
	add.f64 	%fd44, %fd44, %fd32;
	st.shared.f64 	[%r10], %fd44;

$L__BB56_8:
	bar.sync 	0;

$L__BB56_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB56_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB56_12;

	ld.shared.f64 	%fd33, [%r10+2048];
	add.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r10], %fd44;

$L__BB56_12:
	bar.sync 	0;

$L__BB56_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB56_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB56_16;

	ld.shared.f64 	%fd34, [%r10+1024];
	add.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r10], %fd44;

$L__BB56_16:
	bar.sync 	0;

$L__BB56_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB56_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB56_20;

	ld.shared.f64 	%fd35, [%r10+512];
	add.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r10], %fd44;

$L__BB56_20:
	bar.sync 	0;

$L__BB56_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB56_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB56_24;

	ld.volatile.shared.f64 	%fd36, [%r10+256];
	add.f64 	%fd44, %fd44, %fd36;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB56_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB56_26;

	ld.volatile.shared.f64 	%fd37, [%r10+128];
	add.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB56_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB56_28;

	ld.volatile.shared.f64 	%fd38, [%r10+64];
	add.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB56_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB56_30;

	ld.volatile.shared.f64 	%fd39, [%r10+32];
	add.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB56_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB56_32;

	ld.volatile.shared.f64 	%fd40, [%r10+16];
	add.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB56_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB56_34;

	ld.volatile.shared.f64 	%fd41, [%r10+8];
	add.f64 	%fd42, %fd44, %fd41;
	st.volatile.shared.f64 	[%r10], %fd42;

$L__BB56_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB56_36;

	ld.shared.f64 	%fd43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd43;

$L__BB56_36:
	ret;

}
	// .globl	reduce_sum_f
.visible .entry reduce_sum_f(
	.param .u64 reduce_sum_f_param_0,
	.param .u64 reduce_sum_f_param_1,
	.param .u32 reduce_sum_f_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_sum_f_param_0];
	ld.param.u64 	%rd2, [reduce_sum_f_param_1];
	ld.param.u32 	%r11, [reduce_sum_f_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f32 	%f44, 0f00000000;
	@%p1 bra 	$L__BB57_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB57_2:
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f30, [%rd5];
	add.f32 	%f44, %f44, %f30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB57_4;

	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f31, [%rd7];
	add.f32 	%f44, %f44, %f31;

$L__BB57_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB57_2;

$L__BB57_5:
	shl.b32 	%r13, %r4, 2;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f32 	[%r10], %f44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB57_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB57_8;

	ld.shared.f32 	%f32, [%r10+2048];
	add.f32 	%f44, %f44, %f32;
	st.shared.f32 	[%r10], %f44;

$L__BB57_8:
	bar.sync 	0;

$L__BB57_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB57_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB57_12;

	ld.shared.f32 	%f33, [%r10+1024];
	add.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r10], %f44;

$L__BB57_12:
	bar.sync 	0;

$L__BB57_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB57_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB57_16;

	ld.shared.f32 	%f34, [%r10+512];
	add.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r10], %f44;

$L__BB57_16:
	bar.sync 	0;

$L__BB57_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB57_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB57_20;

	ld.shared.f32 	%f35, [%r10+256];
	add.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r10], %f44;

$L__BB57_20:
	bar.sync 	0;

$L__BB57_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB57_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB57_24;

	ld.volatile.shared.f32 	%f36, [%r10+128];
	add.f32 	%f44, %f44, %f36;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB57_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB57_26;

	ld.volatile.shared.f32 	%f37, [%r10+64];
	add.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB57_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB57_28;

	ld.volatile.shared.f32 	%f38, [%r10+32];
	add.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB57_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB57_30;

	ld.volatile.shared.f32 	%f39, [%r10+16];
	add.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB57_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB57_32;

	ld.volatile.shared.f32 	%f40, [%r10+8];
	add.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB57_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB57_34;

	ld.volatile.shared.f32 	%f41, [%r10+4];
	add.f32 	%f42, %f44, %f41;
	st.volatile.shared.f32 	[%r10], %f42;

$L__BB57_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB57_36;

	ld.shared.f32 	%f43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f43;

$L__BB57_36:
	ret;

}
	// .globl	reduce_row_sum_d
.visible .entry reduce_row_sum_d(
	.param .u64 reduce_row_sum_d_param_0,
	.param .u64 reduce_row_sum_d_param_1,
	.param .u32 reduce_row_sum_d_param_2,
	.param .u32 reduce_row_sum_d_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<14>;
	.reg .f64 	%fd<56>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_sum_d_param_0];
	ld.param.u64 	%rd3, [reduce_row_sum_d_param_1];
	ld.param.u32 	%r9, [reduce_row_sum_d_param_2];
	ld.param.u32 	%r8, [reduce_row_sum_d_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB58_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f64 	%fd42, 0d0000000000000000;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB58_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB58_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd28, [%rd5];
	add.f64 	%fd42, %fd42, %fd28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB58_3;

$L__BB58_4:
	shl.b32 	%r11, %r2, 3;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f64 	[%r7], %fd42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB58_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB58_7;

	ld.shared.f64 	%fd29, [%r7+4096];
	add.f64 	%fd42, %fd42, %fd29;
	st.shared.f64 	[%r7], %fd42;

$L__BB58_7:
	bar.sync 	0;

$L__BB58_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB58_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB58_11;

	ld.shared.f64 	%fd30, [%r7+2048];
	add.f64 	%fd42, %fd42, %fd30;
	st.shared.f64 	[%r7], %fd42;

$L__BB58_11:
	bar.sync 	0;

$L__BB58_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB58_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB58_15;

	ld.shared.f64 	%fd31, [%r7+1024];
	add.f64 	%fd42, %fd42, %fd31;
	st.shared.f64 	[%r7], %fd42;

$L__BB58_15:
	bar.sync 	0;

$L__BB58_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB58_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB58_19;

	ld.shared.f64 	%fd32, [%r7+512];
	add.f64 	%fd42, %fd42, %fd32;
	st.shared.f64 	[%r7], %fd42;

$L__BB58_19:
	bar.sync 	0;

$L__BB58_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB58_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB58_23;

	ld.volatile.shared.f64 	%fd33, [%r7+256];
	add.f64 	%fd42, %fd42, %fd33;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB58_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB58_25;

	ld.volatile.shared.f64 	%fd34, [%r7+128];
	add.f64 	%fd42, %fd42, %fd34;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB58_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB58_27;

	ld.volatile.shared.f64 	%fd35, [%r7+64];
	add.f64 	%fd42, %fd42, %fd35;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB58_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB58_29;

	ld.volatile.shared.f64 	%fd36, [%r7+32];
	add.f64 	%fd42, %fd42, %fd36;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB58_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB58_31;

	ld.volatile.shared.f64 	%fd37, [%r7+16];
	add.f64 	%fd42, %fd42, %fd37;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB58_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB58_33;

	ld.volatile.shared.f64 	%fd38, [%r7+8];
	add.f64 	%fd39, %fd42, %fd38;
	st.volatile.shared.f64 	[%r7], %fd39;

$L__BB58_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB58_35;

	ld.shared.f64 	%fd40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd40;

$L__BB58_35:
	ret;

}
	// .globl	reduce_row_sum_f
.visible .entry reduce_row_sum_f(
	.param .u64 reduce_row_sum_f_param_0,
	.param .u64 reduce_row_sum_f_param_1,
	.param .u32 reduce_row_sum_f_param_2,
	.param .u32 reduce_row_sum_f_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_sum_f_param_0];
	ld.param.u64 	%rd3, [reduce_row_sum_f_param_1];
	ld.param.u32 	%r9, [reduce_row_sum_f_param_2];
	ld.param.u32 	%r8, [reduce_row_sum_f_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB59_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f32 	%f42, 0f00000000;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB59_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB59_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f28, [%rd5];
	add.f32 	%f42, %f42, %f28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB59_3;

$L__BB59_4:
	shl.b32 	%r11, %r2, 2;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f32 	[%r7], %f42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB59_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB59_7;

	ld.shared.f32 	%f29, [%r7+2048];
	add.f32 	%f42, %f42, %f29;
	st.shared.f32 	[%r7], %f42;

$L__BB59_7:
	bar.sync 	0;

$L__BB59_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB59_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB59_11;

	ld.shared.f32 	%f30, [%r7+1024];
	add.f32 	%f42, %f42, %f30;
	st.shared.f32 	[%r7], %f42;

$L__BB59_11:
	bar.sync 	0;

$L__BB59_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB59_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB59_15;

	ld.shared.f32 	%f31, [%r7+512];
	add.f32 	%f42, %f42, %f31;
	st.shared.f32 	[%r7], %f42;

$L__BB59_15:
	bar.sync 	0;

$L__BB59_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB59_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB59_19;

	ld.shared.f32 	%f32, [%r7+256];
	add.f32 	%f42, %f42, %f32;
	st.shared.f32 	[%r7], %f42;

$L__BB59_19:
	bar.sync 	0;

$L__BB59_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB59_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB59_23;

	ld.volatile.shared.f32 	%f33, [%r7+128];
	add.f32 	%f42, %f42, %f33;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB59_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB59_25;

	ld.volatile.shared.f32 	%f34, [%r7+64];
	add.f32 	%f42, %f42, %f34;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB59_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB59_27;

	ld.volatile.shared.f32 	%f35, [%r7+32];
	add.f32 	%f42, %f42, %f35;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB59_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB59_29;

	ld.volatile.shared.f32 	%f36, [%r7+16];
	add.f32 	%f42, %f42, %f36;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB59_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB59_31;

	ld.volatile.shared.f32 	%f37, [%r7+8];
	add.f32 	%f42, %f42, %f37;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB59_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB59_33;

	ld.volatile.shared.f32 	%f38, [%r7+4];
	add.f32 	%f39, %f42, %f38;
	st.volatile.shared.f32 	[%r7], %f39;

$L__BB59_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB59_35;

	ld.shared.f32 	%f40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f40;

$L__BB59_35:
	ret;

}
	// .globl	reduce_col_sum_d
.visible .entry reduce_col_sum_d(
	.param .u64 reduce_col_sum_d_param_0,
	.param .u64 reduce_col_sum_d_param_1,
	.param .u32 reduce_col_sum_d_param_2,
	.param .u32 reduce_col_sum_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_sum_d_param_0];
	ld.param.u64 	%rd3, [reduce_col_sum_d_param_1];
	ld.param.u32 	%r5, [reduce_col_sum_d_param_2];
	ld.param.u32 	%r6, [reduce_col_sum_d_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB60_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f64 	%fd8, 0d0000000000000000;
	@%p2 bra 	$L__BB60_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB60_3:
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd6, [%rd5];
	add.f64 	%fd8, %fd8, %fd6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB60_3;

$L__BB60_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd8;

$L__BB60_5:
	ret;

}
	// .globl	reduce_col_sum_f
.visible .entry reduce_col_sum_f(
	.param .u64 reduce_col_sum_f_param_0,
	.param .u64 reduce_col_sum_f_param_1,
	.param .u32 reduce_col_sum_f_param_2,
	.param .u32 reduce_col_sum_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_sum_f_param_0];
	ld.param.u64 	%rd3, [reduce_col_sum_f_param_1];
	ld.param.u32 	%r5, [reduce_col_sum_f_param_2];
	ld.param.u32 	%r6, [reduce_col_sum_f_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB61_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f32 	%f8, 0f00000000;
	@%p2 bra 	$L__BB61_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB61_3:
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f6, [%rd5];
	add.f32 	%f8, %f8, %f6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB61_3;

$L__BB61_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f8;

$L__BB61_5:
	ret;

}
	// .globl	reduce_max_d
.visible .entry reduce_max_d(
	.param .u64 reduce_max_d_param_0,
	.param .u64 reduce_max_d_param_1,
	.param .u32 reduce_max_d_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_max_d_param_0];
	ld.param.u64 	%rd2, [reduce_max_d_param_1];
	ld.param.u32 	%r11, [reduce_max_d_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f64 	%fd44, 0dFFEFFFFFFFFFFFFF;
	@%p1 bra 	$L__BB62_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB62_2:
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd30, [%rd5];
	max.f64 	%fd44, %fd44, %fd30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB62_4;

	mul.wide.u32 	%rd6, %r8, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd31, [%rd7];
	max.f64 	%fd44, %fd44, %fd31;

$L__BB62_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB62_2;

$L__BB62_5:
	shl.b32 	%r13, %r4, 3;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f64 	[%r10], %fd44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB62_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB62_8;

	ld.shared.f64 	%fd32, [%r10+4096];
	max.f64 	%fd44, %fd44, %fd32;
	st.shared.f64 	[%r10], %fd44;

$L__BB62_8:
	bar.sync 	0;

$L__BB62_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB62_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB62_12;

	ld.shared.f64 	%fd33, [%r10+2048];
	max.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r10], %fd44;

$L__BB62_12:
	bar.sync 	0;

$L__BB62_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB62_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB62_16;

	ld.shared.f64 	%fd34, [%r10+1024];
	max.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r10], %fd44;

$L__BB62_16:
	bar.sync 	0;

$L__BB62_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB62_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB62_20;

	ld.shared.f64 	%fd35, [%r10+512];
	max.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r10], %fd44;

$L__BB62_20:
	bar.sync 	0;

$L__BB62_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB62_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB62_24;

	ld.volatile.shared.f64 	%fd36, [%r10+256];
	max.f64 	%fd44, %fd44, %fd36;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB62_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB62_26;

	ld.volatile.shared.f64 	%fd37, [%r10+128];
	max.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB62_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB62_28;

	ld.volatile.shared.f64 	%fd38, [%r10+64];
	max.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB62_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB62_30;

	ld.volatile.shared.f64 	%fd39, [%r10+32];
	max.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB62_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB62_32;

	ld.volatile.shared.f64 	%fd40, [%r10+16];
	max.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB62_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB62_34;

	ld.volatile.shared.f64 	%fd41, [%r10+8];
	max.f64 	%fd42, %fd44, %fd41;
	st.volatile.shared.f64 	[%r10], %fd42;

$L__BB62_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB62_36;

	ld.shared.f64 	%fd43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd43;

$L__BB62_36:
	ret;

}
	// .globl	reduce_max_f
.visible .entry reduce_max_f(
	.param .u64 reduce_max_f_param_0,
	.param .u64 reduce_max_f_param_1,
	.param .u32 reduce_max_f_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_max_f_param_0];
	ld.param.u64 	%rd2, [reduce_max_f_param_1];
	ld.param.u32 	%r11, [reduce_max_f_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f32 	%f44, 0fFF7FFFFF;
	@%p1 bra 	$L__BB63_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB63_2:
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f30, [%rd5];
	max.f32 	%f44, %f44, %f30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB63_4;

	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f31, [%rd7];
	max.f32 	%f44, %f44, %f31;

$L__BB63_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB63_2;

$L__BB63_5:
	shl.b32 	%r13, %r4, 2;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f32 	[%r10], %f44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB63_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB63_8;

	ld.shared.f32 	%f32, [%r10+2048];
	max.f32 	%f44, %f44, %f32;
	st.shared.f32 	[%r10], %f44;

$L__BB63_8:
	bar.sync 	0;

$L__BB63_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB63_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB63_12;

	ld.shared.f32 	%f33, [%r10+1024];
	max.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r10], %f44;

$L__BB63_12:
	bar.sync 	0;

$L__BB63_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB63_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB63_16;

	ld.shared.f32 	%f34, [%r10+512];
	max.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r10], %f44;

$L__BB63_16:
	bar.sync 	0;

$L__BB63_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB63_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB63_20;

	ld.shared.f32 	%f35, [%r10+256];
	max.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r10], %f44;

$L__BB63_20:
	bar.sync 	0;

$L__BB63_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB63_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB63_24;

	ld.volatile.shared.f32 	%f36, [%r10+128];
	max.f32 	%f44, %f44, %f36;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB63_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB63_26;

	ld.volatile.shared.f32 	%f37, [%r10+64];
	max.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB63_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB63_28;

	ld.volatile.shared.f32 	%f38, [%r10+32];
	max.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB63_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB63_30;

	ld.volatile.shared.f32 	%f39, [%r10+16];
	max.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB63_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB63_32;

	ld.volatile.shared.f32 	%f40, [%r10+8];
	max.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB63_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB63_34;

	ld.volatile.shared.f32 	%f41, [%r10+4];
	max.f32 	%f42, %f44, %f41;
	st.volatile.shared.f32 	[%r10], %f42;

$L__BB63_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB63_36;

	ld.shared.f32 	%f43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f43;

$L__BB63_36:
	ret;

}
	// .globl	reduce_row_max_d
.visible .entry reduce_row_max_d(
	.param .u64 reduce_row_max_d_param_0,
	.param .u64 reduce_row_max_d_param_1,
	.param .u32 reduce_row_max_d_param_2,
	.param .u32 reduce_row_max_d_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<14>;
	.reg .f64 	%fd<56>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_max_d_param_0];
	ld.param.u64 	%rd3, [reduce_row_max_d_param_1];
	ld.param.u32 	%r9, [reduce_row_max_d_param_2];
	ld.param.u32 	%r8, [reduce_row_max_d_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB64_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f64 	%fd42, 0dFFEFFFFFFFFFFFFF;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB64_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB64_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd28, [%rd5];
	max.f64 	%fd42, %fd42, %fd28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB64_3;

$L__BB64_4:
	shl.b32 	%r11, %r2, 3;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f64 	[%r7], %fd42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB64_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB64_7;

	ld.shared.f64 	%fd29, [%r7+4096];
	max.f64 	%fd42, %fd42, %fd29;
	st.shared.f64 	[%r7], %fd42;

$L__BB64_7:
	bar.sync 	0;

$L__BB64_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB64_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB64_11;

	ld.shared.f64 	%fd30, [%r7+2048];
	max.f64 	%fd42, %fd42, %fd30;
	st.shared.f64 	[%r7], %fd42;

$L__BB64_11:
	bar.sync 	0;

$L__BB64_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB64_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB64_15;

	ld.shared.f64 	%fd31, [%r7+1024];
	max.f64 	%fd42, %fd42, %fd31;
	st.shared.f64 	[%r7], %fd42;

$L__BB64_15:
	bar.sync 	0;

$L__BB64_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB64_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB64_19;

	ld.shared.f64 	%fd32, [%r7+512];
	max.f64 	%fd42, %fd42, %fd32;
	st.shared.f64 	[%r7], %fd42;

$L__BB64_19:
	bar.sync 	0;

$L__BB64_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB64_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB64_23;

	ld.volatile.shared.f64 	%fd33, [%r7+256];
	max.f64 	%fd42, %fd42, %fd33;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB64_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB64_25;

	ld.volatile.shared.f64 	%fd34, [%r7+128];
	max.f64 	%fd42, %fd42, %fd34;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB64_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB64_27;

	ld.volatile.shared.f64 	%fd35, [%r7+64];
	max.f64 	%fd42, %fd42, %fd35;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB64_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB64_29;

	ld.volatile.shared.f64 	%fd36, [%r7+32];
	max.f64 	%fd42, %fd42, %fd36;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB64_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB64_31;

	ld.volatile.shared.f64 	%fd37, [%r7+16];
	max.f64 	%fd42, %fd42, %fd37;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB64_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB64_33;

	ld.volatile.shared.f64 	%fd38, [%r7+8];
	max.f64 	%fd39, %fd42, %fd38;
	st.volatile.shared.f64 	[%r7], %fd39;

$L__BB64_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB64_35;

	ld.shared.f64 	%fd40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd40;

$L__BB64_35:
	ret;

}
	// .globl	reduce_row_max_f
.visible .entry reduce_row_max_f(
	.param .u64 reduce_row_max_f_param_0,
	.param .u64 reduce_row_max_f_param_1,
	.param .u32 reduce_row_max_f_param_2,
	.param .u32 reduce_row_max_f_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_max_f_param_0];
	ld.param.u64 	%rd3, [reduce_row_max_f_param_1];
	ld.param.u32 	%r9, [reduce_row_max_f_param_2];
	ld.param.u32 	%r8, [reduce_row_max_f_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB65_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f32 	%f42, 0fFF7FFFFF;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB65_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB65_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f28, [%rd5];
	max.f32 	%f42, %f42, %f28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB65_3;

$L__BB65_4:
	shl.b32 	%r11, %r2, 2;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f32 	[%r7], %f42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB65_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB65_7;

	ld.shared.f32 	%f29, [%r7+2048];
	max.f32 	%f42, %f42, %f29;
	st.shared.f32 	[%r7], %f42;

$L__BB65_7:
	bar.sync 	0;

$L__BB65_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB65_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB65_11;

	ld.shared.f32 	%f30, [%r7+1024];
	max.f32 	%f42, %f42, %f30;
	st.shared.f32 	[%r7], %f42;

$L__BB65_11:
	bar.sync 	0;

$L__BB65_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB65_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB65_15;

	ld.shared.f32 	%f31, [%r7+512];
	max.f32 	%f42, %f42, %f31;
	st.shared.f32 	[%r7], %f42;

$L__BB65_15:
	bar.sync 	0;

$L__BB65_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB65_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB65_19;

	ld.shared.f32 	%f32, [%r7+256];
	max.f32 	%f42, %f42, %f32;
	st.shared.f32 	[%r7], %f42;

$L__BB65_19:
	bar.sync 	0;

$L__BB65_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB65_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB65_23;

	ld.volatile.shared.f32 	%f33, [%r7+128];
	max.f32 	%f42, %f42, %f33;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB65_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB65_25;

	ld.volatile.shared.f32 	%f34, [%r7+64];
	max.f32 	%f42, %f42, %f34;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB65_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB65_27;

	ld.volatile.shared.f32 	%f35, [%r7+32];
	max.f32 	%f42, %f42, %f35;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB65_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB65_29;

	ld.volatile.shared.f32 	%f36, [%r7+16];
	max.f32 	%f42, %f42, %f36;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB65_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB65_31;

	ld.volatile.shared.f32 	%f37, [%r7+8];
	max.f32 	%f42, %f42, %f37;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB65_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB65_33;

	ld.volatile.shared.f32 	%f38, [%r7+4];
	max.f32 	%f39, %f42, %f38;
	st.volatile.shared.f32 	[%r7], %f39;

$L__BB65_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB65_35;

	ld.shared.f32 	%f40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f40;

$L__BB65_35:
	ret;

}
	// .globl	reduce_col_max_d
.visible .entry reduce_col_max_d(
	.param .u64 reduce_col_max_d_param_0,
	.param .u64 reduce_col_max_d_param_1,
	.param .u32 reduce_col_max_d_param_2,
	.param .u32 reduce_col_max_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_max_d_param_0];
	ld.param.u64 	%rd3, [reduce_col_max_d_param_1];
	ld.param.u32 	%r5, [reduce_col_max_d_param_2];
	ld.param.u32 	%r6, [reduce_col_max_d_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB66_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f64 	%fd8, 0dFFEFFFFFFFFFFFFF;
	@%p2 bra 	$L__BB66_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB66_3:
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd6, [%rd5];
	max.f64 	%fd8, %fd8, %fd6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB66_3;

$L__BB66_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd8;

$L__BB66_5:
	ret;

}
	// .globl	reduce_col_max_f
.visible .entry reduce_col_max_f(
	.param .u64 reduce_col_max_f_param_0,
	.param .u64 reduce_col_max_f_param_1,
	.param .u32 reduce_col_max_f_param_2,
	.param .u32 reduce_col_max_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_max_f_param_0];
	ld.param.u64 	%rd3, [reduce_col_max_f_param_1];
	ld.param.u32 	%r5, [reduce_col_max_f_param_2];
	ld.param.u32 	%r6, [reduce_col_max_f_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB67_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f32 	%f8, 0fFF7FFFFF;
	@%p2 bra 	$L__BB67_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB67_3:
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f6, [%rd5];
	max.f32 	%f8, %f8, %f6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB67_3;

$L__BB67_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f8;

$L__BB67_5:
	ret;

}
	// .globl	reduce_min_d
.visible .entry reduce_min_d(
	.param .u64 reduce_min_d_param_0,
	.param .u64 reduce_min_d_param_1,
	.param .u32 reduce_min_d_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_min_d_param_0];
	ld.param.u64 	%rd2, [reduce_min_d_param_1];
	ld.param.u32 	%r11, [reduce_min_d_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f64 	%fd44, 0d7FEFFFFFFFFFFFFF;
	@%p1 bra 	$L__BB68_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB68_2:
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd30, [%rd5];
	min.f64 	%fd44, %fd44, %fd30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB68_4;

	mul.wide.u32 	%rd6, %r8, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd31, [%rd7];
	min.f64 	%fd44, %fd44, %fd31;

$L__BB68_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB68_2;

$L__BB68_5:
	shl.b32 	%r13, %r4, 3;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f64 	[%r10], %fd44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB68_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB68_8;

	ld.shared.f64 	%fd32, [%r10+4096];
	min.f64 	%fd44, %fd44, %fd32;
	st.shared.f64 	[%r10], %fd44;

$L__BB68_8:
	bar.sync 	0;

$L__BB68_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB68_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB68_12;

	ld.shared.f64 	%fd33, [%r10+2048];
	min.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r10], %fd44;

$L__BB68_12:
	bar.sync 	0;

$L__BB68_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB68_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB68_16;

	ld.shared.f64 	%fd34, [%r10+1024];
	min.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r10], %fd44;

$L__BB68_16:
	bar.sync 	0;

$L__BB68_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB68_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB68_20;

	ld.shared.f64 	%fd35, [%r10+512];
	min.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r10], %fd44;

$L__BB68_20:
	bar.sync 	0;

$L__BB68_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB68_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB68_24;

	ld.volatile.shared.f64 	%fd36, [%r10+256];
	min.f64 	%fd44, %fd44, %fd36;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB68_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB68_26;

	ld.volatile.shared.f64 	%fd37, [%r10+128];
	min.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB68_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB68_28;

	ld.volatile.shared.f64 	%fd38, [%r10+64];
	min.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB68_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB68_30;

	ld.volatile.shared.f64 	%fd39, [%r10+32];
	min.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB68_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB68_32;

	ld.volatile.shared.f64 	%fd40, [%r10+16];
	min.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB68_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB68_34;

	ld.volatile.shared.f64 	%fd41, [%r10+8];
	min.f64 	%fd42, %fd44, %fd41;
	st.volatile.shared.f64 	[%r10], %fd42;

$L__BB68_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB68_36;

	ld.shared.f64 	%fd43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd43;

$L__BB68_36:
	ret;

}
	// .globl	reduce_min_f
.visible .entry reduce_min_f(
	.param .u64 reduce_min_f_param_0,
	.param .u64 reduce_min_f_param_1,
	.param .u32 reduce_min_f_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_min_f_param_0];
	ld.param.u64 	%rd2, [reduce_min_f_param_1];
	ld.param.u32 	%r11, [reduce_min_f_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f32 	%f44, 0f7F7FFFFF;
	@%p1 bra 	$L__BB69_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB69_2:
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f30, [%rd5];
	min.f32 	%f44, %f44, %f30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB69_4;

	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f31, [%rd7];
	min.f32 	%f44, %f44, %f31;

$L__BB69_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB69_2;

$L__BB69_5:
	shl.b32 	%r13, %r4, 2;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f32 	[%r10], %f44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB69_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB69_8;

	ld.shared.f32 	%f32, [%r10+2048];
	min.f32 	%f44, %f44, %f32;
	st.shared.f32 	[%r10], %f44;

$L__BB69_8:
	bar.sync 	0;

$L__BB69_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB69_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB69_12;

	ld.shared.f32 	%f33, [%r10+1024];
	min.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r10], %f44;

$L__BB69_12:
	bar.sync 	0;

$L__BB69_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB69_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB69_16;

	ld.shared.f32 	%f34, [%r10+512];
	min.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r10], %f44;

$L__BB69_16:
	bar.sync 	0;

$L__BB69_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB69_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB69_20;

	ld.shared.f32 	%f35, [%r10+256];
	min.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r10], %f44;

$L__BB69_20:
	bar.sync 	0;

$L__BB69_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB69_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB69_24;

	ld.volatile.shared.f32 	%f36, [%r10+128];
	min.f32 	%f44, %f44, %f36;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB69_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB69_26;

	ld.volatile.shared.f32 	%f37, [%r10+64];
	min.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB69_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB69_28;

	ld.volatile.shared.f32 	%f38, [%r10+32];
	min.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB69_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB69_30;

	ld.volatile.shared.f32 	%f39, [%r10+16];
	min.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB69_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB69_32;

	ld.volatile.shared.f32 	%f40, [%r10+8];
	min.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB69_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB69_34;

	ld.volatile.shared.f32 	%f41, [%r10+4];
	min.f32 	%f42, %f44, %f41;
	st.volatile.shared.f32 	[%r10], %f42;

$L__BB69_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB69_36;

	ld.shared.f32 	%f43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f43;

$L__BB69_36:
	ret;

}
	// .globl	reduce_row_min_d
.visible .entry reduce_row_min_d(
	.param .u64 reduce_row_min_d_param_0,
	.param .u64 reduce_row_min_d_param_1,
	.param .u32 reduce_row_min_d_param_2,
	.param .u32 reduce_row_min_d_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<14>;
	.reg .f64 	%fd<56>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_min_d_param_0];
	ld.param.u64 	%rd3, [reduce_row_min_d_param_1];
	ld.param.u32 	%r9, [reduce_row_min_d_param_2];
	ld.param.u32 	%r8, [reduce_row_min_d_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB70_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f64 	%fd42, 0d7FEFFFFFFFFFFFFF;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB70_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB70_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd28, [%rd5];
	min.f64 	%fd42, %fd42, %fd28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB70_3;

$L__BB70_4:
	shl.b32 	%r11, %r2, 3;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f64 	[%r7], %fd42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB70_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB70_7;

	ld.shared.f64 	%fd29, [%r7+4096];
	min.f64 	%fd42, %fd42, %fd29;
	st.shared.f64 	[%r7], %fd42;

$L__BB70_7:
	bar.sync 	0;

$L__BB70_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB70_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB70_11;

	ld.shared.f64 	%fd30, [%r7+2048];
	min.f64 	%fd42, %fd42, %fd30;
	st.shared.f64 	[%r7], %fd42;

$L__BB70_11:
	bar.sync 	0;

$L__BB70_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB70_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB70_15;

	ld.shared.f64 	%fd31, [%r7+1024];
	min.f64 	%fd42, %fd42, %fd31;
	st.shared.f64 	[%r7], %fd42;

$L__BB70_15:
	bar.sync 	0;

$L__BB70_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB70_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB70_19;

	ld.shared.f64 	%fd32, [%r7+512];
	min.f64 	%fd42, %fd42, %fd32;
	st.shared.f64 	[%r7], %fd42;

$L__BB70_19:
	bar.sync 	0;

$L__BB70_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB70_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB70_23;

	ld.volatile.shared.f64 	%fd33, [%r7+256];
	min.f64 	%fd42, %fd42, %fd33;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB70_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB70_25;

	ld.volatile.shared.f64 	%fd34, [%r7+128];
	min.f64 	%fd42, %fd42, %fd34;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB70_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB70_27;

	ld.volatile.shared.f64 	%fd35, [%r7+64];
	min.f64 	%fd42, %fd42, %fd35;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB70_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB70_29;

	ld.volatile.shared.f64 	%fd36, [%r7+32];
	min.f64 	%fd42, %fd42, %fd36;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB70_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB70_31;

	ld.volatile.shared.f64 	%fd37, [%r7+16];
	min.f64 	%fd42, %fd42, %fd37;
	st.volatile.shared.f64 	[%r7], %fd42;

$L__BB70_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB70_33;

	ld.volatile.shared.f64 	%fd38, [%r7+8];
	min.f64 	%fd39, %fd42, %fd38;
	st.volatile.shared.f64 	[%r7], %fd39;

$L__BB70_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB70_35;

	ld.shared.f64 	%fd40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd40;

$L__BB70_35:
	ret;

}
	// .globl	reduce_row_min_f
.visible .entry reduce_row_min_f(
	.param .u64 reduce_row_min_f_param_0,
	.param .u64 reduce_row_min_f_param_1,
	.param .u32 reduce_row_min_f_param_2,
	.param .u32 reduce_row_min_f_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_min_f_param_0];
	ld.param.u64 	%rd3, [reduce_row_min_f_param_1];
	ld.param.u32 	%r9, [reduce_row_min_f_param_2];
	ld.param.u32 	%r8, [reduce_row_min_f_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB71_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f32 	%f42, 0f7F7FFFFF;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB71_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB71_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f28, [%rd5];
	min.f32 	%f42, %f42, %f28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB71_3;

$L__BB71_4:
	shl.b32 	%r11, %r2, 2;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f32 	[%r7], %f42;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB71_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB71_7;

	ld.shared.f32 	%f29, [%r7+2048];
	min.f32 	%f42, %f42, %f29;
	st.shared.f32 	[%r7], %f42;

$L__BB71_7:
	bar.sync 	0;

$L__BB71_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB71_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB71_11;

	ld.shared.f32 	%f30, [%r7+1024];
	min.f32 	%f42, %f42, %f30;
	st.shared.f32 	[%r7], %f42;

$L__BB71_11:
	bar.sync 	0;

$L__BB71_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB71_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB71_15;

	ld.shared.f32 	%f31, [%r7+512];
	min.f32 	%f42, %f42, %f31;
	st.shared.f32 	[%r7], %f42;

$L__BB71_15:
	bar.sync 	0;

$L__BB71_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB71_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB71_19;

	ld.shared.f32 	%f32, [%r7+256];
	min.f32 	%f42, %f42, %f32;
	st.shared.f32 	[%r7], %f42;

$L__BB71_19:
	bar.sync 	0;

$L__BB71_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB71_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB71_23;

	ld.volatile.shared.f32 	%f33, [%r7+128];
	min.f32 	%f42, %f42, %f33;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB71_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB71_25;

	ld.volatile.shared.f32 	%f34, [%r7+64];
	min.f32 	%f42, %f42, %f34;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB71_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB71_27;

	ld.volatile.shared.f32 	%f35, [%r7+32];
	min.f32 	%f42, %f42, %f35;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB71_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB71_29;

	ld.volatile.shared.f32 	%f36, [%r7+16];
	min.f32 	%f42, %f42, %f36;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB71_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB71_31;

	ld.volatile.shared.f32 	%f37, [%r7+8];
	min.f32 	%f42, %f42, %f37;
	st.volatile.shared.f32 	[%r7], %f42;

$L__BB71_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB71_33;

	ld.volatile.shared.f32 	%f38, [%r7+4];
	min.f32 	%f39, %f42, %f38;
	st.volatile.shared.f32 	[%r7], %f39;

$L__BB71_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB71_35;

	ld.shared.f32 	%f40, [memory];
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f40;

$L__BB71_35:
	ret;

}
	// .globl	reduce_col_min_d
.visible .entry reduce_col_min_d(
	.param .u64 reduce_col_min_d_param_0,
	.param .u64 reduce_col_min_d_param_1,
	.param .u32 reduce_col_min_d_param_2,
	.param .u32 reduce_col_min_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_min_d_param_0];
	ld.param.u64 	%rd3, [reduce_col_min_d_param_1];
	ld.param.u32 	%r5, [reduce_col_min_d_param_2];
	ld.param.u32 	%r6, [reduce_col_min_d_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB72_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f64 	%fd8, 0d7FEFFFFFFFFFFFFF;
	@%p2 bra 	$L__BB72_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB72_3:
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd6, [%rd5];
	min.f64 	%fd8, %fd8, %fd6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB72_3;

$L__BB72_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd8;

$L__BB72_5:
	ret;

}
	// .globl	reduce_col_min_f
.visible .entry reduce_col_min_f(
	.param .u64 reduce_col_min_f_param_0,
	.param .u64 reduce_col_min_f_param_1,
	.param .u32 reduce_col_min_f_param_2,
	.param .u32 reduce_col_min_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_min_f_param_0];
	ld.param.u64 	%rd3, [reduce_col_min_f_param_1];
	ld.param.u32 	%r5, [reduce_col_min_f_param_2];
	ld.param.u32 	%r6, [reduce_col_min_f_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB73_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f32 	%f8, 0f7F7FFFFF;
	@%p2 bra 	$L__BB73_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB73_3:
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f6, [%rd5];
	min.f32 	%f8, %f8, %f6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB73_3;

$L__BB73_4:
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f8;

$L__BB73_5:
	ret;

}
	// .globl	reduce_prod_d
.visible .entry reduce_prod_d(
	.param .u64 reduce_prod_d_param_0,
	.param .u64 reduce_prod_d_param_1,
	.param .u32 reduce_prod_d_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_prod_d_param_0];
	ld.param.u64 	%rd2, [reduce_prod_d_param_1];
	ld.param.u32 	%r11, [reduce_prod_d_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f64 	%fd44, 0d3FF0000000000000;
	@%p1 bra 	$L__BB74_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB74_2:
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd30, [%rd5];
	mul.f64 	%fd44, %fd44, %fd30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB74_4;

	mul.wide.u32 	%rd6, %r8, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd31, [%rd7];
	mul.f64 	%fd44, %fd44, %fd31;

$L__BB74_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB74_2;

$L__BB74_5:
	shl.b32 	%r13, %r4, 3;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f64 	[%r10], %fd44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB74_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB74_8;

	ld.shared.f64 	%fd32, [%r10+4096];
	mul.f64 	%fd44, %fd44, %fd32;
	st.shared.f64 	[%r10], %fd44;

$L__BB74_8:
	bar.sync 	0;

$L__BB74_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB74_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB74_12;

	ld.shared.f64 	%fd33, [%r10+2048];
	mul.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r10], %fd44;

$L__BB74_12:
	bar.sync 	0;

$L__BB74_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB74_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB74_16;

	ld.shared.f64 	%fd34, [%r10+1024];
	mul.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r10], %fd44;

$L__BB74_16:
	bar.sync 	0;

$L__BB74_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB74_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB74_20;

	ld.shared.f64 	%fd35, [%r10+512];
	mul.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r10], %fd44;

$L__BB74_20:
	bar.sync 	0;

$L__BB74_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB74_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB74_24;

	ld.volatile.shared.f64 	%fd36, [%r10+256];
	mul.f64 	%fd44, %fd44, %fd36;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB74_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB74_26;

	ld.volatile.shared.f64 	%fd37, [%r10+128];
	mul.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB74_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB74_28;

	ld.volatile.shared.f64 	%fd38, [%r10+64];
	mul.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB74_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB74_30;

	ld.volatile.shared.f64 	%fd39, [%r10+32];
	mul.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB74_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB74_32;

	ld.volatile.shared.f64 	%fd40, [%r10+16];
	mul.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB74_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB74_34;

	ld.volatile.shared.f64 	%fd41, [%r10+8];
	mul.f64 	%fd42, %fd44, %fd41;
	st.volatile.shared.f64 	[%r10], %fd42;

$L__BB74_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB74_36;

	ld.shared.f64 	%fd43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd43;

$L__BB74_36:
	ret;

}
	// .globl	reduce_prod_f
.visible .entry reduce_prod_f(
	.param .u64 reduce_prod_f_param_0,
	.param .u64 reduce_prod_f_param_1,
	.param .u32 reduce_prod_f_param_2
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [reduce_prod_f_param_0];
	ld.param.u64 	%rd2, [reduce_prod_f_param_1];
	ld.param.u32 	%r11, [reduce_prod_f_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f32 	%f44, 0f3F800000;
	@%p1 bra 	$L__BB75_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB75_2:
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f30, [%rd5];
	mul.f32 	%f44, %f44, %f30;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p2, %r8, %r11;
	@%p2 bra 	$L__BB75_4;

	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f31, [%rd7];
	mul.f32 	%f44, %f44, %f31;

$L__BB75_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p3, %r15, %r11;
	@%p3 bra 	$L__BB75_2;

$L__BB75_5:
	shl.b32 	%r13, %r4, 2;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f32 	[%r10], %f44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r1, 1024;
	@%p4 bra 	$L__BB75_9;

	setp.gt.u32 	%p5, %r4, 511;
	@%p5 bra 	$L__BB75_8;

	ld.shared.f32 	%f32, [%r10+2048];
	mul.f32 	%f44, %f44, %f32;
	st.shared.f32 	[%r10], %f44;

$L__BB75_8:
	bar.sync 	0;

$L__BB75_9:
	setp.lt.u32 	%p6, %r1, 512;
	@%p6 bra 	$L__BB75_13;

	setp.gt.u32 	%p7, %r4, 255;
	@%p7 bra 	$L__BB75_12;

	ld.shared.f32 	%f33, [%r10+1024];
	mul.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r10], %f44;

$L__BB75_12:
	bar.sync 	0;

$L__BB75_13:
	setp.lt.u32 	%p8, %r1, 256;
	@%p8 bra 	$L__BB75_17;

	setp.gt.u32 	%p9, %r4, 127;
	@%p9 bra 	$L__BB75_16;

	ld.shared.f32 	%f34, [%r10+512];
	mul.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r10], %f44;

$L__BB75_16:
	bar.sync 	0;

$L__BB75_17:
	setp.lt.u32 	%p10, %r1, 128;
	@%p10 bra 	$L__BB75_21;

	setp.gt.u32 	%p11, %r4, 63;
	@%p11 bra 	$L__BB75_20;

	ld.shared.f32 	%f35, [%r10+256];
	mul.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r10], %f44;

$L__BB75_20:
	bar.sync 	0;

$L__BB75_21:
	setp.gt.u32 	%p12, %r4, 31;
	@%p12 bra 	$L__BB75_34;

	setp.lt.u32 	%p13, %r1, 64;
	@%p13 bra 	$L__BB75_24;

	ld.volatile.shared.f32 	%f36, [%r10+128];
	mul.f32 	%f44, %f44, %f36;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB75_24:
	setp.lt.u32 	%p14, %r1, 32;
	@%p14 bra 	$L__BB75_26;

	ld.volatile.shared.f32 	%f37, [%r10+64];
	mul.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB75_26:
	setp.lt.u32 	%p15, %r1, 16;
	@%p15 bra 	$L__BB75_28;

	ld.volatile.shared.f32 	%f38, [%r10+32];
	mul.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB75_28:
	setp.lt.u32 	%p16, %r1, 8;
	@%p16 bra 	$L__BB75_30;

	ld.volatile.shared.f32 	%f39, [%r10+16];
	mul.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB75_30:
	setp.lt.u32 	%p17, %r1, 4;
	@%p17 bra 	$L__BB75_32;

	ld.volatile.shared.f32 	%f40, [%r10+8];
	mul.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB75_32:
	setp.lt.u32 	%p18, %r1, 2;
	@%p18 bra 	$L__BB75_34;

	ld.volatile.shared.f32 	%f41, [%r10+4];
	mul.f32 	%f42, %f44, %f41;
	st.volatile.shared.f32 	[%r10], %f42;

$L__BB75_34:
	setp.ne.s32 	%p19, %r4, 0;
	@%p19 bra 	$L__BB75_36;

	ld.shared.f32 	%f43, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f43;

$L__BB75_36:
	ret;

}
	// .globl	reduce_row_mean_d
.visible .entry reduce_row_mean_d(
	.param .u64 reduce_row_mean_d_param_0,
	.param .u64 reduce_row_mean_d_param_1,
	.param .u32 reduce_row_mean_d_param_2,
	.param .u32 reduce_row_mean_d_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<14>;
	.reg .f64 	%fd<58>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_mean_d_param_0];
	ld.param.u64 	%rd3, [reduce_row_mean_d_param_1];
	ld.param.u32 	%r9, [reduce_row_mean_d_param_2];
	ld.param.u32 	%r8, [reduce_row_mean_d_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB76_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f64 	%fd44, 0d0000000000000000;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB76_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB76_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd28, [%rd5];
	add.f64 	%fd44, %fd44, %fd28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB76_3;

$L__BB76_4:
	shl.b32 	%r11, %r2, 3;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f64 	[%r7], %fd44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB76_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB76_7;

	ld.shared.f64 	%fd29, [%r7+4096];
	add.f64 	%fd44, %fd44, %fd29;
	st.shared.f64 	[%r7], %fd44;

$L__BB76_7:
	bar.sync 	0;

$L__BB76_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB76_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB76_11;

	ld.shared.f64 	%fd30, [%r7+2048];
	add.f64 	%fd44, %fd44, %fd30;
	st.shared.f64 	[%r7], %fd44;

$L__BB76_11:
	bar.sync 	0;

$L__BB76_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB76_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB76_15;

	ld.shared.f64 	%fd31, [%r7+1024];
	add.f64 	%fd44, %fd44, %fd31;
	st.shared.f64 	[%r7], %fd44;

$L__BB76_15:
	bar.sync 	0;

$L__BB76_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB76_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB76_19;

	ld.shared.f64 	%fd32, [%r7+512];
	add.f64 	%fd44, %fd44, %fd32;
	st.shared.f64 	[%r7], %fd44;

$L__BB76_19:
	bar.sync 	0;

$L__BB76_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB76_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB76_23;

	ld.volatile.shared.f64 	%fd33, [%r7+256];
	add.f64 	%fd44, %fd44, %fd33;
	st.volatile.shared.f64 	[%r7], %fd44;

$L__BB76_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB76_25;

	ld.volatile.shared.f64 	%fd34, [%r7+128];
	add.f64 	%fd44, %fd44, %fd34;
	st.volatile.shared.f64 	[%r7], %fd44;

$L__BB76_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB76_27;

	ld.volatile.shared.f64 	%fd35, [%r7+64];
	add.f64 	%fd44, %fd44, %fd35;
	st.volatile.shared.f64 	[%r7], %fd44;

$L__BB76_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB76_29;

	ld.volatile.shared.f64 	%fd36, [%r7+32];
	add.f64 	%fd44, %fd44, %fd36;
	st.volatile.shared.f64 	[%r7], %fd44;

$L__BB76_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB76_31;

	ld.volatile.shared.f64 	%fd37, [%r7+16];
	add.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r7], %fd44;

$L__BB76_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB76_33;

	ld.volatile.shared.f64 	%fd38, [%r7+8];
	add.f64 	%fd39, %fd44, %fd38;
	st.volatile.shared.f64 	[%r7], %fd39;

$L__BB76_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB76_35;

	ld.shared.f64 	%fd40, [memory];
	cvt.rn.f64.u32 	%fd41, %r8;
	div.rn.f64 	%fd42, %fd40, %fd41;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd42;

$L__BB76_35:
	ret;

}
	// .globl	reduce_row_mean_f
.visible .entry reduce_row_mean_f(
	.param .u64 reduce_row_mean_f_param_0,
	.param .u64 reduce_row_mean_f_param_1,
	.param .u32 reduce_row_mean_f_param_2,
	.param .u32 reduce_row_mean_f_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<58>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_row_mean_f_param_0];
	ld.param.u64 	%rd3, [reduce_row_mean_f_param_1];
	ld.param.u32 	%r9, [reduce_row_mean_f_param_2];
	ld.param.u32 	%r8, [reduce_row_mean_f_param_3];
	mov.u32 	%r1, %ctaid.x;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB77_35;

	mov.u32 	%r2, %tid.x;
	setp.ge.u32 	%p2, %r2, %r8;
	mov.f32 	%f44, 0f00000000;
	mov.u32 	%r3, %ntid.x;
	@%p2 bra 	$L__BB77_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mul.lo.s32 	%r4, %r1, %r8;
	mov.u32 	%r13, %r2;

$L__BB77_3:
	add.s32 	%r10, %r13, %r4;
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f28, [%rd5];
	add.f32 	%f44, %f44, %f28;
	add.s32 	%r13, %r13, %r3;
	setp.lt.u32 	%p3, %r13, %r8;
	@%p3 bra 	$L__BB77_3;

$L__BB77_4:
	shl.b32 	%r11, %r2, 2;
	mov.u32 	%r12, memory;
	add.s32 	%r7, %r12, %r11;
	st.shared.f32 	[%r7], %f44;
	bar.sync 	0;
	setp.lt.u32 	%p4, %r3, 1024;
	@%p4 bra 	$L__BB77_8;

	setp.gt.u32 	%p5, %r2, 511;
	@%p5 bra 	$L__BB77_7;

	ld.shared.f32 	%f29, [%r7+2048];
	add.f32 	%f44, %f44, %f29;
	st.shared.f32 	[%r7], %f44;

$L__BB77_7:
	bar.sync 	0;

$L__BB77_8:
	setp.lt.u32 	%p6, %r3, 512;
	@%p6 bra 	$L__BB77_12;

	setp.gt.u32 	%p7, %r2, 255;
	@%p7 bra 	$L__BB77_11;

	ld.shared.f32 	%f30, [%r7+1024];
	add.f32 	%f44, %f44, %f30;
	st.shared.f32 	[%r7], %f44;

$L__BB77_11:
	bar.sync 	0;

$L__BB77_12:
	setp.lt.u32 	%p8, %r3, 256;
	@%p8 bra 	$L__BB77_16;

	setp.gt.u32 	%p9, %r2, 127;
	@%p9 bra 	$L__BB77_15;

	ld.shared.f32 	%f31, [%r7+512];
	add.f32 	%f44, %f44, %f31;
	st.shared.f32 	[%r7], %f44;

$L__BB77_15:
	bar.sync 	0;

$L__BB77_16:
	setp.lt.u32 	%p10, %r3, 128;
	@%p10 bra 	$L__BB77_20;

	setp.gt.u32 	%p11, %r2, 63;
	@%p11 bra 	$L__BB77_19;

	ld.shared.f32 	%f32, [%r7+256];
	add.f32 	%f44, %f44, %f32;
	st.shared.f32 	[%r7], %f44;

$L__BB77_19:
	bar.sync 	0;

$L__BB77_20:
	setp.gt.u32 	%p12, %r2, 31;
	@%p12 bra 	$L__BB77_33;

	setp.lt.u32 	%p13, %r3, 64;
	@%p13 bra 	$L__BB77_23;

	ld.volatile.shared.f32 	%f33, [%r7+128];
	add.f32 	%f44, %f44, %f33;
	st.volatile.shared.f32 	[%r7], %f44;

$L__BB77_23:
	setp.lt.u32 	%p14, %r3, 32;
	@%p14 bra 	$L__BB77_25;

	ld.volatile.shared.f32 	%f34, [%r7+64];
	add.f32 	%f44, %f44, %f34;
	st.volatile.shared.f32 	[%r7], %f44;

$L__BB77_25:
	setp.lt.u32 	%p15, %r3, 16;
	@%p15 bra 	$L__BB77_27;

	ld.volatile.shared.f32 	%f35, [%r7+32];
	add.f32 	%f44, %f44, %f35;
	st.volatile.shared.f32 	[%r7], %f44;

$L__BB77_27:
	setp.lt.u32 	%p16, %r3, 8;
	@%p16 bra 	$L__BB77_29;

	ld.volatile.shared.f32 	%f36, [%r7+16];
	add.f32 	%f44, %f44, %f36;
	st.volatile.shared.f32 	[%r7], %f44;

$L__BB77_29:
	setp.lt.u32 	%p17, %r3, 4;
	@%p17 bra 	$L__BB77_31;

	ld.volatile.shared.f32 	%f37, [%r7+8];
	add.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r7], %f44;

$L__BB77_31:
	setp.lt.u32 	%p18, %r3, 2;
	@%p18 bra 	$L__BB77_33;

	ld.volatile.shared.f32 	%f38, [%r7+4];
	add.f32 	%f39, %f44, %f38;
	st.volatile.shared.f32 	[%r7], %f39;

$L__BB77_33:
	setp.ne.s32 	%p19, %r2, 0;
	@%p19 bra 	$L__BB77_35;

	ld.shared.f32 	%f40, [memory];
	cvt.rn.f32.u32 	%f41, %r8;
	div.rn.f32 	%f42, %f40, %f41;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f42;

$L__BB77_35:
	ret;

}
	// .globl	reduce_col_mean_d
.visible .entry reduce_col_mean_d(
	.param .u64 reduce_col_mean_d_param_0,
	.param .u64 reduce_col_mean_d_param_1,
	.param .u32 reduce_col_mean_d_param_2,
	.param .u32 reduce_col_mean_d_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_mean_d_param_0];
	ld.param.u64 	%rd3, [reduce_col_mean_d_param_1];
	ld.param.u32 	%r5, [reduce_col_mean_d_param_2];
	ld.param.u32 	%r6, [reduce_col_mean_d_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB78_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f64 	%fd10, 0d0000000000000000;
	@%p2 bra 	$L__BB78_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB78_3:
	mul.wide.u32 	%rd4, %r10, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd6, [%rd5];
	add.f64 	%fd10, %fd10, %fd6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB78_3;

$L__BB78_4:
	cvt.rn.f64.u32 	%fd7, %r5;
	div.rn.f64 	%fd8, %fd10, %fd7;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd8;

$L__BB78_5:
	ret;

}
	// .globl	reduce_col_mean_f
.visible .entry reduce_col_mean_f(
	.param .u64 reduce_col_mean_f_param_0,
	.param .u64 reduce_col_mean_f_param_1,
	.param .u32 reduce_col_mean_f_param_2,
	.param .u32 reduce_col_mean_f_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [reduce_col_mean_f_param_0];
	ld.param.u64 	%rd3, [reduce_col_mean_f_param_1];
	ld.param.u32 	%r5, [reduce_col_mean_f_param_2];
	ld.param.u32 	%r6, [reduce_col_mean_f_param_3];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB79_5;

	mul.lo.s32 	%r2, %r6, %r5;
	setp.ge.u32 	%p2, %r1, %r2;
	mov.f32 	%f10, 0f00000000;
	@%p2 bra 	$L__BB79_4;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %r1;

$L__BB79_3:
	mul.wide.u32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f6, [%rd5];
	add.f32 	%f10, %f10, %f6;
	add.s32 	%r10, %r10, %r6;
	setp.lt.u32 	%p3, %r10, %r2;
	@%p3 bra 	$L__BB79_3;

$L__BB79_4:
	cvt.rn.f32.u32 	%f7, %r5;
	div.rn.f32 	%f8, %f10, %f7;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f8;

$L__BB79_5:
	ret;

}
	// .globl	matrix_exp_d
.visible .entry matrix_exp_d(
	.param .u64 matrix_exp_d_param_0,
	.param .u64 matrix_exp_d_param_1,
	.param .u32 matrix_exp_d_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_exp_d_param_0];
	ld.param.u64 	%rd2, [matrix_exp_d_param_1];
	ld.param.u32 	%r5, [matrix_exp_d_param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.u32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB80_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mov.f64 	%fd6, 0d4338000000000000;
	mov.f64 	%fd7, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd8, %fd1, %fd7, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd8;
	}
	mov.f64 	%fd9, 0dC338000000000000;
	add.rn.f64 	%fd10, %fd8, %fd9;
	mov.f64 	%fd11, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd1;
	mov.f64 	%fd13, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd14, %fd10, %fd13, %fd12;
	mov.f64 	%fd15, 0d3E928AF3FCA213EA;
	mov.f64 	%fd16, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd17, %fd16, %fd14, %fd15;
	mov.f64 	%fd18, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd19, %fd17, %fd14, %fd18;
	mov.f64 	%fd20, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd21, %fd19, %fd14, %fd20;
	mov.f64 	%fd22, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd23, %fd21, %fd14, %fd22;
	mov.f64 	%fd24, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd25, %fd23, %fd14, %fd24;
	mov.f64 	%fd26, 0d3F81111111122322;
	fma.rn.f64 	%fd27, %fd25, %fd14, %fd26;
	mov.f64 	%fd28, 0d3FA55555555502A1;
	fma.rn.f64 	%fd29, %fd27, %fd14, %fd28;
	mov.f64 	%fd30, 0d3FC5555555555511;
	fma.rn.f64 	%fd31, %fd29, %fd14, %fd30;
	mov.f64 	%fd32, 0d3FE000000000000B;
	fma.rn.f64 	%fd33, %fd31, %fd14, %fd32;
	mov.f64 	%fd34, 0d3FF0000000000000;
	fma.rn.f64 	%fd35, %fd33, %fd14, %fd34;
	fma.rn.f64 	%fd36, %fd35, %fd14, %fd34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd36;
	}
	shl.b32 	%r9, %r2, 20;
	add.s32 	%r10, %r4, %r9;
	mov.b64 	%fd40, {%r3, %r10};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd1;
	}
	mov.b32 	%f2, %r11;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p2, %f1, 0f4086232B;
	@%p2 bra 	$L__BB80_4;

	setp.lt.f64 	%p3, %fd1, 0d0000000000000000;
	add.f64 	%fd37, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd40, 0d0000000000000000, %fd37, %p3;
	setp.geu.f32 	%p4, %f1, 0f40874800;
	@%p4 bra 	$L__BB80_4;

	shr.u32 	%r12, %r2, 31;
	add.s32 	%r13, %r2, %r12;
	shr.s32 	%r14, %r13, 1;
	shl.b32 	%r15, %r14, 20;
	add.s32 	%r16, %r4, %r15;
	mov.b64 	%fd38, {%r3, %r16};
	sub.s32 	%r17, %r2, %r14;
	shl.b32 	%r18, %r17, 20;
	add.s32 	%r19, %r18, 1072693248;
	mov.u32 	%r20, 0;
	mov.b64 	%fd39, {%r20, %r19};
	mul.f64 	%fd40, %fd38, %fd39;

$L__BB80_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd40;

$L__BB80_5:
	ret;

}
	// .globl	matrix_exp_f
.visible .entry matrix_exp_f(
	.param .u64 matrix_exp_f_param_0,
	.param .u64 matrix_exp_f_param_1,
	.param .u32 matrix_exp_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_exp_f_param_0];
	ld.param.u64 	%rd2, [matrix_exp_f_param_1];
	ld.param.u32 	%r2, [matrix_exp_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB81_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r6, %f9;
	shl.b32 	%r7, %r6, 23;
	mov.b32 	%f15, %r7;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f17;

$L__BB81_2:
	ret;

}
	// .globl	matrix_sqrt_d
.visible .entry matrix_sqrt_d(
	.param .u64 matrix_sqrt_d_param_0,
	.param .u64 matrix_sqrt_d_param_1,
	.param .u32 matrix_sqrt_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_sqrt_d_param_0];
	ld.param.u64 	%rd2, [matrix_sqrt_d_param_1];
	ld.param.u32 	%r2, [matrix_sqrt_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB82_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	sqrt.rn.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB82_2:
	ret;

}
	// .globl	matrix_sqrt_f
.visible .entry matrix_sqrt_f(
	.param .u64 matrix_sqrt_f_param_0,
	.param .u64 matrix_sqrt_f_param_1,
	.param .u32 matrix_sqrt_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_sqrt_f_param_0];
	ld.param.u64 	%rd2, [matrix_sqrt_f_param_1];
	ld.param.u32 	%r2, [matrix_sqrt_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB83_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	sqrt.rn.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB83_2:
	ret;

}
	// .globl	matrix_round_d
.visible .entry matrix_round_d(
	.param .u64 matrix_round_d_param_0,
	.param .u64 matrix_round_d_param_1,
	.param .u32 matrix_round_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_round_d_param_0];
	ld.param.u64 	%rd2, [matrix_round_d_param_1];
	ld.param.u32 	%r2, [matrix_round_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB84_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd1;
	}
	and.b32  	%r7, %r6, -2147483648;
	mov.f64 	%fd2, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd2;
	}
	or.b32  	%r9, %r8, %r7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd2;
	}
	mov.b64 	%fd3, {%r10, %r9};
	add.rz.f64 	%fd4, %fd1, %fd3;
	cvt.rzi.f64.f64 	%fd5, %fd4;
	cvt.rzi.s64.f64 	%rd6, %fd5;
	cvt.rn.f64.s64 	%fd6, %rd6;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.f64 	[%rd8], %fd6;

$L__BB84_2:
	ret;

}
	// .globl	matrix_round_f
.visible .entry matrix_round_f(
	.param .u64 matrix_round_f_param_0,
	.param .u64 matrix_round_f_param_1,
	.param .u32 matrix_round_f_param_2
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<24>;


	ld.param.u64 	%rd6, [matrix_round_f_param_0];
	ld.param.u64 	%rd7, [matrix_round_f_param_1];
	ld.param.u32 	%r4, [matrix_round_f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	setp.ge.u32 	%p1, %r1, %r4;
	mov.f32 	%f8, 0fDF000000;
	@%p1 bra 	$L__BB85_8;

	cvta.to.global.u64 	%rd8, %rd6;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f1, [%rd10];
	mov.b32 	%r2, %f1;
	abs.f32 	%f5, %f1;
	setp.gtu.f32 	%p2, %f5, 0f7F800000;
	mov.f32 	%f9, %f8;
	@%p2 bra 	$L__BB85_7;

	setp.ge.f32 	%p3, %f1, 0f5F000000;
	mov.f32 	%f9, 0f5F000000;
	@%p3 bra 	$L__BB85_7;

	setp.le.f32 	%p4, %f1, 0fDF000000;
	mov.f32 	%f9, %f8;
	@%p4 bra 	$L__BB85_7;

	bfe.u32 	%r8, %r2, 23, 8;
	mov.u32 	%r9, 189;
	sub.s32 	%r3, %r9, %r8;
	shl.b32 	%r10, %r2, 8;
	shr.u32 	%r11, %r10, 1;
	cvt.u64.u32 	%rd12, %r11;
	shl.b64 	%rd13, %rd12, 32;
	or.b64  	%rd23, %rd13, 4611686018427387904;
	setp.gt.s32 	%p5, %r3, 63;
	mov.u64 	%rd22, 0;
	@%p5 bra 	$L__BB85_6;

	setp.eq.s32 	%p6, %r3, 0;
	mov.u32 	%r12, 64;
	sub.s32 	%r13, %r12, %r3;
	shl.b64 	%rd14, %rd23, %r13;
	shr.u64 	%rd22, %rd23, %r3;
	selp.b64 	%rd23, 0, %rd14, %p6;

$L__BB85_6:
	shr.u64 	%rd15, %rd23, 63;
	add.s64 	%rd16, %rd15, %rd22;
	neg.s64 	%rd17, %rd16;
	setp.lt.s32 	%p7, %r2, 0;
	selp.b64 	%rd18, %rd17, %rd16, %p7;
	cvt.rn.f32.s64 	%f9, %rd18;

$L__BB85_7:
	cvta.to.global.u64 	%rd19, %rd7;
	add.s64 	%rd21, %rd19, %rd9;
	st.global.f32 	[%rd21], %f9;

$L__BB85_8:
	ret;

}
	// .globl	matrix_abs_d
.visible .entry matrix_abs_d(
	.param .u64 matrix_abs_d_param_0,
	.param .u64 matrix_abs_d_param_1,
	.param .u32 matrix_abs_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_abs_d_param_0];
	ld.param.u64 	%rd2, [matrix_abs_d_param_1];
	ld.param.u32 	%r2, [matrix_abs_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB86_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	abs.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB86_2:
	ret;

}
	// .globl	matrix_abs_f
.visible .entry matrix_abs_f(
	.param .u64 matrix_abs_f_param_0,
	.param .u64 matrix_abs_f_param_1,
	.param .u32 matrix_abs_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_abs_f_param_0];
	ld.param.u64 	%rd2, [matrix_abs_f_param_1];
	ld.param.u32 	%r2, [matrix_abs_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB87_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB87_2:
	ret;

}
	// .globl	matrix_log_d
.visible .entry matrix_log_d(
	.param .u64 matrix_log_d_param_0,
	.param .u64 matrix_log_d_param_1,
	.param .u32 matrix_log_d_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<59>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_log_d_param_0];
	ld.param.u64 	%rd2, [matrix_log_d_param_1];
	ld.param.u32 	%r12, [matrix_log_d_param_2];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.u32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB88_9;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd56, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd56;
	}
	setp.gt.s32 	%p2, %r29, 1048575;
	mov.u32 	%r31, -1023;
	@%p2 bra 	$L__BB88_3;

	mul.f64 	%fd56, %fd56, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd56;
	}
	mov.u32 	%r31, -1077;

$L__BB88_3:
	add.s32 	%r18, %r29, -1;
	setp.lt.u32 	%p3, %r18, 2146435071;
	@%p3 bra 	$L__BB88_5;
	bra.uni 	$L__BB88_4;

$L__BB88_5:
	shr.u32 	%r20, %r29, 20;
	add.s32 	%r32, %r31, %r20;
	and.b32  	%r21, %r29, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd57, {%r30, %r22};
	setp.lt.s32 	%p5, %r22, 1073127583;
	@%p5 bra 	$L__BB88_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd57;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd57, {%r23, %r25};
	add.s32 	%r32, %r32, 1;

$L__BB88_7:
	add.f64 	%fd12, %fd57, 0d3FF0000000000000;
	mov.f64 	%fd13, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd14, %fd12;
	neg.f64 	%fd15, %fd12;
	fma.rn.f64 	%fd16, %fd15, %fd14, %fd13;
	fma.rn.f64 	%fd17, %fd16, %fd16, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd14, %fd14;
	add.f64 	%fd19, %fd57, 0dBFF0000000000000;
	mul.f64 	%fd20, %fd19, %fd18;
	fma.rn.f64 	%fd21, %fd19, %fd18, %fd20;
	mul.f64 	%fd22, %fd21, %fd21;
	mov.f64 	%fd23, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd24, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F624924923BE72D;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3FB5555555555554;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	sub.f64 	%fd38, %fd19, %fd21;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd21;
	fma.rn.f64 	%fd41, %fd40, %fd19, %fd39;
	mul.f64 	%fd42, %fd18, %fd41;
	mul.f64 	%fd43, %fd22, %fd37;
	fma.rn.f64 	%fd44, %fd43, %fd21, %fd42;
	xor.b32  	%r26, %r32, -2147483648;
	mov.u32 	%r27, -2147483648;
	mov.u32 	%r28, 1127219200;
	mov.b64 	%fd45, {%r26, %r28};
	mov.b64 	%fd46, {%r27, %r28};
	sub.f64 	%fd47, %fd45, %fd46;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd21;
	neg.f64 	%fd50, %fd47;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.f64 	%fd52, %fd51, %fd21;
	sub.f64 	%fd53, %fd44, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.f64 	%fd58, %fd49, %fd55;
	bra.uni 	$L__BB88_8;

$L__BB88_4:
	mov.f64 	%fd10, 0d7FF0000000000000;
	fma.rn.f64 	%fd11, %fd56, %fd10, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd56;
	}
	mov.b32 	%f1, %r19;
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f64 	%fd58, 0dFFF0000000000000, %fd11, %p4;

$L__BB88_8:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd58;

$L__BB88_9:
	ret;

}
	// .globl	matrix_log_f
.visible .entry matrix_log_f(
	.param .u64 matrix_log_f_param_0,
	.param .u64 matrix_log_f_param_1,
	.param .u32 matrix_log_f_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_log_f_param_0];
	ld.param.u64 	%rd2, [matrix_log_f_param_1];
	ld.param.u32 	%r2, [matrix_log_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB89_4;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f5, [%rd5];
	setp.lt.f32 	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32 	%f1, %f6, %f5, %p2;
	selp.f32 	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	%r6, %f1;
	add.s32 	%r7, %r6, -1059760811;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f8, %r9;
	cvt.rn.f32.s32 	%f9, %r8;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f35, %f11, %f32, %f31;
	setp.lt.u32 	%p3, %r6, 2139095040;
	@%p3 bra 	$L__BB89_3;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f35, %f1, %f33, %f33;

$L__BB89_3:
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f32 	%f34, 0fFF800000, %f35, %p4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f34;

$L__BB89_4:
	ret;

}
	// .globl	matrix_floor_d
.visible .entry matrix_floor_d(
	.param .u64 matrix_floor_d_param_0,
	.param .u64 matrix_floor_d_param_1,
	.param .u32 matrix_floor_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_floor_d_param_0];
	ld.param.u64 	%rd2, [matrix_floor_d_param_1];
	ld.param.u32 	%r2, [matrix_floor_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB90_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvt.rmi.f64.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB90_2:
	ret;

}
	// .globl	matrix_floor_f
.visible .entry matrix_floor_f(
	.param .u64 matrix_floor_f_param_0,
	.param .u64 matrix_floor_f_param_1,
	.param .u32 matrix_floor_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_floor_f_param_0];
	ld.param.u64 	%rd2, [matrix_floor_f_param_1];
	ld.param.u32 	%r2, [matrix_floor_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB91_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rmi.f32.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB91_2:
	ret;

}
	// .globl	matrix_ceil_d
.visible .entry matrix_ceil_d(
	.param .u64 matrix_ceil_d_param_0,
	.param .u64 matrix_ceil_d_param_1,
	.param .u32 matrix_ceil_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_ceil_d_param_0];
	ld.param.u64 	%rd2, [matrix_ceil_d_param_1];
	ld.param.u32 	%r2, [matrix_ceil_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB92_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvt.rpi.f64.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB92_2:
	ret;

}
	// .globl	matrix_ceil_f
.visible .entry matrix_ceil_f(
	.param .u64 matrix_ceil_f_param_0,
	.param .u64 matrix_ceil_f_param_1,
	.param .u32 matrix_ceil_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_ceil_f_param_0];
	ld.param.u64 	%rd2, [matrix_ceil_f_param_1];
	ld.param.u32 	%r2, [matrix_ceil_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB93_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rpi.f32.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB93_2:
	ret;

}
	// .globl	matrix_sin_d
.visible .entry matrix_sin_d(
	.param .u64 matrix_sin_d_param_0,
	.param .u64 matrix_sin_d_param_1,
	.param .u32 matrix_sin_d_param_2
)
{
	.local .align 4 .b8 	__local_depot94[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<42>;
	.reg .b64 	%rd<16>;


	mov.u64 	%SPL, __local_depot94;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [matrix_sin_d_param_0];
	ld.param.u64 	%rd4, [matrix_sin_d_param_1];
	ld.param.u32 	%r8, [matrix_sin_d_param_2];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	setp.ge.u32 	%p1, %r1, %r8;
	@%p1 bra 	$L__BB94_10;

	cvta.to.global.u64 	%rd6, %rd3;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd38, [%rd8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd38;
	}
	and.b32  	%r13, %r19, 2147483647;
	setp.ne.s32 	%p2, %r13, 2146435072;
	setp.ne.s32 	%p3, %r12, 0;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB94_3;

	mov.f64 	%fd14, 0d0000000000000000;
	mul.rn.f64 	%fd38, %fd38, %fd14;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd38;
	}

$L__BB94_3:
	mul.f64 	%fd15, %fd38, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r20, %fd15;
	st.local.u32 	[%rd1], %r20;
	cvt.rn.f64.s32 	%fd16, %r20;
	neg.f64 	%fd17, %fd16;
	mov.f64 	%fd18, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd19, %fd17, %fd18, %fd38;
	mov.f64 	%fd20, 0d3C91A62633145C00;
	fma.rn.f64 	%fd21, %fd17, %fd20, %fd19;
	mov.f64 	%fd22, 0d397B839A252049C0;
	fma.rn.f64 	%fd39, %fd17, %fd22, %fd21;
	and.b32  	%r14, %r19, 2145386496;
	setp.lt.u32 	%p5, %r14, 1105199104;
	@%p5 bra 	$L__BB94_5;

	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd38;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd5;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd39, [retval0+0];
	} // callseq 3
	ld.local.u32 	%r20, [%rd1];

$L__BB94_5:
	and.b32  	%r15, %r20, 1;
	shl.b32 	%r16, %r20, 3;
	and.b32  	%r17, %r16, 8;
	setp.eq.s32 	%p6, %r15, 0;
	selp.f64 	%fd23, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p6;
	mul.wide.s32 	%rd10, %r17, 8;
	mov.u64 	%rd11, __cudart_sin_cos_coeffs;
	add.s64 	%rd12, %rd11, %rd10;
	ld.global.nc.f64 	%fd24, [%rd12+8];
	mul.rn.f64 	%fd7, %fd39, %fd39;
	fma.rn.f64 	%fd25, %fd23, %fd7, %fd24;
	ld.global.nc.f64 	%fd26, [%rd12+16];
	fma.rn.f64 	%fd27, %fd25, %fd7, %fd26;
	ld.global.nc.f64 	%fd28, [%rd12+24];
	fma.rn.f64 	%fd29, %fd27, %fd7, %fd28;
	ld.global.nc.f64 	%fd30, [%rd12+32];
	fma.rn.f64 	%fd31, %fd29, %fd7, %fd30;
	ld.global.nc.f64 	%fd32, [%rd12+40];
	fma.rn.f64 	%fd33, %fd31, %fd7, %fd32;
	ld.global.nc.f64 	%fd34, [%rd12+48];
	fma.rn.f64 	%fd8, %fd33, %fd7, %fd34;
	fma.rn.f64 	%fd41, %fd8, %fd39, %fd39;
	@%p6 bra 	$L__BB94_7;

	mov.f64 	%fd35, 0d3FF0000000000000;
	fma.rn.f64 	%fd41, %fd8, %fd7, %fd35;

$L__BB94_7:
	and.b32  	%r18, %r20, 2;
	setp.eq.s32 	%p7, %r18, 0;
	@%p7 bra 	$L__BB94_9;

	mov.f64 	%fd36, 0d0000000000000000;
	mov.f64 	%fd37, 0dBFF0000000000000;
	fma.rn.f64 	%fd41, %fd41, %fd37, %fd36;

$L__BB94_9:
	cvta.to.global.u64 	%rd13, %rd4;
	shl.b64 	%rd14, %rd2, 3;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f64 	[%rd15], %fd41;

$L__BB94_10:
	ret;

}
	// .globl	matrix_sin_f
.visible .entry matrix_sin_f(
	.param .u64 matrix_sin_f_param_0,
	.param .u64 matrix_sin_f_param_1,
	.param .u32 matrix_sin_f_param_2
)
{
	.local .align 4 .b8 	__local_depot95[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<58>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot95;
	ld.param.u64 	%rd9, [matrix_sin_f_param_0];
	ld.param.u64 	%rd10, [matrix_sin_f_param_1];
	ld.param.u32 	%r20, [matrix_sin_f_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	setp.ge.u32 	%p1, %r1, %r20;
	@%p1 bra 	$L__BB95_14;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r57, %f14;
	cvt.rn.f32.s32 	%f15, %r57;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.leu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB95_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB95_8;
	bra.uni 	$L__BB95_3;

$L__BB95_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r57, 0;
	bra.uni 	$L__BB95_9;

$L__BB95_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r25, %r3, 23, 8;
	add.s32 	%r4, %r25, -128;
	shl.b32 	%r26, %r3, 8;
	or.b32  	%r5, %r26, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r54, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB95_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r27, [%rd28];
	mad.wide.u32 	%rd17, %r27, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r54, %r54, 1;
	setp.ne.s32 	%p4, %r54, 6;
	@%p4 bra 	$L__BB95_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r28, 4;
	sub.s32 	%r9, %r28, %r6;
	mov.u32 	%r29, 6;
	sub.s32 	%r30, %r29, %r6;
	mul.wide.s32 	%rd18, %r30, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r55, [%rd19];
	ld.local.u32 	%r56, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB95_7;

	mov.u32 	%r31, 32;
	sub.s32 	%r32, %r31, %r12;
	shr.u32 	%r33, %r56, %r32;
	shl.b32 	%r34, %r55, %r12;
	add.s32 	%r55, %r33, %r34;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r35, [%rd21];
	shr.u32 	%r36, %r35, %r32;
	shl.b32 	%r37, %r56, %r12;
	add.s32 	%r56, %r36, %r37;

$L__BB95_7:
	and.b32  	%r38, %r3, -2147483648;
	shr.u32 	%r39, %r56, 30;
	shl.b32 	%r40, %r55, 2;
	or.b32  	%r41, %r39, %r40;
	shr.u32 	%r42, %r41, 31;
	shr.u32 	%r43, %r55, 30;
	add.s32 	%r44, %r42, %r43;
	neg.s32 	%r45, %r44;
	setp.eq.s32 	%p6, %r38, 0;
	selp.b32 	%r57, %r44, %r45, %p6;
	setp.ne.s32 	%p7, %r42, 0;
	xor.b32  	%r46, %r38, -2147483648;
	selp.b32 	%r47, %r46, %r38, %p7;
	selp.b32 	%r48, -1, 0, %p7;
	xor.b32  	%r49, %r41, %r48;
	shl.b32 	%r50, %r56, 2;
	xor.b32  	%r51, %r50, %r48;
	cvt.u64.u32 	%rd22, %r49;
	cvt.u64.u32 	%rd23, %r51;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r47, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB95_9:
	and.b32  	%r19, %r57, 1;
	setp.eq.s32 	%p9, %r19, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB95_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB95_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r53, %r57, 2;
	setp.eq.s32 	%p11, %r53, 0;
	@%p11 bra 	$L__BB95_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB95_13:
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f37;

$L__BB95_14:
	ret;

}
	// .globl	matrix_sinh_d
.visible .entry matrix_sinh_d(
	.param .u64 matrix_sinh_d_param_0,
	.param .u64 matrix_sinh_d_param_1,
	.param .u32 matrix_sinh_d_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<24>;
	.reg .f64 	%fd<68>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_sinh_d_param_0];
	ld.param.u64 	%rd2, [matrix_sinh_d_param_1];
	ld.param.u32 	%r3, [matrix_sinh_d_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.u32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB96_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd5, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd5;
	}
	and.b32  	%r7, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd5;
	}
	mov.b64 	%fd1, {%r8, %r7};
	setp.lt.u32 	%p2, %r7, 1072693248;
	@%p2 bra 	$L__BB96_3;
	bra.uni 	$L__BB96_2;

$L__BB96_3:
	mul.f64 	%fd51, %fd1, %fd1;
	mov.f64 	%fd52, 0d3DE611A561D87DEF;
	mov.f64 	%fd53, 0d3D6B4C75AB274C53;
	fma.rn.f64 	%fd54, %fd53, %fd51, %fd52;
	mov.f64 	%fd55, 0d3E5AE64671B18F5C;
	fma.rn.f64 	%fd56, %fd54, %fd51, %fd55;
	mov.f64 	%fd57, 0d3EC71DE3A465B1E4;
	fma.rn.f64 	%fd58, %fd56, %fd51, %fd57;
	mov.f64 	%fd59, 0d3F2A01A01A02899D;
	fma.rn.f64 	%fd60, %fd58, %fd51, %fd59;
	mov.f64 	%fd61, 0d3F811111111110A6;
	fma.rn.f64 	%fd62, %fd60, %fd51, %fd61;
	mov.f64 	%fd63, 0d3FC5555555555556;
	fma.rn.f64 	%fd64, %fd62, %fd51, %fd63;
	mul.f64 	%fd65, %fd51, %fd64;
	fma.rn.f64 	%fd67, %fd65, %fd1, %fd1;
	bra.uni 	$L__BB96_4;

$L__BB96_2:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd1;
	}
	mov.f64 	%fd6, 0d4338000000000000;
	mov.f64 	%fd7, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd8, %fd1, %fd7, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd8;
	}
	add.s32 	%r11, %r10, -1;
	mov.f64 	%fd9, 0dC338000000000000;
	add.rn.f64 	%fd10, %fd8, %fd9;
	mov.f64 	%fd11, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd1;
	mov.f64 	%fd13, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd14, %fd10, %fd13, %fd12;
	shl.b32 	%r12, %r9, 1;
	setp.lt.u32 	%p3, %r12, 2142496327;
	selp.f64 	%fd15, %fd1, %fd14, %p3;
	selp.b32 	%r13, 0, %r11, %p3;
	mov.u32 	%r14, 0;
	mov.f64 	%fd16, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd17, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	mov.f64 	%fd19, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd20, %fd18, %fd15, %fd19;
	mov.f64 	%fd21, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd22, %fd20, %fd15, %fd21;
	mov.f64 	%fd23, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd24, %fd22, %fd15, %fd23;
	mov.f64 	%fd25, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd26, %fd24, %fd15, %fd25;
	mov.f64 	%fd27, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd28, %fd26, %fd15, %fd27;
	mov.f64 	%fd29, 0d3F8111111110F74D;
	fma.rn.f64 	%fd30, %fd28, %fd15, %fd29;
	mov.f64 	%fd31, 0d3FA555555555554D;
	fma.rn.f64 	%fd32, %fd30, %fd15, %fd31;
	mov.f64 	%fd33, 0d3FC5555555555557;
	fma.rn.f64 	%fd34, %fd32, %fd15, %fd33;
	mov.f64 	%fd35, 0d3FE0000000000000;
	fma.rn.f64 	%fd36, %fd34, %fd15, %fd35;
	mul.f64 	%fd37, %fd15, %fd36;
	fma.rn.f64 	%fd38, %fd37, %fd15, %fd15;
	setp.eq.s32 	%p4, %r13, 1024;
	selp.b32 	%r15, -1, 0, %p4;
	add.s32 	%r16, %r13, %r15;
	shl.b32 	%r17, %r16, 20;
	add.s32 	%r18, %r17, 1072693248;
	mov.b64 	%fd39, {%r14, %r18};
	mov.u32 	%r19, 1071644672;
	mov.b64 	%fd40, {%r14, %r19};
	sub.f64 	%fd41, %fd39, %fd40;
	fma.rn.f64 	%fd42, %fd38, %fd39, %fd41;
	add.f64 	%fd43, %fd42, %fd42;
	selp.f64 	%fd44, %fd43, %fd42, %p4;
	setp.eq.s32 	%p5, %r12, 0;
	selp.f64 	%fd45, %fd15, %fd44, %p5;
	mov.f64 	%fd46, 0d3FF0000000000000;
	mov.f64 	%fd47, 0d4000000000000000;
	fma.rn.f64 	%fd48, %fd47, %fd45, %fd46;
	div.rn.f64 	%fd49, %fd45, %fd48;
	add.f64 	%fd50, %fd45, %fd49;
	setp.ge.f64 	%p6, %fd1, 0d408633CE8FB9F87E;
	selp.f64 	%fd67, 0d7FF0000000000000, %fd50, %p6;

$L__BB96_4:
	cvta.to.global.u64 	%rd6, %rd2;
	and.b32  	%r20, %r2, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd67;
	}
	or.b32  	%r22, %r21, %r20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd67;
	}
	mov.b64 	%fd66, {%r23, %r22};
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd66;

$L__BB96_5:
	ret;

}
	// .globl	matrix_sinh_f
.visible .entry matrix_sinh_f(
	.param .u64 matrix_sinh_f_param_0,
	.param .u64 matrix_sinh_f_param_1,
	.param .u32 matrix_sinh_f_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_sinh_f_param_0];
	ld.param.u64 	%rd2, [matrix_sinh_f_param_1];
	ld.param.u32 	%r2, [matrix_sinh_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB97_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.ltu.f32 	%p2, %f2, 0f3F800000;
	@%p2 bra 	$L__BB97_3;
	bra.uni 	$L__BB97_2;

$L__BB97_3:
	mul.f32 	%f27, %f1, %f1;
	mov.f32 	%f28, 0f394FFF49;
	mov.f32 	%f29, 0f363D0ADA;
	fma.rn.f32 	%f30, %f29, %f27, %f28;
	mov.f32 	%f31, 0f3C08889A;
	fma.rn.f32 	%f32, %f30, %f27, %f31;
	mov.f32 	%f33, 0f3E2AAAAB;
	fma.rn.f32 	%f34, %f32, %f27, %f33;
	mul.f32 	%f35, %f27, %f34;
	fma.rn.f32 	%f36, %f35, %f1, %f1;
	bra.uni 	$L__BB97_4;

$L__BB97_2:
	mov.f32 	%f6, 0f3FB8AA3B;
	mul.rn.f32 	%f7, %f2, %f6;
	cvt.rzi.f32.f32 	%f8, %f7;
	abs.f32 	%f9, %f8;
	setp.gt.f32 	%p3, %f9, 0f42FC0000;
	mov.b32 	%r6, %f8;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1123811328;
	mov.b32 	%f10, %r8;
	selp.f32 	%f11, %f10, %f8, %p3;
	mov.f32 	%f12, 0fBF317218;
	fma.rn.f32 	%f13, %f11, %f12, %f2;
	mov.f32 	%f14, 0f3102E308;
	fma.rn.f32 	%f15, %f11, %f14, %f13;
	mul.f32 	%f16, %f15, 0f3FB8AA3B;
	add.f32 	%f17, %f11, 0f4B40007D;
	mov.b32 	%r9, %f17;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f18, %r10;
	ex2.approx.ftz.f32 	%f19, %f16;
	mul.f32 	%f20, %f19, %f18;
	mov.f32 	%f21, 0f3E000000;
	div.approx.f32 	%f22, %f21, %f20;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f40000000;
	fma.rn.f32 	%f25, %f24, %f20, %f23;
	setp.ge.f32 	%p4, %f2, 0f42B40000;
	selp.f32 	%f26, 0f7F800000, %f25, %p4;
	mov.b32 	%r11, %f26;
	mov.b32 	%r12, %f1;
	and.b32  	%r13, %r12, -2147483648;
	or.b32  	%r14, %r13, %r11;
	mov.b32 	%f36, %r14;

$L__BB97_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f36;

$L__BB97_5:
	ret;

}
	// .globl	matrix_cos_d
.visible .entry matrix_cos_d(
	.param .u64 matrix_cos_d_param_0,
	.param .u64 matrix_cos_d_param_1,
	.param .u32 matrix_cos_d_param_2
)
{
	.local .align 4 .b8 	__local_depot98[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<42>;
	.reg .b64 	%rd<16>;


	mov.u64 	%SPL, __local_depot98;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [matrix_cos_d_param_0];
	ld.param.u64 	%rd4, [matrix_cos_d_param_1];
	ld.param.u32 	%r9, [matrix_cos_d_param_2];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r11, %r10, %r12;
	setp.ge.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB98_10;

	cvta.to.global.u64 	%rd6, %rd3;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd38, [%rd8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd38;
	}
	and.b32  	%r14, %r20, 2147483647;
	setp.ne.s32 	%p2, %r14, 2146435072;
	setp.ne.s32 	%p3, %r13, 0;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB98_3;

	mov.f64 	%fd14, 0d0000000000000000;
	mul.rn.f64 	%fd38, %fd38, %fd14;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd38;
	}

$L__BB98_3:
	mul.f64 	%fd15, %fd38, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r21, %fd15;
	st.local.u32 	[%rd1], %r21;
	cvt.rn.f64.s32 	%fd16, %r21;
	neg.f64 	%fd17, %fd16;
	mov.f64 	%fd18, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd19, %fd17, %fd18, %fd38;
	mov.f64 	%fd20, 0d3C91A62633145C00;
	fma.rn.f64 	%fd21, %fd17, %fd20, %fd19;
	mov.f64 	%fd22, 0d397B839A252049C0;
	fma.rn.f64 	%fd39, %fd17, %fd22, %fd21;
	and.b32  	%r15, %r20, 2145386496;
	setp.lt.u32 	%p5, %r15, 1105199104;
	@%p5 bra 	$L__BB98_5;

	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd38;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd5;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd39, [retval0+0];
	} // callseq 4
	ld.local.u32 	%r21, [%rd1];

$L__BB98_5:
	add.s32 	%r8, %r21, 1;
	and.b32  	%r16, %r8, 1;
	shl.b32 	%r17, %r8, 3;
	and.b32  	%r18, %r17, 8;
	setp.eq.s32 	%p6, %r16, 0;
	selp.f64 	%fd23, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p6;
	mul.wide.s32 	%rd10, %r18, 8;
	mov.u64 	%rd11, __cudart_sin_cos_coeffs;
	add.s64 	%rd12, %rd11, %rd10;
	ld.global.nc.f64 	%fd24, [%rd12+8];
	mul.rn.f64 	%fd7, %fd39, %fd39;
	fma.rn.f64 	%fd25, %fd23, %fd7, %fd24;
	ld.global.nc.f64 	%fd26, [%rd12+16];
	fma.rn.f64 	%fd27, %fd25, %fd7, %fd26;
	ld.global.nc.f64 	%fd28, [%rd12+24];
	fma.rn.f64 	%fd29, %fd27, %fd7, %fd28;
	ld.global.nc.f64 	%fd30, [%rd12+32];
	fma.rn.f64 	%fd31, %fd29, %fd7, %fd30;
	ld.global.nc.f64 	%fd32, [%rd12+40];
	fma.rn.f64 	%fd33, %fd31, %fd7, %fd32;
	ld.global.nc.f64 	%fd34, [%rd12+48];
	fma.rn.f64 	%fd8, %fd33, %fd7, %fd34;
	fma.rn.f64 	%fd41, %fd8, %fd39, %fd39;
	@%p6 bra 	$L__BB98_7;

	mov.f64 	%fd35, 0d3FF0000000000000;
	fma.rn.f64 	%fd41, %fd8, %fd7, %fd35;

$L__BB98_7:
	and.b32  	%r19, %r8, 2;
	setp.eq.s32 	%p7, %r19, 0;
	@%p7 bra 	$L__BB98_9;

	mov.f64 	%fd36, 0d0000000000000000;
	mov.f64 	%fd37, 0dBFF0000000000000;
	fma.rn.f64 	%fd41, %fd41, %fd37, %fd36;

$L__BB98_9:
	cvta.to.global.u64 	%rd13, %rd4;
	shl.b64 	%rd14, %rd2, 3;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f64 	[%rd15], %fd41;

$L__BB98_10:
	ret;

}
	// .globl	matrix_cos_f
.visible .entry matrix_cos_f(
	.param .u64 matrix_cos_f_param_0,
	.param .u64 matrix_cos_f_param_1,
	.param .u32 matrix_cos_f_param_2
)
{
	.local .align 4 .b8 	__local_depot99[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<59>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot99;
	ld.param.u64 	%rd9, [matrix_cos_f_param_0];
	ld.param.u64 	%rd10, [matrix_cos_f_param_1];
	ld.param.u32 	%r21, [matrix_cos_f_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %ctaid.x;
	mov.u32 	%r24, %tid.x;
	mad.lo.s32 	%r1, %r23, %r22, %r24;
	setp.ge.u32 	%p1, %r1, %r21;
	@%p1 bra 	$L__BB99_14;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r58, %f14;
	cvt.rn.f32.s32 	%f15, %r58;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.leu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB99_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB99_8;
	bra.uni 	$L__BB99_3;

$L__BB99_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r58, 0;
	bra.uni 	$L__BB99_9;

$L__BB99_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r26, %r3, 23, 8;
	add.s32 	%r4, %r26, -128;
	shl.b32 	%r27, %r3, 8;
	or.b32  	%r5, %r27, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r55, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB99_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r28, [%rd28];
	mad.wide.u32 	%rd17, %r28, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r55, %r55, 1;
	setp.ne.s32 	%p4, %r55, 6;
	@%p4 bra 	$L__BB99_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r29, 4;
	sub.s32 	%r9, %r29, %r6;
	mov.u32 	%r30, 6;
	sub.s32 	%r31, %r30, %r6;
	mul.wide.s32 	%rd18, %r31, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r56, [%rd19];
	ld.local.u32 	%r57, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB99_7;

	mov.u32 	%r32, 32;
	sub.s32 	%r33, %r32, %r12;
	shr.u32 	%r34, %r57, %r33;
	shl.b32 	%r35, %r56, %r12;
	add.s32 	%r56, %r34, %r35;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r36, [%rd21];
	shr.u32 	%r37, %r36, %r33;
	shl.b32 	%r38, %r57, %r12;
	add.s32 	%r57, %r37, %r38;

$L__BB99_7:
	and.b32  	%r39, %r3, -2147483648;
	shr.u32 	%r40, %r57, 30;
	shl.b32 	%r41, %r56, 2;
	or.b32  	%r42, %r40, %r41;
	shr.u32 	%r43, %r42, 31;
	shr.u32 	%r44, %r56, 30;
	add.s32 	%r45, %r43, %r44;
	neg.s32 	%r46, %r45;
	setp.eq.s32 	%p6, %r39, 0;
	selp.b32 	%r58, %r45, %r46, %p6;
	setp.ne.s32 	%p7, %r43, 0;
	xor.b32  	%r47, %r39, -2147483648;
	selp.b32 	%r48, %r47, %r39, %p7;
	selp.b32 	%r49, -1, 0, %p7;
	xor.b32  	%r50, %r42, %r49;
	shl.b32 	%r51, %r57, 2;
	xor.b32  	%r52, %r51, %r49;
	cvt.u64.u32 	%rd22, %r50;
	cvt.u64.u32 	%rd23, %r52;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r48, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB99_9:
	add.s32 	%r19, %r58, 1;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p9, %r20, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB99_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB99_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r54, %r19, 2;
	setp.eq.s32 	%p11, %r54, 0;
	@%p11 bra 	$L__BB99_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB99_13:
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f37;

$L__BB99_14:
	ret;

}
	// .globl	matrix_cosh_d
.visible .entry matrix_cosh_d(
	.param .u64 matrix_cosh_d_param_0,
	.param .u64 matrix_cosh_d_param_1,
	.param .u32 matrix_cosh_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<46>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_cosh_d_param_0];
	ld.param.u64 	%rd2, [matrix_cosh_d_param_1];
	ld.param.u32 	%r2, [matrix_cosh_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB100_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd1;
	}
	and.b32  	%r7, %r6, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r8, %r7};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd2;
	}
	setp.lt.u32 	%p2, %r9, 1082536911;
	@%p2 bra 	$L__BB100_3;
	bra.uni 	$L__BB100_2;

$L__BB100_3:
	mov.f64 	%fd6, 0d4338000000000000;
	mov.f64 	%fd7, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd8, %fd2, %fd7, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd8;
	}
	mov.f64 	%fd9, 0dC338000000000000;
	add.rn.f64 	%fd10, %fd8, %fd9;
	mov.f64 	%fd11, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd2;
	mov.f64 	%fd13, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd14, %fd10, %fd13, %fd12;
	mov.f64 	%fd15, 0d3E928AF3FCA213EA;
	mov.f64 	%fd16, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd17, %fd16, %fd14, %fd15;
	mov.f64 	%fd18, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd19, %fd17, %fd14, %fd18;
	mov.f64 	%fd20, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd21, %fd19, %fd14, %fd20;
	mov.f64 	%fd22, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd23, %fd21, %fd14, %fd22;
	mov.f64 	%fd24, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd25, %fd23, %fd14, %fd24;
	mov.f64 	%fd26, 0d3F81111111122322;
	fma.rn.f64 	%fd27, %fd25, %fd14, %fd26;
	mov.f64 	%fd28, 0d3FA55555555502A1;
	fma.rn.f64 	%fd29, %fd27, %fd14, %fd28;
	mov.f64 	%fd30, 0d3FC5555555555511;
	fma.rn.f64 	%fd31, %fd29, %fd14, %fd30;
	mov.f64 	%fd32, 0d3FE000000000000B;
	fma.rn.f64 	%fd33, %fd31, %fd14, %fd32;
	mov.f64 	%fd34, 0d3FF0000000000000;
	fma.rn.f64 	%fd35, %fd33, %fd14, %fd34;
	fma.rn.f64 	%fd36, %fd35, %fd14, %fd34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r11, %temp}, %fd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd36;
	}
	shl.b32 	%r13, %r10, 20;
	add.s32 	%r14, %r13, %r12;
	add.s32 	%r15, %r14, -2097152;
	mov.b64 	%fd37, {%r11, %r15};
	rcp.approx.ftz.f64 	%fd38, %fd37;
	neg.f64 	%fd39, %fd37;
	fma.rn.f64 	%fd40, %fd39, %fd38, %fd34;
	fma.rn.f64 	%fd41, %fd40, %fd40, %fd40;
	fma.rn.f64 	%fd42, %fd41, %fd38, %fd38;
	mov.f64 	%fd43, 0d3FB0000000000000;
	fma.rn.f64 	%fd45, %fd42, %fd43, %fd37;
	bra.uni 	$L__BB100_4;

$L__BB100_2:
	setp.le.f64 	%p3, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd45, 0d7FF0000000000000, %fd1, %p3;

$L__BB100_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	add.f64 	%fd44, %fd45, %fd45;
	st.global.f64 	[%rd8], %fd44;

$L__BB100_5:
	ret;

}
	// .globl	matrix_cosh_f
.visible .entry matrix_cosh_f(
	.param .u64 matrix_cosh_f_param_0,
	.param .u64 matrix_cosh_f_param_1,
	.param .u32 matrix_cosh_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<23>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_cosh_f_param_0];
	ld.param.u64 	%rd2, [matrix_cosh_f_param_1];
	ld.param.u32 	%r2, [matrix_cosh_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB101_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3FB8AA3B;
	mul.rn.f32 	%f4, %f2, %f3;
	cvt.rzi.f32.f32 	%f5, %f4;
	abs.f32 	%f6, %f5;
	setp.gt.f32 	%p2, %f6, 0f42FC0000;
	mov.b32 	%r6, %f5;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1123811328;
	mov.b32 	%f7, %r8;
	selp.f32 	%f8, %f7, %f5, %p2;
	mov.f32 	%f9, 0fBF317218;
	fma.rn.f32 	%f10, %f8, %f9, %f2;
	mov.f32 	%f11, 0f3102E308;
	fma.rn.f32 	%f12, %f8, %f11, %f10;
	mul.f32 	%f13, %f12, 0f3FB8AA3B;
	add.f32 	%f14, %f8, 0f4B40007D;
	mov.b32 	%r9, %f14;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f13;
	mul.f32 	%f17, %f16, %f15;
	mov.f32 	%f18, 0f3E000000;
	div.approx.f32 	%f19, %f18, %f17;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f17, %f19;
	setp.ge.f32 	%p3, %f2, 0f42B40000;
	selp.f32 	%f22, 0f7F800000, %f21, %p3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f22;

$L__BB101_2:
	ret;

}
	// .globl	matrix_tan_d
.visible .entry matrix_tan_d(
	.param .u64 matrix_tan_d_param_0,
	.param .u64 matrix_tan_d_param_1,
	.param .u32 matrix_tan_d_param_2
)
{
	.local .align 4 .b8 	__local_depot102[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<65>;
	.reg .b64 	%rd<13>;


	mov.u64 	%SPL, __local_depot102;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [matrix_tan_d_param_0];
	ld.param.u64 	%rd4, [matrix_tan_d_param_1];
	ld.param.u32 	%r8, [matrix_tan_d_param_2];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	setp.ge.u32 	%p1, %r1, %r8;
	@%p1 bra 	$L__BB102_8;

	cvta.to.global.u64 	%rd6, %rd3;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd62, [%rd8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd62;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd62;
	}
	and.b32  	%r13, %r16, 2147483647;
	setp.ne.s32 	%p2, %r13, 2146435072;
	setp.ne.s32 	%p3, %r12, 0;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB102_3;

	mov.f64 	%fd11, 0d0000000000000000;
	mul.rn.f64 	%fd62, %fd62, %fd11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd62;
	}

$L__BB102_3:
	mul.f64 	%fd12, %fd62, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r17, %fd12;
	st.local.u32 	[%rd1], %r17;
	cvt.rn.f64.s32 	%fd13, %r17;
	neg.f64 	%fd14, %fd13;
	mov.f64 	%fd15, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd16, %fd14, %fd15, %fd62;
	mov.f64 	%fd17, 0d3C91A62633145C00;
	fma.rn.f64 	%fd18, %fd14, %fd17, %fd16;
	mov.f64 	%fd19, 0d397B839A252049C0;
	fma.rn.f64 	%fd63, %fd14, %fd19, %fd18;
	and.b32  	%r14, %r16, 2145386496;
	setp.lt.u32 	%p5, %r14, 1105199104;
	@%p5 bra 	$L__BB102_5;

	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd62;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd5;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd63, [retval0+0];
	} // callseq 5
	ld.local.u32 	%r17, [%rd1];

$L__BB102_5:
	mul.f64 	%fd20, %fd63, %fd63;
	mov.f64 	%fd21, 0dBEF9757C5B27EBB1;
	mov.f64 	%fd22, 0d3EE48DAC2799BCB9;
	fma.rn.f64 	%fd23, %fd22, %fd20, %fd21;
	mov.f64 	%fd24, 0d3F0980E90FD91E04;
	fma.rn.f64 	%fd25, %fd23, %fd20, %fd24;
	mov.f64 	%fd26, 0dBEFAE2B0417D7E1D;
	fma.rn.f64 	%fd27, %fd25, %fd20, %fd26;
	mov.f64 	%fd28, 0d3F119F5341BFBA57;
	fma.rn.f64 	%fd29, %fd27, %fd20, %fd28;
	mov.f64 	%fd30, 0d3F15E791A00F6919;
	fma.rn.f64 	%fd31, %fd29, %fd20, %fd30;
	mov.f64 	%fd32, 0d3F2FF2E7FADEC73A;
	fma.rn.f64 	%fd33, %fd31, %fd20, %fd32;
	mov.f64 	%fd34, 0d3F434BC1B206DA62;
	fma.rn.f64 	%fd35, %fd33, %fd20, %fd34;
	mov.f64 	%fd36, 0d3F57DB18EF2F83F9;
	fma.rn.f64 	%fd37, %fd35, %fd20, %fd36;
	mov.f64 	%fd38, 0d3F6D6D2E7AE49FBC;
	fma.rn.f64 	%fd39, %fd37, %fd20, %fd38;
	mov.f64 	%fd40, 0d3F8226E3A816A776;
	fma.rn.f64 	%fd41, %fd39, %fd20, %fd40;
	mov.f64 	%fd42, 0d3F9664F485D25660;
	fma.rn.f64 	%fd43, %fd41, %fd20, %fd42;
	mov.f64 	%fd44, 0d3FABA1BA1BABF31D;
	fma.rn.f64 	%fd45, %fd43, %fd20, %fd44;
	mov.f64 	%fd46, 0d3FC11111111105D2;
	fma.rn.f64 	%fd47, %fd45, %fd20, %fd46;
	mov.f64 	%fd48, 0d3FD555555555555E;
	fma.rn.f64 	%fd49, %fd47, %fd20, %fd48;
	mul.f64 	%fd7, %fd20, %fd49;
	fma.rn.f64 	%fd64, %fd7, %fd63, %fd63;
	and.b32  	%r15, %r17, 1;
	setp.eq.b32 	%p6, %r15, 1;
	mov.pred 	%p7, 0;
	xor.pred  	%p8, %p6, %p7;
	not.pred 	%p9, %p8;
	@%p9 bra 	$L__BB102_7;

	sub.f64 	%fd50, %fd64, %fd63;
	neg.f64 	%fd51, %fd50;
	fma.rn.f64 	%fd52, %fd7, %fd63, %fd51;
	neg.f64 	%fd53, %fd64;
	rcp.approx.ftz.f64 	%fd54, %fd64;
	mov.f64 	%fd55, 0d3FF0000000000000;
	fma.rn.f64 	%fd56, %fd53, %fd54, %fd55;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd56;
	fma.rn.f64 	%fd58, %fd57, %fd54, %fd54;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd64, %fd59, %fd55;
	fma.rn.f64 	%fd61, %fd59, %fd52, %fd60;
	fma.rn.f64 	%fd64, %fd61, %fd59, %fd59;

$L__BB102_7:
	cvta.to.global.u64 	%rd10, %rd4;
	shl.b64 	%rd11, %rd2, 3;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.f64 	[%rd12], %fd64;

$L__BB102_8:
	ret;

}
	// .globl	matrix_tan_f
.visible .entry matrix_tan_f(
	.param .u64 matrix_tan_f_param_0,
	.param .u64 matrix_tan_f_param_1,
	.param .u32 matrix_tan_f_param_2
)
{
	.local .align 4 .b8 	__local_depot103[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<57>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot103;
	ld.param.u64 	%rd9, [matrix_tan_f_param_0];
	ld.param.u64 	%rd10, [matrix_tan_f_param_1];
	ld.param.u32 	%r19, [matrix_tan_f_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r21, %r20, %r22;
	setp.ge.u32 	%p1, %r1, %r19;
	@%p1 bra 	$L__BB103_10;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f7, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r56, %f7;
	cvt.rn.f32.s32 	%f8, %r56;
	mov.f32 	%f9, 0fBFC90FDA;
	fma.rn.f32 	%f10, %f8, %f9, %f1;
	mov.f32 	%f11, 0fB3A22168;
	fma.rn.f32 	%f12, %f8, %f11, %f10;
	mov.f32 	%f13, 0fA7C234C5;
	fma.rn.f32 	%f36, %f8, %f13, %f12;
	abs.f32 	%f3, %f1;
	setp.leu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB103_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB103_8;
	bra.uni 	$L__BB103_3;

$L__BB103_8:
	mov.f32 	%f16, 0f00000000;
	mul.rn.f32 	%f36, %f1, %f16;
	mov.u32 	%r56, 0;
	bra.uni 	$L__BB103_9;

$L__BB103_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r24, %r3, 23, 8;
	add.s32 	%r4, %r24, -128;
	shl.b32 	%r25, %r3, 8;
	or.b32  	%r5, %r25, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r53, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB103_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r26, [%rd28];
	mad.wide.u32 	%rd17, %r26, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r53, %r53, 1;
	setp.ne.s32 	%p4, %r53, 6;
	@%p4 bra 	$L__BB103_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r27, 4;
	sub.s32 	%r9, %r27, %r6;
	mov.u32 	%r28, 6;
	sub.s32 	%r29, %r28, %r6;
	mul.wide.s32 	%rd18, %r29, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r54, [%rd19];
	ld.local.u32 	%r55, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB103_7;

	mov.u32 	%r30, 32;
	sub.s32 	%r31, %r30, %r12;
	shr.u32 	%r32, %r55, %r31;
	shl.b32 	%r33, %r54, %r12;
	add.s32 	%r54, %r32, %r33;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r34, [%rd21];
	shr.u32 	%r35, %r34, %r31;
	shl.b32 	%r36, %r55, %r12;
	add.s32 	%r55, %r35, %r36;

$L__BB103_7:
	and.b32  	%r37, %r3, -2147483648;
	shr.u32 	%r38, %r55, 30;
	shl.b32 	%r39, %r54, 2;
	or.b32  	%r40, %r38, %r39;
	shr.u32 	%r41, %r40, 31;
	shr.u32 	%r42, %r54, 30;
	add.s32 	%r43, %r41, %r42;
	neg.s32 	%r44, %r43;
	setp.eq.s32 	%p6, %r37, 0;
	selp.b32 	%r56, %r43, %r44, %p6;
	setp.ne.s32 	%p7, %r41, 0;
	xor.b32  	%r45, %r37, -2147483648;
	selp.b32 	%r46, %r45, %r37, %p7;
	selp.b32 	%r47, -1, 0, %p7;
	xor.b32  	%r48, %r40, %r47;
	shl.b32 	%r49, %r55, 2;
	xor.b32  	%r50, %r49, %r47;
	cvt.u64.u32 	%rd22, %r48;
	cvt.u64.u32 	%rd23, %r50;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f14, %fd2;
	setp.eq.s32 	%p8, %r46, 0;
	neg.f32 	%f15, %f14;
	selp.f32 	%f36, %f14, %f15, %p8;

$L__BB103_9:
	mul.f32 	%f17, %f36, %f36;
	mov.f32 	%f18, 0f3B560000;
	mov.f32 	%f19, 0f3C190000;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0f3CC70000;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D5B0000;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0f3E089438;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3EAAAA88;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mul.rn.f32 	%f29, %f17, %f36;
	fma.rn.f32 	%f30, %f28, %f29, %f36;
	abs.f32 	%f31, %f36;
	setp.eq.f32 	%p9, %f31, 0f3A00B43C;
	selp.f32 	%f32, %f36, %f30, %p9;
	and.b32  	%r52, %r56, 1;
	setp.eq.b32 	%p10, %r52, 1;
	neg.f32 	%f33, %f32;
	rcp.approx.ftz.f32 	%f34, %f33;
	selp.f32 	%f35, %f34, %f32, %p10;
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f35;

$L__BB103_10:
	ret;

}
	// .globl	matrix_tanh_d
.visible .entry matrix_tanh_d(
	.param .u64 matrix_tanh_d_param_0,
	.param .u64 matrix_tanh_d_param_1,
	.param .u32 matrix_tanh_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<72>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_tanh_d_param_0];
	ld.param.u64 	%rd2, [matrix_tanh_d_param_1];
	ld.param.u32 	%r4, [matrix_tanh_d_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	setp.ge.u32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB104_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	and.b32  	%r3, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r8, %r3};
	setp.ltu.f64 	%p2, %fd2, 0d3FE4F92224DD2F1A;
	@%p2 bra 	$L__BB104_3;
	bra.uni 	$L__BB104_2;

$L__BB104_3:
	mul.f64 	%fd47, %fd1, %fd1;
	mov.f64 	%fd48, 0d3F14359F420AFC3D;
	mov.f64 	%fd49, 0dBEF0BC46E2F5E964;
	fma.rn.f64 	%fd50, %fd49, %fd47, %fd48;
	mov.f64 	%fd51, 0dBF2DF9F0728C5D84;
	fma.rn.f64 	%fd52, %fd50, %fd47, %fd51;
	mov.f64 	%fd53, 0d3F4337D1CEC4F033;
	fma.rn.f64 	%fd54, %fd52, %fd47, %fd53;
	mov.f64 	%fd55, 0dBF57D6E9674335B3;
	fma.rn.f64 	%fd56, %fd54, %fd47, %fd55;
	mov.f64 	%fd57, 0d3F6D6D000D7AAD3D;
	fma.rn.f64 	%fd58, %fd56, %fd47, %fd57;
	mov.f64 	%fd59, 0dBF8226E1F3CF1EF5;
	fma.rn.f64 	%fd60, %fd58, %fd47, %fd59;
	mov.f64 	%fd61, 0d3F9664F47EC0C8CF;
	fma.rn.f64 	%fd62, %fd60, %fd47, %fd61;
	mov.f64 	%fd63, 0dBFABA1BA1B80AB40;
	fma.rn.f64 	%fd64, %fd62, %fd47, %fd63;
	mov.f64 	%fd65, 0d3FC111111110FA4A;
	fma.rn.f64 	%fd66, %fd64, %fd47, %fd65;
	mov.f64 	%fd67, 0dBFD5555555555550;
	fma.rn.f64 	%fd68, %fd66, %fd47, %fd67;
	mov.f64 	%fd69, 0d0000000000000000;
	fma.rn.f64 	%fd70, %fd68, %fd47, %fd69;
	fma.rn.f64 	%fd71, %fd70, %fd1, %fd1;
	bra.uni 	$L__BB104_4;

$L__BB104_2:
	add.f64 	%fd6, %fd2, %fd2;
	mov.f64 	%fd7, 0d4000000000000000;
	cvt.rn.f32.f64 	%f1, %fd6;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f3, %f2;
	cvt.f64.f32 	%fd8, %f3;
	neg.f64 	%fd9, %fd8;
	mov.f64 	%fd10, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd11, %fd9, %fd10, %fd6;
	mov.f64 	%fd12, 0d3E928A27F89B6999;
	mov.f64 	%fd13, 0d3E5AE904A4741B81;
	fma.rn.f64 	%fd14, %fd13, %fd11, %fd12;
	mov.f64 	%fd15, 0d3EC71DE715FF7E07;
	fma.rn.f64 	%fd16, %fd14, %fd11, %fd15;
	mov.f64 	%fd17, 0d3EFA019A6B0AC45A;
	fma.rn.f64 	%fd18, %fd16, %fd11, %fd17;
	mov.f64 	%fd19, 0d3F2A01A017EED94F;
	fma.rn.f64 	%fd20, %fd18, %fd11, %fd19;
	mov.f64 	%fd21, 0d3F56C16C17F2A71B;
	fma.rn.f64 	%fd22, %fd20, %fd11, %fd21;
	mov.f64 	%fd23, 0d3F811111111173C4;
	fma.rn.f64 	%fd24, %fd22, %fd11, %fd23;
	mov.f64 	%fd25, 0d3FA555555555211A;
	fma.rn.f64 	%fd26, %fd24, %fd11, %fd25;
	mov.f64 	%fd27, 0d3FC5555555555540;
	fma.rn.f64 	%fd28, %fd26, %fd11, %fd27;
	mov.f64 	%fd29, 0d3FE0000000000005;
	fma.rn.f64 	%fd30, %fd28, %fd11, %fd29;
	mul.f64 	%fd31, %fd11, %fd30;
	fma.rn.f64 	%fd32, %fd31, %fd11, %fd11;
	ex2.approx.ftz.f32 	%f4, %f3;
	cvt.f64.f32 	%fd33, %f4;
	mov.f64 	%fd34, 0d3FF0000000000000;
	sub.f64 	%fd35, %fd34, %fd33;
	neg.f64 	%fd36, %fd32;
	fma.rn.f64 	%fd37, %fd36, %fd33, %fd35;
	sub.f64 	%fd38, %fd7, %fd37;
	rcp.approx.ftz.f64 	%fd39, %fd38;
	neg.f64 	%fd40, %fd38;
	fma.rn.f64 	%fd41, %fd40, %fd39, %fd34;
	fma.rn.f64 	%fd42, %fd41, %fd41, %fd41;
	fma.rn.f64 	%fd43, %fd42, %fd39, %fd39;
	neg.f64 	%fd44, %fd43;
	fma.rn.f64 	%fd45, %fd7, %fd44, %fd34;
	setp.gt.u32 	%p3, %r3, 1077088193;
	selp.f64 	%fd46, 0d3FF0000000000000, %fd45, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd46;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd46;
	}
	and.b32  	%r11, %r2, -2147483648;
	or.b32  	%r12, %r10, %r11;
	mov.b64 	%fd71, {%r9, %r12};

$L__BB104_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd71;

$L__BB104_5:
	ret;

}
	// .globl	matrix_tanh_f
.visible .entry matrix_tanh_f(
	.param .u64 matrix_tanh_f_param_0,
	.param .u64 matrix_tanh_f_param_1,
	.param .u32 matrix_tanh_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_tanh_f_param_0];
	ld.param.u64 	%rd2, [matrix_tanh_f_param_1];
	ld.param.u32 	%r2, [matrix_tanh_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB105_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.ltu.f32 	%p2, %f2, 0f3F19999A;
	@%p2 bra 	$L__BB105_3;
	bra.uni 	$L__BB105_2;

$L__BB105_3:
	mul.f32 	%f14, %f1, %f1;
	mov.f32 	%f15, 0fBD563CAE;
	mov.f32 	%f16, 0f3C80F082;
	fma.rn.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0f3E085941;
	fma.rn.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0fBEAAA9ED;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f00000000;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	fma.rn.f32 	%f24, %f23, %f1, %f1;
	bra.uni 	$L__BB105_4;

$L__BB105_2:
	mul.f32 	%f6, %f2, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f7, %f6;
	add.f32 	%f8, %f7, 0f3F800000;
	mov.f32 	%f9, 0f3F800000;
	rcp.approx.ftz.f32 	%f10, %f8;
	mov.f32 	%f11, 0fC0000000;
	fma.rn.f32 	%f12, %f10, %f11, %f9;
	setp.ge.f32 	%p3, %f2, 0f41102CB4;
	selp.f32 	%f13, 0f3F800000, %f12, %p3;
	mov.b32 	%r6, %f13;
	mov.b32 	%r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f24, %r9;

$L__BB105_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f24;

$L__BB105_5:
	ret;

}
	// .globl	matrix_asin_d
.visible .entry matrix_asin_d(
	.param .u64 matrix_asin_d_param_0,
	.param .u64 matrix_asin_d_param_1,
	.param .u32 matrix_asin_d_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .f64 	%fd<83>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_asin_d_param_0];
	ld.param.u64 	%rd2, [matrix_asin_d_param_1];
	ld.param.u32 	%r3, [matrix_asin_d_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.u32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB106_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	mov.b32 	%f1, %r2;
	abs.f32 	%f2, %f1;
	setp.lt.f32 	%p2, %f2, 0f3FE26666;
	@%p2 bra 	$L__BB106_3;
	bra.uni 	$L__BB106_2;

$L__BB106_3:
	mul.f64 	%fd55, %fd1, %fd1;
	mov.f64 	%fd56, 0dBFB3823B180754AF;
	mov.f64 	%fd57, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd58, %fd57, %fd55, %fd56;
	mov.f64 	%fd59, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd60, %fd58, %fd55, %fd59;
	mov.f64 	%fd61, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd62, %fd60, %fd55, %fd61;
	mov.f64 	%fd63, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd64, %fd62, %fd55, %fd63;
	mov.f64 	%fd65, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd66, %fd64, %fd55, %fd65;
	mov.f64 	%fd67, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd68, %fd66, %fd55, %fd67;
	mov.f64 	%fd69, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd70, %fd68, %fd55, %fd69;
	mov.f64 	%fd71, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd72, %fd70, %fd55, %fd71;
	mov.f64 	%fd73, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd74, %fd72, %fd55, %fd73;
	mov.f64 	%fd75, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd76, %fd74, %fd55, %fd75;
	mov.f64 	%fd77, 0d3FB333333320F91B;
	fma.rn.f64 	%fd78, %fd76, %fd55, %fd77;
	mov.f64 	%fd79, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd80, %fd78, %fd55, %fd79;
	mul.f64 	%fd81, %fd55, %fd80;
	fma.rn.f64 	%fd82, %fd81, %fd1, %fd1;
	bra.uni 	$L__BB106_4;

$L__BB106_2:
	abs.f64 	%fd5, %fd1;
	mov.f64 	%fd6, 0d3FE0000000000000;
	mov.f64 	%fd7, 0dBFE0000000000000;
	fma.rn.f64 	%fd8, %fd7, %fd5, %fd6;
	rsqrt.approx.ftz.f64 	%fd9, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd9;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd9;
	}
	add.s32 	%r9, %r8, -1048576;
	mov.b64 	%fd10, {%r7, %r9};
	mul.f64 	%fd11, %fd8, %fd9;
	neg.f64 	%fd12, %fd11;
	fma.rn.f64 	%fd13, %fd11, %fd12, %fd8;
	fma.rn.f64 	%fd14, %fd13, %fd10, %fd11;
	neg.f64 	%fd15, %fd14;
	mov.f64 	%fd16, 0d3FF0000000000000;
	fma.rn.f64 	%fd17, %fd9, %fd15, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd10, %fd10;
	fma.rn.f64 	%fd19, %fd14, %fd15, %fd8;
	fma.rn.f64 	%fd20, %fd19, %fd18, %fd14;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd8;
	}
	setp.lt.s32 	%p3, %r10, 0;
	selp.f64 	%fd21, 0dFFF8000000000000, %fd20, %p3;
	setp.ne.f64 	%p4, %fd8, 0d0000000000000000;
	selp.f64 	%fd22, %fd21, %fd8, %p4;
	mov.f64 	%fd23, 0dBFB3823B180754AF;
	mov.f64 	%fd24, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd25, %fd24, %fd8, %fd23;
	mov.f64 	%fd26, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd27, %fd25, %fd8, %fd26;
	mov.f64 	%fd28, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd29, %fd27, %fd8, %fd28;
	mov.f64 	%fd30, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd31, %fd29, %fd8, %fd30;
	mov.f64 	%fd32, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd33, %fd31, %fd8, %fd32;
	mov.f64 	%fd34, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd35, %fd33, %fd8, %fd34;
	mov.f64 	%fd36, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd37, %fd35, %fd8, %fd36;
	mov.f64 	%fd38, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd39, %fd37, %fd8, %fd38;
	mov.f64 	%fd40, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd41, %fd39, %fd8, %fd40;
	mov.f64 	%fd42, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd43, %fd41, %fd8, %fd42;
	mov.f64 	%fd44, 0d3FB333333320F91B;
	fma.rn.f64 	%fd45, %fd43, %fd8, %fd44;
	mov.f64 	%fd46, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd47, %fd45, %fd8, %fd46;
	mul.f64 	%fd48, %fd8, %fd47;
	mul.f64 	%fd49, %fd22, 0dC000000000000000;
	mov.f64 	%fd50, 0d3C91A62633145C07;
	fma.rn.f64 	%fd51, %fd49, %fd48, %fd50;
	add.f64 	%fd52, %fd49, 0d3FE921FB54442D18;
	add.f64 	%fd53, %fd52, %fd51;
	add.f64 	%fd54, %fd53, 0d3FE921FB54442D18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r11, %temp}, %fd54;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd54;
	}
	and.b32  	%r13, %r2, -2147483648;
	or.b32  	%r14, %r12, %r13;
	mov.b64 	%fd82, {%r11, %r14};

$L__BB106_4:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd82;

$L__BB106_5:
	ret;

}
	// .globl	matrix_asin_f
.visible .entry matrix_asin_f(
	.param .u64 matrix_asin_f_param_0,
	.param .u64 matrix_asin_f_param_1,
	.param .u32 matrix_asin_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_asin_f_param_0];
	ld.param.u64 	%rd2, [matrix_asin_f_param_1];
	ld.param.u32 	%r2, [matrix_asin_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB107_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32 	%p2, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32 	%f23, %f22, %f19, %p2;
	setp.le.f32 	%p3, %f23, 0f7F800000;
	mov.b32 	%r6, %f23;
	mov.b32 	%r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f24, %r9;
	selp.f32 	%f25, %f24, %f23, %p3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f25;

$L__BB107_2:
	ret;

}
	// .globl	matrix_acos_d
.visible .entry matrix_acos_d(
	.param .u64 matrix_acos_d_param_0,
	.param .u64 matrix_acos_d_param_1,
	.param .u32 matrix_acos_d_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<98>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_acos_d_param_0];
	ld.param.u64 	%rd2, [matrix_acos_d_param_1];
	ld.param.u32 	%r4, [matrix_acos_d_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	setp.ge.u32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB108_13;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd13, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd13;
	}
	abs.f64 	%fd1, %fd13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd1;
	}
	setp.lt.s32 	%p2, %r8, 1071801958;
	@%p2 bra 	$L__BB108_9;
	bra.uni 	$L__BB108_2;

$L__BB108_9:
	mul.f64 	%fd61, %fd1, %fd1;
	mov.f64 	%fd62, 0dBFB3823B180754AF;
	mov.f64 	%fd63, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd64, %fd63, %fd61, %fd62;
	mov.f64 	%fd65, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd66, %fd64, %fd61, %fd65;
	mov.f64 	%fd67, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd68, %fd66, %fd61, %fd67;
	mov.f64 	%fd69, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd70, %fd68, %fd61, %fd69;
	mov.f64 	%fd71, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd72, %fd70, %fd61, %fd71;
	mov.f64 	%fd73, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd74, %fd72, %fd61, %fd73;
	mov.f64 	%fd75, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd76, %fd74, %fd61, %fd75;
	mov.f64 	%fd77, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd78, %fd76, %fd61, %fd77;
	mov.f64 	%fd79, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd80, %fd78, %fd61, %fd79;
	mov.f64 	%fd81, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd82, %fd80, %fd61, %fd81;
	mov.f64 	%fd83, 0d3FB333333320F91B;
	fma.rn.f64 	%fd84, %fd82, %fd61, %fd83;
	mov.f64 	%fd85, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd86, %fd84, %fd61, %fd85;
	mul.f64 	%fd87, %fd61, %fd86;
	fma.rn.f64 	%fd9, %fd87, %fd1, %fd1;
	setp.lt.s32 	%p6, %r2, 0;
	@%p6 bra 	$L__BB108_11;

	mov.f64 	%fd88, 0dBC91A62633145C07;
	add.rn.f64 	%fd89, %fd9, %fd88;
	neg.f64 	%fd90, %fd89;
	mov.f64 	%fd91, 0d3FF921FB54442D18;
	add.rn.f64 	%fd97, %fd91, %fd90;
	bra.uni 	$L__BB108_12;

$L__BB108_2:
	mov.f64 	%fd14, 0d3FF0000000000000;
	sub.f64 	%fd2, %fd14, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd2;
	}
	setp.lt.s32 	%p3, %r3, 1;
	@%p3 bra 	$L__BB108_4;

	add.s32 	%r9, %r3, -1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd2;
	}
	mov.b64 	%fd15, {%r10, %r9};
	rsqrt.approx.ftz.f64 	%fd16, %fd15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd16;
	}
	add.s32 	%r12, %r11, -1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd16;
	}
	mov.b64 	%fd17, {%r13, %r12};
	mul.f64 	%fd18, %fd15, %fd16;
	neg.f64 	%fd19, %fd18;
	fma.rn.f64 	%fd20, %fd18, %fd19, %fd15;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd18;
	neg.f64 	%fd22, %fd21;
	fma.rn.f64 	%fd23, %fd21, %fd22, %fd15;
	fma.rn.f64 	%fd25, %fd16, %fd22, %fd14;
	fma.rn.f64 	%fd26, %fd25, %fd17, %fd17;
	fma.rn.f64 	%fd27, %fd23, %fd26, %fd21;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd27;
	}
	add.s32 	%r15, %r14, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd27;
	}
	mov.b64 	%fd28, {%r16, %r15};
	mov.f64 	%fd29, 0dBEBAC2FE66FAAC4B;
	mov.f64 	%fd30, 0d3EC715B371155F70;
	fma.rn.f64 	%fd31, %fd30, %fd2, %fd29;
	mov.f64 	%fd32, 0d3ED9A9B88EFCD9B8;
	fma.rn.f64 	%fd33, %fd31, %fd2, %fd32;
	mov.f64 	%fd34, 0d3EDD0F40A8A0C4C3;
	fma.rn.f64 	%fd35, %fd33, %fd2, %fd34;
	mov.f64 	%fd36, 0d3EF46D4CFA9E0E1F;
	fma.rn.f64 	%fd37, %fd35, %fd2, %fd36;
	mov.f64 	%fd38, 0d3F079C168D1E2422;
	fma.rn.f64 	%fd39, %fd37, %fd2, %fd38;
	mov.f64 	%fd40, 0d3F1C9A88C3BCA540;
	fma.rn.f64 	%fd41, %fd39, %fd2, %fd40;
	mov.f64 	%fd42, 0d3F31C4E64BD476DF;
	fma.rn.f64 	%fd43, %fd41, %fd2, %fd42;
	mov.f64 	%fd44, 0d3F46E8BA60009C8F;
	fma.rn.f64 	%fd45, %fd43, %fd2, %fd44;
	mov.f64 	%fd46, 0d3F5F1C71C62B05A2;
	fma.rn.f64 	%fd47, %fd45, %fd2, %fd46;
	mov.f64 	%fd48, 0d3F76DB6DB6DC9F2C;
	fma.rn.f64 	%fd49, %fd47, %fd2, %fd48;
	mov.f64 	%fd50, 0d3F9333333333329C;
	fma.rn.f64 	%fd51, %fd49, %fd2, %fd50;
	mov.f64 	%fd52, 0d3FB5555555555555;
	fma.rn.f64 	%fd53, %fd51, %fd2, %fd52;
	mul.f64 	%fd54, %fd2, %fd53;
	fma.rn.f64 	%fd97, %fd54, %fd28, %fd28;
	bra.uni 	$L__BB108_5;

$L__BB108_11:
	mov.f64 	%fd92, 0d3C91A62633145C07;
	add.rn.f64 	%fd93, %fd9, %fd92;
	mov.f64 	%fd94, 0d3FF921FB54442D18;
	add.rn.f64 	%fd97, %fd94, %fd93;
	bra.uni 	$L__BB108_12;

$L__BB108_4:
	mov.f64 	%fd55, 0d0000000000000000;
	mul.rn.f64 	%fd97, %fd1, %fd55;

$L__BB108_5:
	setp.gt.s32 	%p4, %r3, -1;
	@%p4 bra 	$L__BB108_7;

	mov.f64 	%fd56, 0d7FF0000000000000;
	mul.rn.f64 	%fd97, %fd97, %fd56;

$L__BB108_7:
	setp.gt.s32 	%p5, %r2, -1;
	@%p5 bra 	$L__BB108_12;

	mov.f64 	%fd57, 0dBCA1A62633145C07;
	add.rn.f64 	%fd58, %fd97, %fd57;
	neg.f64 	%fd59, %fd58;
	mov.f64 	%fd60, 0d400921FB54442D18;
	add.rn.f64 	%fd97, %fd60, %fd59;

$L__BB108_12:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd97;

$L__BB108_13:
	ret;

}
	// .globl	matrix_acos_f
.visible .entry matrix_acos_f(
	.param .u64 matrix_acos_f_param_0,
	.param .u64 matrix_acos_f_param_1,
	.param .u32 matrix_acos_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [matrix_acos_f_param_0];
	ld.param.u64 	%rd2, [matrix_acos_f_param_1];
	ld.param.u32 	%r2, [matrix_acos_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB109_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32 	%p2, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32 	%f23, %f20, %f22, %p2;
	setp.lt.f32 	%p3, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f25, %f23, %p3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f26;

$L__BB109_2:
	ret;

}
	// .globl	matrix_atan_d
.visible .entry matrix_atan_d(
	.param .u64 matrix_atan_d_param_0,
	.param .u64 matrix_atan_d_param_1,
	.param .u32 matrix_atan_d_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<56>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_atan_d_param_0];
	ld.param.u64 	%rd2, [matrix_atan_d_param_1];
	ld.param.u32 	%r2, [matrix_atan_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB110_4;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	abs.f64 	%fd2, %fd1;
	setp.leu.f64 	%p2, %fd2, 0d3FF0000000000000;
	mov.f64 	%fd55, %fd2;
	@%p2 bra 	$L__BB110_3;

	rcp.approx.ftz.f64 	%fd5, %fd2;
	neg.f64 	%fd6, %fd2;
	mov.f64 	%fd7, 0d3FF0000000000000;
	fma.rn.f64 	%fd8, %fd6, %fd5, %fd7;
	fma.rn.f64 	%fd9, %fd8, %fd8, %fd8;
	fma.rn.f64 	%fd10, %fd9, %fd5, %fd5;
	setp.eq.f64 	%p3, %fd2, 0d7FF0000000000000;
	selp.f64 	%fd55, 0d0000000000000000, %fd10, %p3;

$L__BB110_3:
	cvta.to.global.u64 	%rd6, %rd2;
	mul.f64 	%fd11, %fd55, %fd55;
	mov.f64 	%fd12, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd13, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd14, %fd13, %fd11, %fd12;
	mov.f64 	%fd15, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd16, %fd14, %fd11, %fd15;
	mov.f64 	%fd17, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd18, %fd16, %fd11, %fd17;
	mov.f64 	%fd19, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd20, %fd18, %fd11, %fd19;
	mov.f64 	%fd21, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd22, %fd20, %fd11, %fd21;
	mov.f64 	%fd23, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd24, %fd22, %fd11, %fd23;
	mov.f64 	%fd25, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd26, %fd24, %fd11, %fd25;
	mov.f64 	%fd27, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd28, %fd26, %fd11, %fd27;
	mov.f64 	%fd29, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd30, %fd28, %fd11, %fd29;
	mov.f64 	%fd31, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd32, %fd30, %fd11, %fd31;
	mov.f64 	%fd33, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd34, %fd32, %fd11, %fd33;
	mov.f64 	%fd35, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd36, %fd34, %fd11, %fd35;
	mov.f64 	%fd37, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd38, %fd36, %fd11, %fd37;
	mov.f64 	%fd39, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd40, %fd38, %fd11, %fd39;
	mov.f64 	%fd41, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd42, %fd40, %fd11, %fd41;
	mov.f64 	%fd43, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd44, %fd42, %fd11, %fd43;
	mov.f64 	%fd45, 0d3FC99999999840D2;
	fma.rn.f64 	%fd46, %fd44, %fd11, %fd45;
	mov.f64 	%fd47, 0dBFD555555555544C;
	fma.rn.f64 	%fd48, %fd46, %fd11, %fd47;
	mul.f64 	%fd49, %fd11, %fd48;
	fma.rn.f64 	%fd50, %fd49, %fd55, %fd55;
	mov.f64 	%fd51, 0d3FF921FB54442D18;
	sub.f64 	%fd52, %fd51, %fd50;
	setp.gt.f64 	%p4, %fd2, 0d3FF0000000000000;
	selp.f64 	%fd53, %fd52, %fd50, %p4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6, %temp}, %fd53;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd53;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd1;
	}
	and.b32  	%r9, %r8, -2147483648;
	or.b32  	%r10, %r7, %r9;
	mov.b64 	%fd54, {%r6, %r10};
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd54;

$L__BB110_4:
	ret;

}
	// .globl	matrix_atan_f
.visible .entry matrix_atan_f(
	.param .u64 matrix_atan_f_param_0,
	.param .u64 matrix_atan_f_param_1,
	.param .u32 matrix_atan_f_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_atan_f_param_0];
	ld.param.u64 	%rd2, [matrix_atan_f_param_1];
	ld.param.u32 	%r2, [matrix_atan_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB111_4;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.leu.f32 	%p2, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p2 bra 	$L__BB111_3;

	rcp.rn.f32 	%f25, %f2;

$L__BB111_3:
	cvta.to.global.u64 	%rd6, %rd2;
	mul.rn.f32 	%f5, %f25, %f25;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f5, %f10;
	mul.f32 	%f12, %f25, %f11;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f25;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32 	%p3, %f2, 0f3F800000;
	selp.f32 	%f22, %f21, %f19, %p3;
	mov.b32 	%r6, %f22;
	mov.b32 	%r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f23, %r9;
	setp.le.f32 	%p4, %f2, 0f7F800000;
	selp.f32 	%f24, %f23, %f22, %p4;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f24;

$L__BB111_4:
	ret;

}
	// .globl	matrix_sign_d
.visible .entry matrix_sign_d(
	.param .u64 matrix_sign_d_param_0,
	.param .u64 matrix_sign_d_param_1,
	.param .u32 matrix_sign_d_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [matrix_sign_d_param_0];
	ld.param.u64 	%rd3, [matrix_sign_d_param_1];
	ld.param.u32 	%r2, [matrix_sign_d_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB112_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	setp.eq.f64 	%p2, %fd1, 0d0000000000000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB112_3;
	bra.uni 	$L__BB112_2;

$L__BB112_3:
	mov.u64 	%rd8, 0;
	st.global.u64 	[%rd1], %rd8;
	bra.uni 	$L__BB112_4;

$L__BB112_2:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd1;
	}
	and.b32  	%r7, %r6, -2147483648;
	mov.f64 	%fd2, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd2;
	}
	and.b32  	%r9, %r8, 2147483647;
	or.b32  	%r10, %r9, %r7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r11, %temp}, %fd2;
	}
	mov.b64 	%fd3, {%r11, %r10};
	st.global.f64 	[%rd1], %fd3;

$L__BB112_4:
	ret;

}
	// .globl	matrix_sign_f
.visible .entry matrix_sign_f(
	.param .u64 matrix_sign_f_param_0,
	.param .u64 matrix_sign_f_param_1,
	.param .u32 matrix_sign_f_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [matrix_sign_f_param_0];
	ld.param.u64 	%rd3, [matrix_sign_f_param_1];
	ld.param.u32 	%r2, [matrix_sign_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB113_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.eq.f32 	%p2, %f1, 0f00000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB113_3;
	bra.uni 	$L__BB113_2;

$L__BB113_3:
	mov.u32 	%r12, 0;
	st.global.u32 	[%rd1], %r12;
	bra.uni 	$L__BB113_4;

$L__BB113_2:
	cvt.f64.f32 	%fd1, %f1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd1;
	}
	and.b32  	%r7, %r6, -2147483648;
	mov.f64 	%fd2, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd2;
	}
	and.b32  	%r9, %r8, 2147483647;
	or.b32  	%r10, %r9, %r7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r11, %temp}, %fd2;
	}
	mov.b64 	%fd3, {%r11, %r10};
	cvt.rn.f32.f64 	%f2, %fd3;
	st.global.f32 	[%rd1], %f2;

$L__BB113_4:
	ret;

}
	// .globl	matrix_sigmoid_d
.visible .entry matrix_sigmoid_d(
	.param .u64 matrix_sigmoid_d_param_0,
	.param .u64 matrix_sigmoid_d_param_1,
	.param .u32 matrix_sigmoid_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<74>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_sigmoid_d_param_0];
	ld.param.u64 	%rd2, [matrix_sigmoid_d_param_1];
	ld.param.u32 	%r4, [matrix_sigmoid_d_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	setp.ge.u32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB114_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd6, [%rd5];
	mul.f64 	%fd1, %fd6, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	and.b32  	%r3, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r8, %r3};
	setp.ltu.f64 	%p2, %fd2, 0d3FE4F92224DD2F1A;
	@%p2 bra 	$L__BB114_3;
	bra.uni 	$L__BB114_2;

$L__BB114_3:
	mul.f64 	%fd48, %fd1, %fd1;
	mov.f64 	%fd49, 0d3F14359F420AFC3D;
	mov.f64 	%fd50, 0dBEF0BC46E2F5E964;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	mov.f64 	%fd52, 0dBF2DF9F0728C5D84;
	fma.rn.f64 	%fd53, %fd51, %fd48, %fd52;
	mov.f64 	%fd54, 0d3F4337D1CEC4F033;
	fma.rn.f64 	%fd55, %fd53, %fd48, %fd54;
	mov.f64 	%fd56, 0dBF57D6E9674335B3;
	fma.rn.f64 	%fd57, %fd55, %fd48, %fd56;
	mov.f64 	%fd58, 0d3F6D6D000D7AAD3D;
	fma.rn.f64 	%fd59, %fd57, %fd48, %fd58;
	mov.f64 	%fd60, 0dBF8226E1F3CF1EF5;
	fma.rn.f64 	%fd61, %fd59, %fd48, %fd60;
	mov.f64 	%fd62, 0d3F9664F47EC0C8CF;
	fma.rn.f64 	%fd63, %fd61, %fd48, %fd62;
	mov.f64 	%fd64, 0dBFABA1BA1B80AB40;
	fma.rn.f64 	%fd65, %fd63, %fd48, %fd64;
	mov.f64 	%fd66, 0d3FC111111110FA4A;
	fma.rn.f64 	%fd67, %fd65, %fd48, %fd66;
	mov.f64 	%fd68, 0dBFD5555555555550;
	fma.rn.f64 	%fd69, %fd67, %fd48, %fd68;
	mov.f64 	%fd70, 0d0000000000000000;
	fma.rn.f64 	%fd71, %fd69, %fd48, %fd70;
	fma.rn.f64 	%fd73, %fd71, %fd1, %fd1;
	bra.uni 	$L__BB114_4;

$L__BB114_2:
	add.f64 	%fd7, %fd2, %fd2;
	mov.f64 	%fd8, 0d4000000000000000;
	cvt.rn.f32.f64 	%f1, %fd7;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f3, %f2;
	cvt.f64.f32 	%fd9, %f3;
	neg.f64 	%fd10, %fd9;
	mov.f64 	%fd11, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd7;
	mov.f64 	%fd13, 0d3E928A27F89B6999;
	mov.f64 	%fd14, 0d3E5AE904A4741B81;
	fma.rn.f64 	%fd15, %fd14, %fd12, %fd13;
	mov.f64 	%fd16, 0d3EC71DE715FF7E07;
	fma.rn.f64 	%fd17, %fd15, %fd12, %fd16;
	mov.f64 	%fd18, 0d3EFA019A6B0AC45A;
	fma.rn.f64 	%fd19, %fd17, %fd12, %fd18;
	mov.f64 	%fd20, 0d3F2A01A017EED94F;
	fma.rn.f64 	%fd21, %fd19, %fd12, %fd20;
	mov.f64 	%fd22, 0d3F56C16C17F2A71B;
	fma.rn.f64 	%fd23, %fd21, %fd12, %fd22;
	mov.f64 	%fd24, 0d3F811111111173C4;
	fma.rn.f64 	%fd25, %fd23, %fd12, %fd24;
	mov.f64 	%fd26, 0d3FA555555555211A;
	fma.rn.f64 	%fd27, %fd25, %fd12, %fd26;
	mov.f64 	%fd28, 0d3FC5555555555540;
	fma.rn.f64 	%fd29, %fd27, %fd12, %fd28;
	mov.f64 	%fd30, 0d3FE0000000000005;
	fma.rn.f64 	%fd31, %fd29, %fd12, %fd30;
	mul.f64 	%fd32, %fd12, %fd31;
	fma.rn.f64 	%fd33, %fd32, %fd12, %fd12;
	ex2.approx.ftz.f32 	%f4, %f3;
	cvt.f64.f32 	%fd34, %f4;
	mov.f64 	%fd35, 0d3FF0000000000000;
	sub.f64 	%fd36, %fd35, %fd34;
	neg.f64 	%fd37, %fd33;
	fma.rn.f64 	%fd38, %fd37, %fd34, %fd36;
	sub.f64 	%fd39, %fd8, %fd38;
	rcp.approx.ftz.f64 	%fd40, %fd39;
	neg.f64 	%fd41, %fd39;
	fma.rn.f64 	%fd42, %fd41, %fd40, %fd35;
	fma.rn.f64 	%fd43, %fd42, %fd42, %fd42;
	fma.rn.f64 	%fd44, %fd43, %fd40, %fd40;
	neg.f64 	%fd45, %fd44;
	fma.rn.f64 	%fd46, %fd8, %fd45, %fd35;
	setp.gt.u32 	%p3, %r3, 1077088193;
	selp.f64 	%fd47, 0d3FF0000000000000, %fd46, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd47;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd47;
	}
	and.b32  	%r11, %r2, -2147483648;
	or.b32  	%r12, %r10, %r11;
	mov.b64 	%fd73, {%r9, %r12};

$L__BB114_4:
	cvta.to.global.u64 	%rd6, %rd2;
	fma.rn.f64 	%fd72, %fd73, 0d3FE0000000000000, 0d3FE0000000000000;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f64 	[%rd8], %fd72;

$L__BB114_5:
	ret;

}
	// .globl	matrix_sigmoid_f
.visible .entry matrix_sigmoid_f(
	.param .u64 matrix_sigmoid_f_param_0,
	.param .u64 matrix_sigmoid_f_param_1,
	.param .u32 matrix_sigmoid_f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<74>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [matrix_sigmoid_f_param_0];
	ld.param.u64 	%rd2, [matrix_sigmoid_f_param_1];
	ld.param.u32 	%r4, [matrix_sigmoid_f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	setp.ge.u32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB115_5;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.f64.f32 	%fd6, %f1;
	mul.f64 	%fd1, %fd6, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	and.b32  	%r3, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r8, %r3};
	setp.ltu.f64 	%p2, %fd2, 0d3FE4F92224DD2F1A;
	@%p2 bra 	$L__BB115_3;
	bra.uni 	$L__BB115_2;

$L__BB115_3:
	mul.f64 	%fd48, %fd1, %fd1;
	mov.f64 	%fd49, 0d3F14359F420AFC3D;
	mov.f64 	%fd50, 0dBEF0BC46E2F5E964;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	mov.f64 	%fd52, 0dBF2DF9F0728C5D84;
	fma.rn.f64 	%fd53, %fd51, %fd48, %fd52;
	mov.f64 	%fd54, 0d3F4337D1CEC4F033;
	fma.rn.f64 	%fd55, %fd53, %fd48, %fd54;
	mov.f64 	%fd56, 0dBF57D6E9674335B3;
	fma.rn.f64 	%fd57, %fd55, %fd48, %fd56;
	mov.f64 	%fd58, 0d3F6D6D000D7AAD3D;
	fma.rn.f64 	%fd59, %fd57, %fd48, %fd58;
	mov.f64 	%fd60, 0dBF8226E1F3CF1EF5;
	fma.rn.f64 	%fd61, %fd59, %fd48, %fd60;
	mov.f64 	%fd62, 0d3F9664F47EC0C8CF;
	fma.rn.f64 	%fd63, %fd61, %fd48, %fd62;
	mov.f64 	%fd64, 0dBFABA1BA1B80AB40;
	fma.rn.f64 	%fd65, %fd63, %fd48, %fd64;
	mov.f64 	%fd66, 0d3FC111111110FA4A;
	fma.rn.f64 	%fd67, %fd65, %fd48, %fd66;
	mov.f64 	%fd68, 0dBFD5555555555550;
	fma.rn.f64 	%fd69, %fd67, %fd48, %fd68;
	mov.f64 	%fd70, 0d0000000000000000;
	fma.rn.f64 	%fd71, %fd69, %fd48, %fd70;
	fma.rn.f64 	%fd73, %fd71, %fd1, %fd1;
	bra.uni 	$L__BB115_4;

$L__BB115_2:
	add.f64 	%fd7, %fd2, %fd2;
	mov.f64 	%fd8, 0d4000000000000000;
	cvt.rn.f32.f64 	%f2, %fd7;
	mul.f32 	%f3, %f2, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f4, %f3;
	cvt.f64.f32 	%fd9, %f4;
	neg.f64 	%fd10, %fd9;
	mov.f64 	%fd11, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd7;
	mov.f64 	%fd13, 0d3E928A27F89B6999;
	mov.f64 	%fd14, 0d3E5AE904A4741B81;
	fma.rn.f64 	%fd15, %fd14, %fd12, %fd13;
	mov.f64 	%fd16, 0d3EC71DE715FF7E07;
	fma.rn.f64 	%fd17, %fd15, %fd12, %fd16;
	mov.f64 	%fd18, 0d3EFA019A6B0AC45A;
	fma.rn.f64 	%fd19, %fd17, %fd12, %fd18;
	mov.f64 	%fd20, 0d3F2A01A017EED94F;
	fma.rn.f64 	%fd21, %fd19, %fd12, %fd20;
	mov.f64 	%fd22, 0d3F56C16C17F2A71B;
	fma.rn.f64 	%fd23, %fd21, %fd12, %fd22;
	mov.f64 	%fd24, 0d3F811111111173C4;
	fma.rn.f64 	%fd25, %fd23, %fd12, %fd24;
	mov.f64 	%fd26, 0d3FA555555555211A;
	fma.rn.f64 	%fd27, %fd25, %fd12, %fd26;
	mov.f64 	%fd28, 0d3FC5555555555540;
	fma.rn.f64 	%fd29, %fd27, %fd12, %fd28;
	mov.f64 	%fd30, 0d3FE0000000000005;
	fma.rn.f64 	%fd31, %fd29, %fd12, %fd30;
	mul.f64 	%fd32, %fd12, %fd31;
	fma.rn.f64 	%fd33, %fd32, %fd12, %fd12;
	ex2.approx.ftz.f32 	%f5, %f4;
	cvt.f64.f32 	%fd34, %f5;
	mov.f64 	%fd35, 0d3FF0000000000000;
	sub.f64 	%fd36, %fd35, %fd34;
	neg.f64 	%fd37, %fd33;
	fma.rn.f64 	%fd38, %fd37, %fd34, %fd36;
	sub.f64 	%fd39, %fd8, %fd38;
	rcp.approx.ftz.f64 	%fd40, %fd39;
	neg.f64 	%fd41, %fd39;
	fma.rn.f64 	%fd42, %fd41, %fd40, %fd35;
	fma.rn.f64 	%fd43, %fd42, %fd42, %fd42;
	fma.rn.f64 	%fd44, %fd43, %fd40, %fd40;
	neg.f64 	%fd45, %fd44;
	fma.rn.f64 	%fd46, %fd8, %fd45, %fd35;
	setp.gt.u32 	%p3, %r3, 1077088193;
	selp.f64 	%fd47, 0d3FF0000000000000, %fd46, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd47;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd47;
	}
	and.b32  	%r11, %r2, -2147483648;
	or.b32  	%r12, %r10, %r11;
	mov.b64 	%fd73, {%r9, %r12};

$L__BB115_4:
	cvta.to.global.u64 	%rd6, %rd2;
	fma.rn.f64 	%fd72, %fd73, 0d3FE0000000000000, 0d3FE0000000000000;
	cvt.rn.f32.f64 	%f6, %fd72;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f6;

$L__BB115_5:
	ret;

}
	// .globl	prepare_lstm_input_d
.visible .entry prepare_lstm_input_d(
	.param .u64 prepare_lstm_input_d_param_0,
	.param .u64 prepare_lstm_input_d_param_1,
	.param .u32 prepare_lstm_input_d_param_2,
	.param .u32 prepare_lstm_input_d_param_3,
	.param .u32 prepare_lstm_input_d_param_4,
	.param .u32 prepare_lstm_input_d_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_input_d_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_input_d_param_1];
	ld.param.u32 	%r2, [prepare_lstm_input_d_param_2];
	ld.param.u32 	%r3, [prepare_lstm_input_d_param_3];
	ld.param.u32 	%r4, [prepare_lstm_input_d_param_4];
	ld.param.u32 	%r5, [prepare_lstm_input_d_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB116_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r9, %r1, %r4;
	mul.lo.s32 	%r10, %r9, %r4;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r3;
	mul.lo.s32 	%r13, %r12, %r3;
	sub.s32 	%r14, %r11, %r13;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mad.lo.s32 	%r15, %r12, %r2, %r9;
	mad.lo.s32 	%r16, %r15, %r3, %r14;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB116_2:
	ret;

}
	// .globl	prepare_lstm_input_f
.visible .entry prepare_lstm_input_f(
	.param .u64 prepare_lstm_input_f_param_0,
	.param .u64 prepare_lstm_input_f_param_1,
	.param .u32 prepare_lstm_input_f_param_2,
	.param .u32 prepare_lstm_input_f_param_3,
	.param .u32 prepare_lstm_input_f_param_4,
	.param .u32 prepare_lstm_input_f_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_input_f_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_input_f_param_1];
	ld.param.u32 	%r2, [prepare_lstm_input_f_param_2];
	ld.param.u32 	%r3, [prepare_lstm_input_f_param_3];
	ld.param.u32 	%r4, [prepare_lstm_input_f_param_4];
	ld.param.u32 	%r5, [prepare_lstm_input_f_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB117_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r9, %r1, %r4;
	mul.lo.s32 	%r10, %r9, %r4;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r3;
	mul.lo.s32 	%r13, %r12, %r3;
	sub.s32 	%r14, %r11, %r13;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mad.lo.s32 	%r15, %r12, %r2, %r9;
	mad.lo.s32 	%r16, %r15, %r3, %r14;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB117_2:
	ret;

}
	// .globl	prepare_lstm_weight_d
.visible .entry prepare_lstm_weight_d(
	.param .u64 prepare_lstm_weight_d_param_0,
	.param .u64 prepare_lstm_weight_d_param_1,
	.param .u64 prepare_lstm_weight_d_param_2,
	.param .u32 prepare_lstm_weight_d_param_3,
	.param .u32 prepare_lstm_weight_d_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [prepare_lstm_weight_d_param_0];
	ld.param.u64 	%rd3, [prepare_lstm_weight_d_param_1];
	ld.param.u64 	%rd4, [prepare_lstm_weight_d_param_2];
	ld.param.u32 	%r45, [prepare_lstm_weight_d_param_3];
	ld.param.u32 	%r20, [prepare_lstm_weight_d_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	add.s32 	%r24, %r20, %r45;
	shl.b32 	%r2, %r20, 2;
	mul.lo.s32 	%r3, %r24, %r2;
	setp.lt.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB118_3;
	bra.uni 	$L__BB118_1;

$L__BB118_3:
	mul.lo.s32 	%r4, %r20, %r45;
	mul.lo.s32 	%r47, %r20, %r20;
	shl.b32 	%r6, %r4, 2;
	setp.lt.s32 	%p5, %r1, %r6;
	@%p5 bra 	$L__BB118_5;
	bra.uni 	$L__BB118_4;

$L__BB118_5:
	rem.s32 	%r44, %r1, %r4;
	div.s32 	%r42, %r44, %r20;
	mov.u32 	%r43, %r42;
	mov.u32 	%r46, %r1;
	mov.u32 	%r47, %r4;
	bra.uni 	$L__BB118_6;

$L__BB118_1:
	add.s32 	%r25, %r3, %r2;
	setp.ge.s32 	%p2, %r1, %r25;
	@%p2 bra 	$L__BB118_7;

	cvta.to.global.u64 	%rd5, %rd3;
	sub.s32 	%r26, %r1, %r3;
	div.s32 	%r27, %r26, %r20;
	setp.lt.s32 	%p3, %r27, 2;
	setp.eq.s32 	%p4, %r27, 2;
	selp.b32 	%r28, 3, 2, %p4;
	selp.b32 	%r29, %r27, %r28, %p3;
	mul.lo.s32 	%r30, %r27, %r20;
	sub.s32 	%r31, %r26, %r30;
	mad.lo.s32 	%r32, %r29, %r20, %r31;
	mul.wide.s32 	%rd6, %r32, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd7];
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd1, %rd8;
	st.global.f64 	[%rd9], %fd1;
	bra.uni 	$L__BB118_7;

$L__BB118_4:
	sub.s32 	%r46, %r1, %r6;
	rem.s32 	%r44, %r46, %r47;
	div.s32 	%r43, %r44, %r20;
	add.s32 	%r42, %r43, %r45;
	mov.u32 	%r45, %r20;

$L__BB118_6:
	cvta.to.global.u64 	%rd10, %rd2;
	div.s32 	%r33, %r46, %r47;
	setp.eq.s32 	%p6, %r33, 2;
	selp.b32 	%r34, 3, 2, %p6;
	setp.lt.s32 	%p7, %r33, 2;
	selp.b32 	%r35, %r33, %r34, %p7;
	rem.s32 	%r36, %r44, %r20;
	sub.s32 	%r37, %r1, %r44;
	add.s32 	%r38, %r37, %r43;
	mad.lo.s32 	%r39, %r36, %r45, %r38;
	mad.lo.s32 	%r40, %r42, %r2, %r36;
	mad.lo.s32 	%r41, %r35, %r20, %r40;
	mul.wide.s32 	%rd11, %r41, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f64 	%fd2, [%rd12];
	mul.wide.s32 	%rd13, %r39, 8;
	add.s64 	%rd14, %rd1, %rd13;
	st.global.f64 	[%rd14], %fd2;

$L__BB118_7:
	ret;

}
	// .globl	prepare_lstm_weight_f
.visible .entry prepare_lstm_weight_f(
	.param .u64 prepare_lstm_weight_f_param_0,
	.param .u64 prepare_lstm_weight_f_param_1,
	.param .u64 prepare_lstm_weight_f_param_2,
	.param .u32 prepare_lstm_weight_f_param_3,
	.param .u32 prepare_lstm_weight_f_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [prepare_lstm_weight_f_param_0];
	ld.param.u64 	%rd3, [prepare_lstm_weight_f_param_1];
	ld.param.u64 	%rd4, [prepare_lstm_weight_f_param_2];
	ld.param.u32 	%r45, [prepare_lstm_weight_f_param_3];
	ld.param.u32 	%r20, [prepare_lstm_weight_f_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	add.s32 	%r24, %r20, %r45;
	shl.b32 	%r2, %r20, 2;
	mul.lo.s32 	%r3, %r24, %r2;
	setp.lt.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB119_3;
	bra.uni 	$L__BB119_1;

$L__BB119_3:
	mul.lo.s32 	%r4, %r20, %r45;
	mul.lo.s32 	%r47, %r20, %r20;
	shl.b32 	%r6, %r4, 2;
	setp.lt.s32 	%p5, %r1, %r6;
	@%p5 bra 	$L__BB119_5;
	bra.uni 	$L__BB119_4;

$L__BB119_5:
	rem.s32 	%r44, %r1, %r4;
	div.s32 	%r42, %r44, %r20;
	mov.u32 	%r43, %r42;
	mov.u32 	%r46, %r1;
	mov.u32 	%r47, %r4;
	bra.uni 	$L__BB119_6;

$L__BB119_1:
	add.s32 	%r25, %r3, %r2;
	setp.ge.s32 	%p2, %r1, %r25;
	@%p2 bra 	$L__BB119_7;

	cvta.to.global.u64 	%rd5, %rd3;
	sub.s32 	%r26, %r1, %r3;
	div.s32 	%r27, %r26, %r20;
	setp.lt.s32 	%p3, %r27, 2;
	setp.eq.s32 	%p4, %r27, 2;
	selp.b32 	%r28, 3, 2, %p4;
	selp.b32 	%r29, %r27, %r28, %p3;
	mul.lo.s32 	%r30, %r27, %r20;
	sub.s32 	%r31, %r26, %r30;
	mad.lo.s32 	%r32, %r29, %r20, %r31;
	mul.wide.s32 	%rd6, %r32, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd1, %rd8;
	st.global.f32 	[%rd9], %f1;
	bra.uni 	$L__BB119_7;

$L__BB119_4:
	sub.s32 	%r46, %r1, %r6;
	rem.s32 	%r44, %r46, %r47;
	div.s32 	%r43, %r44, %r20;
	add.s32 	%r42, %r43, %r45;
	mov.u32 	%r45, %r20;

$L__BB119_6:
	cvta.to.global.u64 	%rd10, %rd2;
	div.s32 	%r33, %r46, %r47;
	setp.eq.s32 	%p6, %r33, 2;
	selp.b32 	%r34, 3, 2, %p6;
	setp.lt.s32 	%p7, %r33, 2;
	selp.b32 	%r35, %r33, %r34, %p7;
	rem.s32 	%r36, %r44, %r20;
	sub.s32 	%r37, %r1, %r44;
	add.s32 	%r38, %r37, %r43;
	mad.lo.s32 	%r39, %r36, %r45, %r38;
	mad.lo.s32 	%r40, %r42, %r2, %r36;
	mad.lo.s32 	%r41, %r35, %r20, %r40;
	mul.wide.s32 	%rd11, %r41, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f2, [%rd12];
	mul.wide.s32 	%rd13, %r39, 4;
	add.s64 	%rd14, %rd1, %rd13;
	st.global.f32 	[%rd14], %f2;

$L__BB119_7:
	ret;

}
	// .globl	compute_nnz_d
.visible .entry compute_nnz_d(
	.param .u64 compute_nnz_d_param_0,
	.param .u64 compute_nnz_d_param_1,
	.param .u32 compute_nnz_d_param_2
)
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<62>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [compute_nnz_d_param_0];
	ld.param.u64 	%rd2, [compute_nnz_d_param_1];
	ld.param.u32 	%r11, [compute_nnz_d_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f64 	%fd46, 0d0000000000000000;
	@%p1 bra 	$L__BB120_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB120_2:
	mul.wide.u32 	%rd4, %r15, 8;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f64 	%fd30, [%rd5];
	setp.neu.f64 	%p2, %fd30, 0d0000000000000000;
	selp.f64 	%fd31, 0d3FF0000000000000, 0d0000000000000000, %p2;
	add.f64 	%fd46, %fd46, %fd31;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p3, %r8, %r11;
	@%p3 bra 	$L__BB120_4;

	mul.wide.u32 	%rd6, %r8, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd32, [%rd7];
	setp.neu.f64 	%p4, %fd32, 0d0000000000000000;
	selp.f64 	%fd33, 0d3FF0000000000000, 0d0000000000000000, %p4;
	add.f64 	%fd46, %fd46, %fd33;

$L__BB120_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p5, %r15, %r11;
	@%p5 bra 	$L__BB120_2;

$L__BB120_5:
	shl.b32 	%r13, %r4, 3;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f64 	[%r10], %fd46;
	bar.sync 	0;
	setp.lt.u32 	%p6, %r1, 1024;
	@%p6 bra 	$L__BB120_9;

	setp.gt.u32 	%p7, %r4, 511;
	@%p7 bra 	$L__BB120_8;

	ld.shared.f64 	%fd34, [%r10+4096];
	add.f64 	%fd46, %fd46, %fd34;
	st.shared.f64 	[%r10], %fd46;

$L__BB120_8:
	bar.sync 	0;

$L__BB120_9:
	setp.lt.u32 	%p8, %r1, 512;
	@%p8 bra 	$L__BB120_13;

	setp.gt.u32 	%p9, %r4, 255;
	@%p9 bra 	$L__BB120_12;

	ld.shared.f64 	%fd35, [%r10+2048];
	add.f64 	%fd46, %fd46, %fd35;
	st.shared.f64 	[%r10], %fd46;

$L__BB120_12:
	bar.sync 	0;

$L__BB120_13:
	setp.lt.u32 	%p10, %r1, 256;
	@%p10 bra 	$L__BB120_17;

	setp.gt.u32 	%p11, %r4, 127;
	@%p11 bra 	$L__BB120_16;

	ld.shared.f64 	%fd36, [%r10+1024];
	add.f64 	%fd46, %fd46, %fd36;
	st.shared.f64 	[%r10], %fd46;

$L__BB120_16:
	bar.sync 	0;

$L__BB120_17:
	setp.lt.u32 	%p12, %r1, 128;
	@%p12 bra 	$L__BB120_21;

	setp.gt.u32 	%p13, %r4, 63;
	@%p13 bra 	$L__BB120_20;

	ld.shared.f64 	%fd37, [%r10+512];
	add.f64 	%fd46, %fd46, %fd37;
	st.shared.f64 	[%r10], %fd46;

$L__BB120_20:
	bar.sync 	0;

$L__BB120_21:
	setp.gt.u32 	%p14, %r4, 31;
	@%p14 bra 	$L__BB120_34;

	setp.lt.u32 	%p15, %r1, 64;
	@%p15 bra 	$L__BB120_24;

	ld.volatile.shared.f64 	%fd38, [%r10+256];
	add.f64 	%fd46, %fd46, %fd38;
	st.volatile.shared.f64 	[%r10], %fd46;

$L__BB120_24:
	setp.lt.u32 	%p16, %r1, 32;
	@%p16 bra 	$L__BB120_26;

	ld.volatile.shared.f64 	%fd39, [%r10+128];
	add.f64 	%fd46, %fd46, %fd39;
	st.volatile.shared.f64 	[%r10], %fd46;

$L__BB120_26:
	setp.lt.u32 	%p17, %r1, 16;
	@%p17 bra 	$L__BB120_28;

	ld.volatile.shared.f64 	%fd40, [%r10+64];
	add.f64 	%fd46, %fd46, %fd40;
	st.volatile.shared.f64 	[%r10], %fd46;

$L__BB120_28:
	setp.lt.u32 	%p18, %r1, 8;
	@%p18 bra 	$L__BB120_30;

	ld.volatile.shared.f64 	%fd41, [%r10+32];
	add.f64 	%fd46, %fd46, %fd41;
	st.volatile.shared.f64 	[%r10], %fd46;

$L__BB120_30:
	setp.lt.u32 	%p19, %r1, 4;
	@%p19 bra 	$L__BB120_32;

	ld.volatile.shared.f64 	%fd42, [%r10+16];
	add.f64 	%fd46, %fd46, %fd42;
	st.volatile.shared.f64 	[%r10], %fd46;

$L__BB120_32:
	setp.lt.u32 	%p20, %r1, 2;
	@%p20 bra 	$L__BB120_34;

	ld.volatile.shared.f64 	%fd43, [%r10+8];
	add.f64 	%fd44, %fd46, %fd43;
	st.volatile.shared.f64 	[%r10], %fd44;

$L__BB120_34:
	setp.ne.s32 	%p21, %r4, 0;
	@%p21 bra 	$L__BB120_36;

	ld.shared.f64 	%fd45, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 8;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f64 	[%rd10], %fd45;

$L__BB120_36:
	ret;

}
	// .globl	compute_nnz_f
.visible .entry compute_nnz_f(
	.param .u64 compute_nnz_f_param_0,
	.param .u64 compute_nnz_f_param_1,
	.param .u32 compute_nnz_f_param_2
)
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [compute_nnz_f_param_0];
	ld.param.u64 	%rd2, [compute_nnz_f_param_1];
	ld.param.u32 	%r11, [compute_nnz_f_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r1, 1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r15, %r2, %r3, %r4;
	setp.ge.u32 	%p1, %r15, %r11;
	mov.f32 	%f46, 0f00000000;
	@%p1 bra 	$L__BB121_5;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r6, %r2, %r12;

$L__BB121_2:
	mul.wide.u32 	%rd4, %r15, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f30, [%rd5];
	setp.neu.f32 	%p2, %f30, 0f00000000;
	selp.f32 	%f31, 0f3F800000, 0f00000000, %p2;
	add.f32 	%f46, %f46, %f31;
	add.s32 	%r8, %r15, %r1;
	setp.ge.u32 	%p3, %r8, %r11;
	@%p3 bra 	$L__BB121_4;

	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f32, [%rd7];
	setp.neu.f32 	%p4, %f32, 0f00000000;
	selp.f32 	%f33, 0f3F800000, 0f00000000, %p4;
	add.f32 	%f46, %f46, %f33;

$L__BB121_4:
	add.s32 	%r15, %r15, %r6;
	setp.lt.u32 	%p5, %r15, %r11;
	@%p5 bra 	$L__BB121_2;

$L__BB121_5:
	shl.b32 	%r13, %r4, 2;
	mov.u32 	%r14, memory;
	add.s32 	%r10, %r14, %r13;
	st.shared.f32 	[%r10], %f46;
	bar.sync 	0;
	setp.lt.u32 	%p6, %r1, 1024;
	@%p6 bra 	$L__BB121_9;

	setp.gt.u32 	%p7, %r4, 511;
	@%p7 bra 	$L__BB121_8;

	ld.shared.f32 	%f34, [%r10+2048];
	add.f32 	%f46, %f46, %f34;
	st.shared.f32 	[%r10], %f46;

$L__BB121_8:
	bar.sync 	0;

$L__BB121_9:
	setp.lt.u32 	%p8, %r1, 512;
	@%p8 bra 	$L__BB121_13;

	setp.gt.u32 	%p9, %r4, 255;
	@%p9 bra 	$L__BB121_12;

	ld.shared.f32 	%f35, [%r10+1024];
	add.f32 	%f46, %f46, %f35;
	st.shared.f32 	[%r10], %f46;

$L__BB121_12:
	bar.sync 	0;

$L__BB121_13:
	setp.lt.u32 	%p10, %r1, 256;
	@%p10 bra 	$L__BB121_17;

	setp.gt.u32 	%p11, %r4, 127;
	@%p11 bra 	$L__BB121_16;

	ld.shared.f32 	%f36, [%r10+512];
	add.f32 	%f46, %f46, %f36;
	st.shared.f32 	[%r10], %f46;

$L__BB121_16:
	bar.sync 	0;

$L__BB121_17:
	setp.lt.u32 	%p12, %r1, 128;
	@%p12 bra 	$L__BB121_21;

	setp.gt.u32 	%p13, %r4, 63;
	@%p13 bra 	$L__BB121_20;

	ld.shared.f32 	%f37, [%r10+256];
	add.f32 	%f46, %f46, %f37;
	st.shared.f32 	[%r10], %f46;

$L__BB121_20:
	bar.sync 	0;

$L__BB121_21:
	setp.gt.u32 	%p14, %r4, 31;
	@%p14 bra 	$L__BB121_34;

	setp.lt.u32 	%p15, %r1, 64;
	@%p15 bra 	$L__BB121_24;

	ld.volatile.shared.f32 	%f38, [%r10+128];
	add.f32 	%f46, %f46, %f38;
	st.volatile.shared.f32 	[%r10], %f46;

$L__BB121_24:
	setp.lt.u32 	%p16, %r1, 32;
	@%p16 bra 	$L__BB121_26;

	ld.volatile.shared.f32 	%f39, [%r10+64];
	add.f32 	%f46, %f46, %f39;
	st.volatile.shared.f32 	[%r10], %f46;

$L__BB121_26:
	setp.lt.u32 	%p17, %r1, 16;
	@%p17 bra 	$L__BB121_28;

	ld.volatile.shared.f32 	%f40, [%r10+32];
	add.f32 	%f46, %f46, %f40;
	st.volatile.shared.f32 	[%r10], %f46;

$L__BB121_28:
	setp.lt.u32 	%p18, %r1, 8;
	@%p18 bra 	$L__BB121_30;

	ld.volatile.shared.f32 	%f41, [%r10+16];
	add.f32 	%f46, %f46, %f41;
	st.volatile.shared.f32 	[%r10], %f46;

$L__BB121_30:
	setp.lt.u32 	%p19, %r1, 4;
	@%p19 bra 	$L__BB121_32;

	ld.volatile.shared.f32 	%f42, [%r10+8];
	add.f32 	%f46, %f46, %f42;
	st.volatile.shared.f32 	[%r10], %f46;

$L__BB121_32:
	setp.lt.u32 	%p20, %r1, 2;
	@%p20 bra 	$L__BB121_34;

	ld.volatile.shared.f32 	%f43, [%r10+4];
	add.f32 	%f44, %f46, %f43;
	st.volatile.shared.f32 	[%r10], %f44;

$L__BB121_34:
	setp.ne.s32 	%p21, %r4, 0;
	@%p21 bra 	$L__BB121_36;

	ld.shared.f32 	%f45, [memory];
	cvta.to.global.u64 	%rd8, %rd2;
	mul.wide.u32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f45;

$L__BB121_36:
	ret;

}
	// .globl	prepare_lstm_output_d
.visible .entry prepare_lstm_output_d(
	.param .u64 prepare_lstm_output_d_param_0,
	.param .u64 prepare_lstm_output_d_param_1,
	.param .u32 prepare_lstm_output_d_param_2,
	.param .u32 prepare_lstm_output_d_param_3,
	.param .u32 prepare_lstm_output_d_param_4,
	.param .u32 prepare_lstm_output_d_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_output_d_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_output_d_param_1];
	ld.param.u32 	%r2, [prepare_lstm_output_d_param_2];
	ld.param.u32 	%r3, [prepare_lstm_output_d_param_3];
	ld.param.u32 	%r4, [prepare_lstm_output_d_param_4];
	ld.param.u32 	%r5, [prepare_lstm_output_d_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB122_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.lo.s32 	%r9, %r4, %r3;
	div.s32 	%r10, %r1, %r9;
	mul.lo.s32 	%r11, %r10, %r9;
	sub.s32 	%r12, %r1, %r11;
	div.s32 	%r13, %r12, %r4;
	mul.lo.s32 	%r14, %r13, %r4;
	sub.s32 	%r15, %r12, %r14;
	mad.lo.s32 	%r16, %r13, %r2, %r10;
	mad.lo.s32 	%r17, %r16, %r4, %r15;
	mul.wide.s32 	%rd4, %r17, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB122_2:
	ret;

}
	// .globl	prepare_lstm_output_f
.visible .entry prepare_lstm_output_f(
	.param .u64 prepare_lstm_output_f_param_0,
	.param .u64 prepare_lstm_output_f_param_1,
	.param .u32 prepare_lstm_output_f_param_2,
	.param .u32 prepare_lstm_output_f_param_3,
	.param .u32 prepare_lstm_output_f_param_4,
	.param .u32 prepare_lstm_output_f_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_output_f_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_output_f_param_1];
	ld.param.u32 	%r2, [prepare_lstm_output_f_param_2];
	ld.param.u32 	%r3, [prepare_lstm_output_f_param_3];
	ld.param.u32 	%r4, [prepare_lstm_output_f_param_4];
	ld.param.u32 	%r5, [prepare_lstm_output_f_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB123_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.lo.s32 	%r9, %r4, %r3;
	div.s32 	%r10, %r1, %r9;
	mul.lo.s32 	%r11, %r10, %r9;
	sub.s32 	%r12, %r1, %r11;
	div.s32 	%r13, %r12, %r4;
	mul.lo.s32 	%r14, %r13, %r4;
	sub.s32 	%r15, %r12, %r14;
	mad.lo.s32 	%r16, %r13, %r2, %r10;
	mad.lo.s32 	%r17, %r16, %r4, %r15;
	mul.wide.s32 	%rd4, %r17, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB123_2:
	ret;

}
	// .globl	prepare_lstm_backward_gradients_d
.visible .entry prepare_lstm_backward_gradients_d(
	.param .u64 prepare_lstm_backward_gradients_d_param_0,
	.param .u64 prepare_lstm_backward_gradients_d_param_1,
	.param .u32 prepare_lstm_backward_gradients_d_param_2,
	.param .u32 prepare_lstm_backward_gradients_d_param_3,
	.param .u32 prepare_lstm_backward_gradients_d_param_4,
	.param .u32 prepare_lstm_backward_gradients_d_param_5,
	.param .u32 prepare_lstm_backward_gradients_d_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [prepare_lstm_backward_gradients_d_param_0];
	ld.param.u64 	%rd4, [prepare_lstm_backward_gradients_d_param_1];
	ld.param.u32 	%r2, [prepare_lstm_backward_gradients_d_param_2];
	ld.param.u32 	%r3, [prepare_lstm_backward_gradients_d_param_3];
	ld.param.u32 	%r4, [prepare_lstm_backward_gradients_d_param_4];
	ld.param.u32 	%r5, [prepare_lstm_backward_gradients_d_param_5];
	ld.param.u32 	%r6, [prepare_lstm_backward_gradients_d_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.lt.s32 	%p1, %r1, %r5;
	setp.ne.s32 	%p2, %r6, 0;
	and.pred  	%p3, %p1, %p2;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd2, %rd5, %rd6;
	@%p3 bra 	$L__BB124_3;
	bra.uni 	$L__BB124_1;

$L__BB124_3:
	mul.lo.s32 	%r13, %r4, %r3;
	div.s32 	%r14, %r1, %r13;
	mul.lo.s32 	%r15, %r14, %r13;
	sub.s32 	%r16, %r1, %r15;
	div.s32 	%r17, %r16, %r4;
	mul.lo.s32 	%r18, %r17, %r4;
	sub.s32 	%r19, %r16, %r18;
	ld.global.f64 	%fd2, [%rd2];
	mad.lo.s32 	%r20, %r17, %r2, %r14;
	mad.lo.s32 	%r21, %r20, %r4, %r19;
	mul.wide.s32 	%rd9, %r21, 8;
	add.s64 	%rd10, %rd1, %rd9;
	st.global.f64 	[%rd10], %fd2;
	bra.uni 	$L__BB124_4;

$L__BB124_1:
	setp.ge.s32 	%p4, %r1, %r5;
	@%p4 bra 	$L__BB124_4;

	ld.global.f64 	%fd1, [%rd2];
	add.s32 	%r10, %r3, -1;
	mul.lo.s32 	%r11, %r10, %r2;
	mad.lo.s32 	%r12, %r11, %r4, %r1;
	mul.wide.s32 	%rd7, %r12, 8;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB124_4:
	ret;

}
	// .globl	prepare_lstm_backward_gradients_f
.visible .entry prepare_lstm_backward_gradients_f(
	.param .u64 prepare_lstm_backward_gradients_f_param_0,
	.param .u64 prepare_lstm_backward_gradients_f_param_1,
	.param .u32 prepare_lstm_backward_gradients_f_param_2,
	.param .u32 prepare_lstm_backward_gradients_f_param_3,
	.param .u32 prepare_lstm_backward_gradients_f_param_4,
	.param .u32 prepare_lstm_backward_gradients_f_param_5,
	.param .u32 prepare_lstm_backward_gradients_f_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [prepare_lstm_backward_gradients_f_param_0];
	ld.param.u64 	%rd4, [prepare_lstm_backward_gradients_f_param_1];
	ld.param.u32 	%r2, [prepare_lstm_backward_gradients_f_param_2];
	ld.param.u32 	%r3, [prepare_lstm_backward_gradients_f_param_3];
	ld.param.u32 	%r4, [prepare_lstm_backward_gradients_f_param_4];
	ld.param.u32 	%r5, [prepare_lstm_backward_gradients_f_param_5];
	ld.param.u32 	%r6, [prepare_lstm_backward_gradients_f_param_6];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.lt.s32 	%p1, %r1, %r5;
	setp.ne.s32 	%p2, %r6, 0;
	and.pred  	%p3, %p1, %p2;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd2, %rd5, %rd6;
	@%p3 bra 	$L__BB125_3;
	bra.uni 	$L__BB125_1;

$L__BB125_3:
	mul.lo.s32 	%r13, %r4, %r3;
	div.s32 	%r14, %r1, %r13;
	mul.lo.s32 	%r15, %r14, %r13;
	sub.s32 	%r16, %r1, %r15;
	div.s32 	%r17, %r16, %r4;
	mul.lo.s32 	%r18, %r17, %r4;
	sub.s32 	%r19, %r16, %r18;
	ld.global.f32 	%f2, [%rd2];
	mad.lo.s32 	%r20, %r17, %r2, %r14;
	mad.lo.s32 	%r21, %r20, %r4, %r19;
	mul.wide.s32 	%rd9, %r21, 4;
	add.s64 	%rd10, %rd1, %rd9;
	st.global.f32 	[%rd10], %f2;
	bra.uni 	$L__BB125_4;

$L__BB125_1:
	setp.ge.s32 	%p4, %r1, %r5;
	@%p4 bra 	$L__BB125_4;

	ld.global.f32 	%f1, [%rd2];
	add.s32 	%r10, %r3, -1;
	mul.lo.s32 	%r11, %r10, %r2;
	mad.lo.s32 	%r12, %r11, %r4, %r1;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB125_4:
	ret;

}
	// .globl	prepare_lstm_dweight_d
.visible .entry prepare_lstm_dweight_d(
	.param .u64 prepare_lstm_dweight_d_param_0,
	.param .u64 prepare_lstm_dweight_d_param_1,
	.param .u64 prepare_lstm_dweight_d_param_2,
	.param .u32 prepare_lstm_dweight_d_param_3,
	.param .u32 prepare_lstm_dweight_d_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [prepare_lstm_dweight_d_param_0];
	ld.param.u64 	%rd3, [prepare_lstm_dweight_d_param_1];
	ld.param.u64 	%rd4, [prepare_lstm_dweight_d_param_2];
	ld.param.u32 	%r45, [prepare_lstm_dweight_d_param_3];
	ld.param.u32 	%r20, [prepare_lstm_dweight_d_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	add.s32 	%r24, %r20, %r45;
	shl.b32 	%r2, %r20, 2;
	mul.lo.s32 	%r3, %r24, %r2;
	setp.lt.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB126_3;
	bra.uni 	$L__BB126_1;

$L__BB126_3:
	mul.lo.s32 	%r4, %r20, %r45;
	mul.lo.s32 	%r47, %r20, %r20;
	shl.b32 	%r6, %r4, 2;
	setp.lt.s32 	%p5, %r1, %r6;
	@%p5 bra 	$L__BB126_5;
	bra.uni 	$L__BB126_4;

$L__BB126_5:
	rem.s32 	%r44, %r1, %r4;
	div.s32 	%r42, %r44, %r20;
	mov.u32 	%r43, %r42;
	mov.u32 	%r46, %r1;
	mov.u32 	%r47, %r4;
	bra.uni 	$L__BB126_6;

$L__BB126_1:
	add.s32 	%r25, %r3, %r2;
	setp.ge.s32 	%p2, %r1, %r25;
	@%p2 bra 	$L__BB126_7;

	cvta.to.global.u64 	%rd5, %rd3;
	sub.s32 	%r26, %r1, %r3;
	div.s32 	%r27, %r26, %r20;
	setp.lt.s32 	%p3, %r27, 2;
	setp.eq.s32 	%p4, %r27, 2;
	selp.b32 	%r28, 3, 2, %p4;
	selp.b32 	%r29, %r27, %r28, %p3;
	mul.lo.s32 	%r30, %r27, %r20;
	sub.s32 	%r31, %r26, %r30;
	mad.lo.s32 	%r32, %r29, %r20, %r31;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f64 	%fd1, [%rd7];
	mul.wide.s32 	%rd8, %r32, 8;
	add.s64 	%rd9, %rd5, %rd8;
	st.global.f64 	[%rd9], %fd1;
	bra.uni 	$L__BB126_7;

$L__BB126_4:
	sub.s32 	%r46, %r1, %r6;
	rem.s32 	%r44, %r46, %r47;
	div.s32 	%r43, %r44, %r20;
	add.s32 	%r42, %r43, %r45;
	mov.u32 	%r45, %r20;

$L__BB126_6:
	cvta.to.global.u64 	%rd10, %rd2;
	div.s32 	%r33, %r46, %r47;
	setp.eq.s32 	%p6, %r33, 2;
	selp.b32 	%r34, 3, 2, %p6;
	setp.lt.s32 	%p7, %r33, 2;
	selp.b32 	%r35, %r33, %r34, %p7;
	rem.s32 	%r36, %r44, %r20;
	sub.s32 	%r37, %r1, %r44;
	add.s32 	%r38, %r37, %r43;
	mad.lo.s32 	%r39, %r36, %r45, %r38;
	mad.lo.s32 	%r40, %r42, %r2, %r36;
	mad.lo.s32 	%r41, %r35, %r20, %r40;
	mul.wide.s32 	%rd11, %r39, 8;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f64 	%fd2, [%rd12];
	mul.wide.s32 	%rd13, %r41, 8;
	add.s64 	%rd14, %rd10, %rd13;
	st.global.f64 	[%rd14], %fd2;

$L__BB126_7:
	ret;

}
	// .globl	prepare_lstm_dweight_f
.visible .entry prepare_lstm_dweight_f(
	.param .u64 prepare_lstm_dweight_f_param_0,
	.param .u64 prepare_lstm_dweight_f_param_1,
	.param .u64 prepare_lstm_dweight_f_param_2,
	.param .u32 prepare_lstm_dweight_f_param_3,
	.param .u32 prepare_lstm_dweight_f_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [prepare_lstm_dweight_f_param_0];
	ld.param.u64 	%rd3, [prepare_lstm_dweight_f_param_1];
	ld.param.u64 	%rd4, [prepare_lstm_dweight_f_param_2];
	ld.param.u32 	%r45, [prepare_lstm_dweight_f_param_3];
	ld.param.u32 	%r20, [prepare_lstm_dweight_f_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	add.s32 	%r24, %r20, %r45;
	shl.b32 	%r2, %r20, 2;
	mul.lo.s32 	%r3, %r24, %r2;
	setp.lt.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB127_3;
	bra.uni 	$L__BB127_1;

$L__BB127_3:
	mul.lo.s32 	%r4, %r20, %r45;
	mul.lo.s32 	%r47, %r20, %r20;
	shl.b32 	%r6, %r4, 2;
	setp.lt.s32 	%p5, %r1, %r6;
	@%p5 bra 	$L__BB127_5;
	bra.uni 	$L__BB127_4;

$L__BB127_5:
	rem.s32 	%r44, %r1, %r4;
	div.s32 	%r42, %r44, %r20;
	mov.u32 	%r43, %r42;
	mov.u32 	%r46, %r1;
	mov.u32 	%r47, %r4;
	bra.uni 	$L__BB127_6;

$L__BB127_1:
	add.s32 	%r25, %r3, %r2;
	setp.ge.s32 	%p2, %r1, %r25;
	@%p2 bra 	$L__BB127_7;

	cvta.to.global.u64 	%rd5, %rd3;
	sub.s32 	%r26, %r1, %r3;
	div.s32 	%r27, %r26, %r20;
	setp.lt.s32 	%p3, %r27, 2;
	setp.eq.s32 	%p4, %r27, 2;
	selp.b32 	%r28, 3, 2, %p4;
	selp.b32 	%r29, %r27, %r28, %p3;
	mul.lo.s32 	%r30, %r27, %r20;
	sub.s32 	%r31, %r26, %r30;
	mad.lo.s32 	%r32, %r29, %r20, %r31;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mul.wide.s32 	%rd8, %r32, 4;
	add.s64 	%rd9, %rd5, %rd8;
	st.global.f32 	[%rd9], %f1;
	bra.uni 	$L__BB127_7;

$L__BB127_4:
	sub.s32 	%r46, %r1, %r6;
	rem.s32 	%r44, %r46, %r47;
	div.s32 	%r43, %r44, %r20;
	add.s32 	%r42, %r43, %r45;
	mov.u32 	%r45, %r20;

$L__BB127_6:
	cvta.to.global.u64 	%rd10, %rd2;
	div.s32 	%r33, %r46, %r47;
	setp.eq.s32 	%p6, %r33, 2;
	selp.b32 	%r34, 3, 2, %p6;
	setp.lt.s32 	%p7, %r33, 2;
	selp.b32 	%r35, %r33, %r34, %p7;
	rem.s32 	%r36, %r44, %r20;
	sub.s32 	%r37, %r1, %r44;
	add.s32 	%r38, %r37, %r43;
	mad.lo.s32 	%r39, %r36, %r45, %r38;
	mad.lo.s32 	%r40, %r42, %r2, %r36;
	mad.lo.s32 	%r41, %r35, %r20, %r40;
	mul.wide.s32 	%rd11, %r39, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f32 	%f2, [%rd12];
	mul.wide.s32 	%rd13, %r41, 4;
	add.s64 	%rd14, %rd10, %rd13;
	st.global.f32 	[%rd14], %f2;

$L__BB127_7:
	ret;

}
	// .globl	prepare_lstm_dinput_d
.visible .entry prepare_lstm_dinput_d(
	.param .u64 prepare_lstm_dinput_d_param_0,
	.param .u64 prepare_lstm_dinput_d_param_1,
	.param .u32 prepare_lstm_dinput_d_param_2,
	.param .u32 prepare_lstm_dinput_d_param_3,
	.param .u32 prepare_lstm_dinput_d_param_4,
	.param .u32 prepare_lstm_dinput_d_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_dinput_d_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_dinput_d_param_1];
	ld.param.u32 	%r2, [prepare_lstm_dinput_d_param_2];
	ld.param.u32 	%r3, [prepare_lstm_dinput_d_param_3];
	ld.param.u32 	%r4, [prepare_lstm_dinput_d_param_4];
	ld.param.u32 	%r5, [prepare_lstm_dinput_d_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB128_2;

	cvta.to.global.u64 	%rd3, %rd2;
	div.s32 	%r9, %r1, %r4;
	mul.lo.s32 	%r10, %r9, %r4;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r3;
	mul.lo.s32 	%r13, %r12, %r3;
	sub.s32 	%r14, %r11, %r13;
	mad.lo.s32 	%r15, %r12, %r2, %r9;
	mad.lo.s32 	%r16, %r15, %r3, %r14;
	mul.wide.s32 	%rd4, %r16, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB128_2:
	ret;

}
	// .globl	prepare_lstm_dinput_f
.visible .entry prepare_lstm_dinput_f(
	.param .u64 prepare_lstm_dinput_f_param_0,
	.param .u64 prepare_lstm_dinput_f_param_1,
	.param .u32 prepare_lstm_dinput_f_param_2,
	.param .u32 prepare_lstm_dinput_f_param_3,
	.param .u32 prepare_lstm_dinput_f_param_4,
	.param .u32 prepare_lstm_dinput_f_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [prepare_lstm_dinput_f_param_0];
	ld.param.u64 	%rd2, [prepare_lstm_dinput_f_param_1];
	ld.param.u32 	%r2, [prepare_lstm_dinput_f_param_2];
	ld.param.u32 	%r3, [prepare_lstm_dinput_f_param_3];
	ld.param.u32 	%r4, [prepare_lstm_dinput_f_param_4];
	ld.param.u32 	%r5, [prepare_lstm_dinput_f_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB129_2;

	cvta.to.global.u64 	%rd3, %rd2;
	div.s32 	%r9, %r1, %r4;
	mul.lo.s32 	%r10, %r9, %r4;
	sub.s32 	%r11, %r1, %r10;
	div.s32 	%r12, %r11, %r3;
	mul.lo.s32 	%r13, %r12, %r3;
	sub.s32 	%r14, %r11, %r13;
	mad.lo.s32 	%r15, %r12, %r2, %r9;
	mad.lo.s32 	%r16, %r15, %r3, %r14;
	mul.wide.s32 	%rd4, %r16, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB129_2:
	ret;

}
	// .globl	colwise_reshape_d
.visible .entry colwise_reshape_d(
	.param .u64 colwise_reshape_d_param_0,
	.param .u64 colwise_reshape_d_param_1,
	.param .u32 colwise_reshape_d_param_2,
	.param .u32 colwise_reshape_d_param_3,
	.param .u32 colwise_reshape_d_param_4,
	.param .u32 colwise_reshape_d_param_5,
	.param .u32 colwise_reshape_d_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [colwise_reshape_d_param_0];
	ld.param.u64 	%rd2, [colwise_reshape_d_param_1];
	ld.param.u32 	%r6, [colwise_reshape_d_param_2];
	ld.param.u32 	%r2, [colwise_reshape_d_param_3];
	ld.param.u32 	%r3, [colwise_reshape_d_param_4];
	ld.param.u32 	%r4, [colwise_reshape_d_param_5];
	ld.param.u32 	%r5, [colwise_reshape_d_param_6];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB130_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.u32 	%r10, %r1, %r5;
	mul.lo.s32 	%r11, %r10, %r5;
	sub.s32 	%r12, %r1, %r11;
	mad.lo.s32 	%r13, %r12, %r4, %r10;
	div.u32 	%r14, %r13, %r2;
	mul.lo.s32 	%r15, %r14, %r2;
	sub.s32 	%r16, %r13, %r15;
	mad.lo.s32 	%r17, %r16, %r3, %r14;
	mul.wide.u32 	%rd4, %r17, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

$L__BB130_2:
	ret;

}
	// .globl	colwise_reshape_f
.visible .entry colwise_reshape_f(
	.param .u64 colwise_reshape_f_param_0,
	.param .u64 colwise_reshape_f_param_1,
	.param .u32 colwise_reshape_f_param_2,
	.param .u32 colwise_reshape_f_param_3,
	.param .u32 colwise_reshape_f_param_4,
	.param .u32 colwise_reshape_f_param_5,
	.param .u32 colwise_reshape_f_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [colwise_reshape_f_param_0];
	ld.param.u64 	%rd2, [colwise_reshape_f_param_1];
	ld.param.u32 	%r6, [colwise_reshape_f_param_2];
	ld.param.u32 	%r2, [colwise_reshape_f_param_3];
	ld.param.u32 	%r3, [colwise_reshape_f_param_4];
	ld.param.u32 	%r4, [colwise_reshape_f_param_5];
	ld.param.u32 	%r5, [colwise_reshape_f_param_6];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.u32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB131_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.u32 	%r10, %r1, %r5;
	mul.lo.s32 	%r11, %r10, %r5;
	sub.s32 	%r12, %r1, %r11;
	mad.lo.s32 	%r13, %r12, %r4, %r10;
	div.u32 	%r14, %r13, %r2;
	mul.lo.s32 	%r15, %r14, %r2;
	sub.s32 	%r16, %r13, %r15;
	mad.lo.s32 	%r17, %r16, %r3, %r14;
	mul.wide.u32 	%rd4, %r17, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB131_2:
	ret;

}
	// .globl	update_nesterov_x_d
.visible .entry update_nesterov_x_d(
	.param .u64 update_nesterov_x_d_param_0,
	.param .u64 update_nesterov_x_d_param_1,
	.param .u64 update_nesterov_x_d_param_2,
	.param .f64 update_nesterov_x_d_param_3,
	.param .u64 update_nesterov_x_d_param_4,
	.param .u32 update_nesterov_x_d_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [update_nesterov_x_d_param_0];
	ld.param.u64 	%rd2, [update_nesterov_x_d_param_1];
	ld.param.u64 	%rd3, [update_nesterov_x_d_param_2];
	ld.param.f64 	%fd1, [update_nesterov_x_d_param_3];
	ld.param.u64 	%rd4, [update_nesterov_x_d_param_4];
	ld.param.u32 	%r2, [update_nesterov_x_d_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB132_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 8;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f64 	%fd2, [%rd9];
	mul.f64 	%fd3, %fd2, %fd1;
	ld.global.f64 	%fd4, [%rd7];
	sub.f64 	%fd5, %fd4, %fd3;
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f64 	%fd6, [%rd11];
	add.f64 	%fd7, %fd1, 0d3FF0000000000000;
	fma.rn.f64 	%fd8, %fd7, %fd6, %fd5;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f64 	[%rd13], %fd8;

$L__BB132_2:
	ret;

}
	// .globl	update_nesterov_x_f
.visible .entry update_nesterov_x_f(
	.param .u64 update_nesterov_x_f_param_0,
	.param .u64 update_nesterov_x_f_param_1,
	.param .u64 update_nesterov_x_f_param_2,
	.param .f64 update_nesterov_x_f_param_3,
	.param .u64 update_nesterov_x_f_param_4,
	.param .u32 update_nesterov_x_f_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [update_nesterov_x_f_param_0];
	ld.param.u64 	%rd2, [update_nesterov_x_f_param_1];
	ld.param.u64 	%rd3, [update_nesterov_x_f_param_2];
	ld.param.f64 	%fd1, [update_nesterov_x_f_param_3];
	ld.param.u64 	%rd4, [update_nesterov_x_f_param_4];
	ld.param.u32 	%r2, [update_nesterov_x_f_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB133_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	cvt.f64.f32 	%fd2, %f1;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	cvt.f64.f32 	%fd3, %f2;
	mul.f64 	%fd4, %fd3, %fd1;
	sub.f64 	%fd5, %fd2, %fd4;
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f32 	%f3, [%rd11];
	cvt.f64.f32 	%fd6, %f3;
	add.f64 	%fd7, %fd1, 0d3FF0000000000000;
	fma.rn.f64 	%fd8, %fd7, %fd6, %fd5;
	cvt.rn.f32.f64 	%f4, %fd8;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f4;

$L__BB133_2:
	ret;

}
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot134[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<29>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<79>;


	mov.u64 	%SPL, __local_depot134;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd18, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	bfe.u32 	%r2, %r1, 20, 11;
	setp.eq.s32 	%p1, %r2, 2047;
	@%p1 bra 	$L__BB134_7;

	add.s32 	%r3, %r2, -1024;
	shr.u32 	%r10, %r3, 6;
	mov.u32 	%r11, 16;
	sub.s32 	%r4, %r11, %r10;
	mov.u32 	%r12, 19;
	sub.s32 	%r13, %r12, %r10;
	setp.gt.s32 	%p2, %r4, 14;
	selp.b32 	%r5, 18, %r13, %p2;
	setp.gt.s32 	%p3, %r4, %r5;
	mov.u64 	%rd75, 0;
	mov.u64 	%rd76, %rd1;
	@%p3 bra 	$L__BB134_4;

	add.s32 	%r6, %r4, -1;
	mov.b64 	%rd22, %fd4;
	shl.b64 	%rd23, %rd22, 11;
	or.b64  	%rd4, %rd23, -9223372036854775808;
	mov.u64 	%rd25, __cudart_i2opi_d;
	mov.u64 	%rd76, %rd1;
	mov.u32 	%r28, %r6;

$L__BB134_3:
	.pragma "nounroll";
	mul.wide.s32 	%rd24, %r28, 8;
	add.s64 	%rd26, %rd25, %rd24;
	ld.global.nc.u64 	%rd27, [%rd26];
	{
	.reg .u32 %r0, %r1, %r2, %r3, %alo, %ahi, %blo, %bhi, %clo, %chi;
	mov.b64 	{%alo,%ahi}, %rd27;
	mov.b64 	{%blo,%bhi}, %rd4;
	mov.b64 	{%clo,%chi}, %rd75;
	mad.lo.cc.u32 	%r0, %alo, %blo, %clo;
	madc.hi.cc.u32 	%r1, %alo, %blo, %chi;
	madc.hi.u32 	%r2, %alo, %bhi, 0;
	mad.lo.cc.u32 	%r1, %alo, %bhi, %r1;
	madc.hi.cc.u32 	%r2, %ahi, %blo, %r2;
	madc.hi.u32 	%r3, %ahi, %bhi, 0;
	mad.lo.cc.u32 	%r1, %ahi, %blo, %r1;
	madc.lo.cc.u32 	%r2, %ahi, %bhi, %r2;
	addc.u32 	%r3, %r3, 0;
	mov.b64 	%rd28, {%r0,%r1};
	mov.b64 	%rd75, {%r2,%r3};
	}
	st.local.u64 	[%rd76], %rd28;
	add.s32 	%r28, %r28, 1;
	sub.s32 	%r14, %r28, %r6;
	mul.wide.s32 	%rd29, %r14, 8;
	add.s64 	%rd76, %rd1, %rd29;
	setp.lt.s32 	%p4, %r28, %r5;
	@%p4 bra 	$L__BB134_3;

$L__BB134_4:
	st.local.u64 	[%rd76], %rd75;
	ld.local.u64 	%rd78, [%rd1+16];
	ld.local.u64 	%rd77, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32 	%p5, %r9, 0;
	@%p5 bra 	$L__BB134_6;

	mov.u32 	%r15, 64;
	sub.s32 	%r16, %r15, %r9;
	shl.b64 	%rd30, %rd77, %r9;
	shr.u64 	%rd31, %rd78, %r16;
	or.b64  	%rd77, %rd30, %rd31;
	shl.b64 	%rd32, %rd78, %r9;
	ld.local.u64 	%rd33, [%rd1+8];
	shr.u64 	%rd34, %rd33, %r16;
	or.b64  	%rd78, %rd34, %rd32;

$L__BB134_6:
	and.b32  	%r17, %r1, -2147483648;
	shr.u64 	%rd35, %rd77, 62;
	cvt.u32.u64 	%r18, %rd35;
	shr.u64 	%rd36, %rd78, 62;
	shl.b64 	%rd37, %rd77, 2;
	or.b64  	%rd38, %rd36, %rd37;
	shr.u64 	%rd39, %rd77, 61;
	cvt.u32.u64 	%r19, %rd39;
	and.b32  	%r20, %r19, 1;
	add.s32 	%r21, %r20, %r18;
	neg.s32 	%r22, %r21;
	setp.eq.s32 	%p6, %r17, 0;
	selp.b32 	%r23, %r21, %r22, %p6;
	cvta.to.local.u64 	%rd40, %rd18;
	mov.u64 	%rd41, 0;
	st.local.u32 	[%rd40], %r23;
	setp.eq.s32 	%p7, %r20, 0;
	shl.b64 	%rd42, %rd78, 2;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %a0, %a1, %a2, %a3, %b0, %b1, %b2, %b3;
	mov.b64 	{%a0,%a1}, %rd41;
	mov.b64 	{%a2,%a3}, %rd41;
	mov.b64 	{%b0,%b1}, %rd42;
	mov.b64 	{%b2,%b3}, %rd38;
	sub.cc.u32 	%r0, %a0, %b0;
	subc.cc.u32 	%r1, %a1, %b1;
	subc.cc.u32 	%r2, %a2, %b2;
	subc.u32 	%r3, %a3, %b3;
	mov.b64 	%rd43, {%r0,%r1};
	mov.b64 	%rd44, {%r2,%r3};
	}
	selp.b64 	%rd45, %rd38, %rd44, %p7;
	selp.b64 	%rd46, %rd42, %rd43, %p7;
	xor.b32  	%r24, %r17, -2147483648;
	selp.b32 	%r25, %r17, %r24, %p7;
	clz.b64 	%r26, %rd45;
	cvt.u64.u32 	%rd47, %r26;
	setp.eq.s64 	%p8, %rd47, 0;
	shl.b64 	%rd48, %rd45, %r26;
	mov.u64 	%rd49, 64;
	sub.s64 	%rd50, %rd49, %rd47;
	cvt.u32.u64 	%r27, %rd50;
	shr.u64 	%rd51, %rd46, %r27;
	or.b64  	%rd52, %rd51, %rd48;
	selp.b64 	%rd53, %rd45, %rd52, %p8;
	mov.u64 	%rd54, -3958705157555305931;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %alo, %ahi, %blo, %bhi;
	mov.b64 	{%alo,%ahi}, %rd53;
	mov.b64 	{%blo,%bhi}, %rd54;
	mul.lo.u32 	%r0, %alo, %blo;
	mul.hi.u32 	%r1, %alo, %blo;
	mad.lo.cc.u32 	%r1, %alo, %bhi, %r1;
	madc.hi.u32 	%r2, %alo, %bhi, 0;
	mad.lo.cc.u32 	%r1, %ahi, %blo, %r1;
	madc.hi.cc.u32 	%r2, %ahi, %blo, %r2;
	madc.hi.u32 	%r3, %ahi, %bhi, 0;
	mad.lo.cc.u32 	%r2, %ahi, %bhi, %r2;
	addc.u32 	%r3, %r3, 0;
	mov.b64 	%rd55, {%r0,%r1};
	mov.b64 	%rd56, {%r2,%r3};
	}
	setp.gt.s64 	%p9, %rd56, 0;
	{
	.reg .u32 %r0, %r1, %r2, %r3, %a0, %a1, %a2, %a3, %b0, %b1, %b2, %b3;
	mov.b64 	{%a0,%a1}, %rd55;
	mov.b64 	{%a2,%a3}, %rd56;
	mov.b64 	{%b0,%b1}, %rd55;
	mov.b64 	{%b2,%b3}, %rd56;
	add.cc.u32 	%r0, %a0, %b0;
	addc.cc.u32 	%r1, %a1, %b1;
	addc.cc.u32 	%r2, %a2, %b2;
	addc.u32 	%r3, %a3, %b3;
	mov.b64 	%rd57, {%r0,%r1};
	mov.b64 	%rd58, {%r2,%r3};
	}
	selp.b64 	%rd59, %rd58, %rd56, %p9;
	selp.u64 	%rd60, 1, 0, %p9;
	add.s64 	%rd61, %rd47, %rd60;
	cvt.u64.u32 	%rd62, %r25;
	shl.b64 	%rd63, %rd62, 32;
	shl.b64 	%rd64, %rd61, 52;
	mov.u64 	%rd65, 4602678819172646912;
	sub.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd67, %rd59, 1;
	shr.u64 	%rd68, %rd67, 10;
	add.s64 	%rd69, %rd68, 1;
	shr.u64 	%rd70, %rd69, 1;
	add.s64 	%rd71, %rd66, %rd70;
	or.b64  	%rd72, %rd71, %rd63;
	mov.b64 	%fd4, %rd72;

$L__BB134_7:
	st.param.f64 	[func_retval0+0], %fd4;
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB135_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB135_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB135_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB135_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB135_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB135_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB135_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB135_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB135_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

