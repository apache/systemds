#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------
get_X = function(matrix[double] X,
                 int start, int stop)
    return (matrix[double] returnVal) {
  returnVal = X[start:stop,1:ncol(X)-1]
}
get_Y = function(matrix[double] X,
                 int start, int stop)
    return (matrix[double] returnVal) {
  returnVal = X[start:stop,ncol(X):ncol(X)]
}

replace_value = function(matrix[double] X,
                 double pattern , double replacement)
    return (matrix[double] returnVal) {
  returnVal = replace(target=X, pattern=pattern, replacement=replacement)
}

#replace_target_frame = function(String replacement, String to_replace, Frame[Unknown] X)
#  return(Frame[Unknown] X)
#{
#  for (i in 1:nrow(X)) {
#    if (as.scalar(X[i, ncol(X)]) == to_replace) {
#      X[i, ncol(X)] = replacement;
#    }
#  }
#}