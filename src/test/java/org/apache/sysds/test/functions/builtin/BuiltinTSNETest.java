/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.sysds.test.functions.builtin;

import org.apache.sysds.common.Types;
import org.apache.sysds.common.Types.ExecMode;
import org.apache.sysds.common.Types.FileFormat;
import org.apache.sysds.common.Types.ExecType;
import org.apache.sysds.runtime.io.FrameWriter;
import org.apache.sysds.runtime.io.FrameWriterFactory;
import org.apache.sysds.runtime.matrix.data.FrameBlock;
import org.apache.sysds.runtime.matrix.data.MatrixValue;
import org.apache.sysds.test.AutomatedTestBase;
import org.apache.sysds.test.TestConfiguration;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

import java.io.IOException;
import java.util.*;

public class BuiltinTSNETest extends AutomatedTestBase
{
	private final static String TEST_NAME = "tSNE";
	private final static String TEST_DIR = "functions/builtin/";
	private static final String TEST_CLASS_DIR = TEST_DIR + BuiltinTSNETest.class.getSimpleName() + "/";
	
	private final static Types.ValueType[] schema = {Types.ValueType.STRING};
	
	@Override
	public void setUp() {
		addTestConfiguration(TEST_NAME,new TestConfiguration(TEST_CLASS_DIR, TEST_NAME,new String[]{"B"})); 
	}

	 @Test
	 public void testTSNECP() throws IOException {
		 runTSNETest(2, 30, 300.,
				 0.9, 1000, "TRUE", ExecType.CP);
	 }

	@Test
	public void testTSNESP() throws IOException {
		runTSNETest(2, 30, 300.,
				0.9, 1000, "TRUE", ExecType.SPARK);
	}

	
	private void runTSNETest(Integer reduced_dims, Integer perplexity, Double lr,
							 Double momentum, Integer max_iter, String is_verbose,	ExecType instType) throws IOException
	{
		ExecMode platformOld = setExecMode(instType);

		System.out.println("Begin t-SNE Test");
		try
		{
			loadTestConfiguration(getTestConfiguration(TEST_NAME));

			String HOME = SCRIPT_DIR + TEST_DIR;
			fullDMLScriptName = HOME + TEST_NAME + ".dml";
			programArgs = new String[]{
				"-nvargs", "X=" + input("X"), "Y=" + output("Y"), "C=" + output("C"),
				"reduced_dims=" + reduced_dims,
				"perplexity=" + perplexity,
				"lr=" + lr,
				"momentum=" + momentum,
				"max_iter=" + max_iter,
				"is_verbose=" + is_verbose};


			double[][] X = {{-0.23599574, 0.13972311, -0.74547391, -0.31565495},
					{-0.29946752, -0.01895634, -0.74547391, -0.31565495},
					{-0.36293930, 0.04451544, -0.77720980, -0.31565495},
					{-0.39467519, 0.01277955, -0.71373802, -0.31565495},
					{-0.26773163, 0.17145900, -0.74547391, -0.31565495},
					{-0.14078807, 0.26666667, -0.65026624, -0.25218317},
					{-0.39467519, 0.10798722, -0.74547391, -0.28391906},
					{-0.26773163, 0.10798722, -0.71373802, -0.31565495},
					{-0.45814696, -0.05069223, -0.74547391, -0.31565495},
					{-0.29946752, 0.01277955, -0.71373802, -0.34739084},
					{-0.14078807, 0.20319489, -0.71373802, -0.31565495},
					{-0.33120341, 0.10798722, -0.68200213, -0.31565495},
					{-0.33120341, -0.01895634, -0.74547391, -0.34739084},
					{-0.48988285, -0.01895634, -0.84068158, -0.34739084},
					{-0.01384452, 0.29840256, -0.80894569, -0.31565495},
					{-0.04558040, 0.42534611, -0.71373802, -0.25218317},
					{-0.14078807, 0.26666667, -0.77720980, -0.25218317},
					{-0.23599574, 0.13972311, -0.74547391, -0.28391906},
					{-0.04558040, 0.23493078, -0.65026624, -0.28391906},
					{-0.23599574, 0.23493078, -0.71373802, -0.28391906},
					{-0.14078807, 0.10798722, -0.65026624, -0.31565495},
					{-0.23599574, 0.20319489, -0.71373802, -0.25218317},
					{-0.39467519, 0.17145900, -0.87241747, -0.31565495},
					{-0.23599574, 0.07625133, -0.65026624, -0.22044728},
					{-0.33120341, 0.10798722, -0.58679446, -0.31565495},
					{-0.26773163, -0.01895634, -0.68200213, -0.31565495},
					{-0.26773163, 0.10798722, -0.68200213, -0.25218317},
					{-0.20425985, 0.13972311, -0.71373802, -0.31565495},
					{-0.20425985, 0.10798722, -0.74547391, -0.31565495},
					{-0.36293930, 0.04451544, -0.68200213, -0.31565495},
					{-0.33120341, 0.01277955, -0.68200213, -0.31565495},
					{-0.14078807, 0.10798722, -0.71373802, -0.25218317},
					{-0.20425985, 0.33013845, -0.71373802, -0.34739084},
					{-0.10905218, 0.36187433, -0.74547391, -0.31565495},
					{-0.29946752, 0.01277955, -0.71373802, -0.31565495},
					{-0.26773163, 0.04451544, -0.80894569, -0.31565495},
					{-0.10905218, 0.13972311, -0.77720980, -0.31565495},
					{-0.29946752, 0.17145900, -0.74547391, -0.34739084},
					{-0.45814696, -0.01895634, -0.77720980, -0.31565495},
					{-0.23599574, 0.10798722, -0.71373802, -0.31565495},
					{-0.26773163, 0.13972311, -0.77720980, -0.28391906},
					{-0.42641108, -0.24110756, -0.77720980, -0.28391906},
					{-0.45814696, 0.04451544, -0.77720980, -0.31565495},
					{-0.26773163, 0.13972311, -0.68200213, -0.18871140},
					{-0.23599574, 0.23493078, -0.58679446, -0.25218317},
					{-0.33120341, -0.01895634, -0.74547391, -0.28391906},
					{-0.23599574, 0.23493078, -0.68200213, -0.31565495},
					{-0.39467519, 0.04451544, -0.74547391, -0.31565495},
					{-0.17252396, 0.20319489, -0.71373802, -0.31565495},
					{-0.26773163, 0.07625133, -0.74547391, -0.31565495},
					{0.36698616, 0.04451544, 0.30181044, 0.06517572},
					{0.17657082, 0.04451544, 0.23833866, 0.09691161},
					{0.33525027, 0.01277955, 0.36528222, 0.09691161},
					{-0.10905218, -0.24110756, 0.07965921, 0.03343983},
					{0.20830671, -0.08242812, 0.27007455, 0.09691161},
					{-0.04558040, -0.08242812, 0.23833866, 0.03343983},
					{0.14483493, 0.07625133, 0.30181044, 0.12864750},
					{-0.29946752, -0.20937167, -0.14249201, -0.06176784},
					{0.24004260, -0.05069223, 0.27007455, 0.03343983},
					{-0.20425985, -0.11416400, 0.04792332, 0.06517572},
					{-0.26773163, -0.33631523, -0.07902023, -0.06176784},
					{0.01789137, -0.01895634, 0.14313099, 0.09691161},
					{0.04962726, -0.27284345, 0.07965921, -0.06176784},
					{0.08136315, -0.05069223, 0.30181044, 0.06517572},
					{-0.07731629, -0.05069223, -0.04728435, 0.03343983},
					{0.27177849, 0.01277955, 0.20660277, 0.06517572},
					{-0.07731629, -0.01895634, 0.23833866, 0.09691161},
					{-0.01384452, -0.11416400, 0.11139510, -0.06176784},
					{0.11309904, -0.27284345, 0.23833866, 0.09691161},
					{-0.07731629, -0.17763578, 0.04792332, -0.03003195},
					{0.01789137, 0.04451544, 0.33354633, 0.19211928},
					{0.08136315, -0.08242812, 0.07965921, 0.03343983},
					{0.14483493, -0.17763578, 0.36528222, 0.09691161},
					{0.08136315, -0.08242812, 0.30181044, 0.00170394},
					{0.17657082, -0.05069223, 0.17486688, 0.03343983},
					{0.24004260, -0.01895634, 0.20660277, 0.06517572},
					{0.30351438, -0.08242812, 0.33354633, 0.06517572},
					{0.27177849, -0.01895634, 0.39701810, 0.16038339},
					{0.04962726, -0.05069223, 0.23833866, 0.09691161},
					{-0.04558040, -0.14589989, -0.07902023, -0.06176784},
					{-0.10905218, -0.20937167, 0.01618743, -0.03003195},
					{-0.10905218, -0.20937167, -0.01554846, -0.06176784},
					{-0.01384452, -0.11416400, 0.04792332, 0.00170394},
					{0.04962726, -0.11416400, 0.42875399, 0.12864750},
					{-0.14078807, -0.01895634, 0.23833866, 0.09691161},
					{0.04962726, 0.10798722, 0.23833866, 0.12864750},
					{0.27177849, 0.01277955, 0.30181044, 0.09691161},
					{0.14483493, -0.24110756, 0.20660277, 0.03343983},
					{-0.07731629, -0.01895634, 0.11139510, 0.03343983},
					{-0.10905218, -0.17763578, 0.07965921, 0.03343983},
					{-0.10905218, -0.14589989, 0.20660277, 0.00170394},
					{0.08136315, -0.01895634, 0.27007455, 0.06517572},
					{-0.01384452, -0.14589989, 0.07965921, 0.00170394},
					{-0.26773163, -0.24110756, -0.14249201, -0.06176784},
					{-0.07731629, -0.11416400, 0.14313099, 0.03343983},
					{-0.04558040, -0.01895634, 0.14313099, 0.00170394},
					{-0.04558040, -0.05069223, 0.14313099, 0.03343983},
					{0.11309904, -0.05069223, 0.17486688, 0.03343983},
					{-0.23599574, -0.17763578, -0.23769968, -0.03003195},
					{-0.04558040, -0.08242812, 0.11139510, 0.03343983},
					{0.14483493, 0.07625133, 0.71437700, 0.41427050},
					{-0.01384452, -0.11416400, 0.42875399, 0.22385517},
					{0.39872204, -0.01895634, 0.68264111, 0.28732694},
					{0.14483493, -0.05069223, 0.58743344, 0.19211928},
					{0.20830671, -0.01895634, 0.65090522, 0.31906283},
					{0.55740149, -0.01895634, 0.90479233, 0.28732694},
					{-0.29946752, -0.17763578, 0.23833866, 0.16038339},
					{0.46219382, -0.05069223, 0.80958466, 0.19211928},
					{0.27177849, -0.17763578, 0.65090522, 0.19211928},
					{0.43045793, 0.17145900, 0.74611289, 0.41427050},
					{0.20830671, 0.04451544, 0.42875399, 0.25559105},
					{0.17657082, -0.11416400, 0.49222577, 0.22385517},
					{0.30351438, -0.01895634, 0.55569755, 0.28732694},
					{-0.04558040, -0.17763578, 0.39701810, 0.25559105},
					{-0.01384452, -0.08242812, 0.42875399, 0.38253461},
					{0.17657082, 0.04451544, 0.49222577, 0.35079872},
					{0.20830671, -0.01895634, 0.55569755, 0.19211928},
					{0.58913738, 0.23493078, 0.93652822, 0.31906283},
					{0.58913738, -0.14589989, 1.00000000, 0.35079872},
					{0.04962726, -0.27284345, 0.39701810, 0.09691161},
					{0.33525027, 0.04451544, 0.61916933, 0.35079872},
					{-0.07731629, -0.08242812, 0.36528222, 0.25559105},
					{0.58913738, -0.08242812, 0.93652822, 0.25559105},
					{0.14483493, -0.11416400, 0.36528222, 0.19211928},
					{0.27177849, 0.07625133, 0.61916933, 0.28732694},
					{0.43045793, 0.04451544, 0.71437700, 0.19211928},
					{0.11309904, -0.08242812, 0.33354633, 0.19211928},
					{0.08136315, -0.01895634, 0.36528222, 0.19211928},
					{0.17657082, -0.08242812, 0.58743344, 0.28732694},
					{0.43045793, -0.01895634, 0.65090522, 0.12864750},
					{0.49392971, -0.08242812, 0.74611289, 0.22385517},
					{0.65260916, 0.23493078, 0.84132055, 0.25559105},
					{0.17657082, -0.08242812, 0.58743344, 0.31906283},
					{0.14483493, -0.08242812, 0.42875399, 0.09691161},
					{0.08136315, -0.14589989, 0.58743344, 0.06517572},
					{0.58913738, -0.01895634, 0.74611289, 0.35079872},
					{0.14483493, 0.10798722, 0.58743344, 0.38253461},
					{0.17657082, 0.01277955, 0.55569755, 0.19211928},
					{0.04962726, -0.01895634, 0.33354633, 0.19211928},
					{0.33525027, 0.01277955, 0.52396166, 0.28732694},
					{0.27177849, 0.01277955, 0.58743344, 0.38253461},
					{0.33525027, 0.01277955, 0.42875399, 0.35079872},
					{0.30351438, 0.04451544, 0.68264111, 0.35079872},
					{0.27177849, 0.07625133, 0.61916933, 0.41427050},
					{0.27177849, -0.01895634, 0.46048988, 0.35079872},
					{0.14483493, -0.17763578, 0.39701810, 0.22385517},
					{0.20830671, -0.01895634, 0.46048988, 0.25559105},
					{0.11309904, 0.10798722, 0.52396166, 0.35079872},
					{0.01789137, -0.01895634, 0.42875399, 0.19211928}};

			writeInputMatrixWithMTD("X", X, true);

			System.out.println("Run test");
			runTest(true, false, null, -1);
			System.out.println("DONE");
			HashMap<MatrixValue.CellIndex, Double> dmlFileY = readDMLMatrixFromOutputDir("Y");
			HashMap<MatrixValue.CellIndex, Double> dmlFileC = readDMLMatrixFromOutputDir("C");
		}
		finally {
			rtplatform = platformOld;
		}
	}
}
