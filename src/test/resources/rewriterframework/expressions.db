
::STMT
MATRIX:prediction,target
LITERAL_FLOAT:1.0
*(/(1.0,nrow(target)),-(prediction,target))
::STMT
MATRIX:parsertemp75086
LITERAL_FLOAT:32.0
*(parsertemp75086,32.0)
::STMT
LITERAL_FLOAT:1.0
cast.MATRIX(1.0)
::STMT
MATRIX:y_corr,parsertemp171089,parsertemp171084,parsertemp171095
FLOAT:float98,float133,float340
LITERAL_FLOAT:-1.0,1.0,2.0
*(+(*(sqrt(parsertemp171084),-1.0),/(+(float340,parsertemp171089),+(float98,parsertemp171095))),-(1.0,*(2.0,>(y_corr,float133))))
::STMT
MATRIX:parsertemp109934
LITERAL_FLOAT:42.0
*(parsertemp109934,42.0)
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int210,parsertemp31048,parsertemp31047,int867,int429,parsertemp31053,parsertemp31052,int196
LITERAL_FLOAT:2.0
/(^(+(/(posSampleVariances,int429),/(negSampleVariances,int210)),2.0),+(/(^(posSampleVariances,int196),*(parsertemp31047,parsertemp31048)),/(^(negSampleVariances,int867),*(parsertemp31052,parsertemp31053))))
::STMT
MATRIX:X
FLOAT:int40
LITERAL_FLOAT:1764.0
sqrt(/(colSums(^(X,int40)),1764.0))
::STMT
MATRIX:id
diag(diag(==(id,t(id))))
::STMT
MATRIX:scale_X,z,beta
*(cast.FLOAT(diag(scale_X)),+(cast.FLOAT(beta),cast.FLOAT(z)))
::STMT
MATRIX:X
FLOAT:int459
LITERAL_FLOAT:1.0,1.0E-6
/(*(1.0E-6,sum(^(X,int459))),1.0)
::STMT
MATRIX:parsertemp18128,X,parsertemp18133
FLOAT:int389
LITERAL_FLOAT:0.0
rowSums(*(>(%*%(X,parsertemp18128),0.0),t(^(int389,parsertemp18133))))
::STMT
MATRIX:hubs
FLOAT:parsertemp30953
LITERAL_FLOAT:2.0
sum(^(-(/(hubs,parsertemp30953),hubs),2.0))
::STMT
FLOAT:index
LITERAL_FLOAT:2.0
+(*(index,2.0),2.0)
::STMT
MATRIX:R,dssp,dsep
FLOAT:4_eAvg
LITERAL_FLOAT:1.0
-(/(/(+(R,dsep),+(R,dssp)),4_eAvg),1.0)
::STMT
MATRIX:r_LS,parsertemp170556,p_LS,parsertemp170552
FLOAT:norm_r2_LS,lambda_LS
+(r_LS,*(/(norm_r2_LS,sum(parsertemp170556)),+(%*%(parsertemp170552,p_LS),*(lambda_LS,p_LS))))
::STMT
MATRIX:X,RMSE
/(RMSE,-(max(X),min(X)))
::STMT
MATRIX:parsertemp472412,fP
FLOAT:max_values,parsertemp472284
t(<=(parsertemp472412,/(^(parsertemp472284,max_values),ncol(fP))))
::STMT
MATRIX:ts
FLOAT:q
cast.FLOAT(+(-(q,%*%(ts,ts)),%*%(ts,ts)))
::STMT
MATRIX:Y
FLOAT:x,X
LITERAL_FLOAT:1.0
*(-(1.0,/(-(x,X),-(X,X))),cast.FLOAT(Y))
::STMT
MATRIX:X
LITERAL_FLOAT:200.0,2.0
^(/(t(colSums(X)),200.0),2.0)
::STMT
MATRIX:R
FLOAT:int37,int162
INT:int981,parsertemp503363
t(+(R,diag(rand(parsertemp503363,int981,int162,int37))))
::STMT
MATRIX:y
FLOAT:beta,n
LITERAL_FLOAT:2.0
/(sum(^(-(beta,y),2.0)),n)
::STMT
FLOAT:g
LITERAL_FLOAT:1.0,2.0
+(*(g,2.0),1.0)
::STMT
MATRIX:sv,s,w,X,Y,out
FLOAT:step_sz
-(%*%(t(X),*(*(sv,out),Y)),+(w,*(step_sz,s)))
::STMT
MATRIX:parsertemp10744,parsertemp10743,W,H,parsertemp10739
%*%(W,%*%(*(H,/(parsertemp10739,parsertemp10743)),t(*(H,parsertemp10744))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,100.0
*(*(-(i,1.0),100.0),100.0)
::STMT
MATRIX:Y_counts,Y
/(colSums(Y),sum(Y_counts))
::STMT
MATRIX:minD,D
/(<=(D,minD),rowSums(<=(D,minD)))
::STMT
MATRIX:parsertemp472317,parsertemp472315,ig
t(rev(*(&(parsertemp472315,parsertemp472317),ig)))
::STMT
FLOAT:factor_up,parsertemp195892
LITERAL_FLOAT:2.0
-(*(2.0,factor_up),parsertemp195892)
::STMT
MATRIX:dY,W,Y,sumW
LITERAL_FLOAT:300.0,0.9
-(*(0.9,dY),*(300.0,-(*(Y,sumW),%*%(W,Y))))
::STMT
FLOAT:o_init,o
LITERAL_FLOAT:-1.0,2.0
*(-(*(2.0,o_init),*(2.0,o)),-1.0)
::STMT
MATRIX:parsertemp265709,parsertemp265718
LITERAL_FLOAT:2.0
*(2.0,cast.FLOAT(%*%(colSums(parsertemp265718),rowSums(parsertemp265709))))
::STMT
MATRIX:parsertemp555766,parsertemp555762,target
FLOAT:int381,int17
sum(-(*(*(target,int17),parsertemp555762),*(-(int381,target),parsertemp555766)))
::STMT
MATRIX:ssX_V,X,P_1K
rowSums(*(P_1K,%*%(X,ssX_V)))
::STMT
LITERAL_FLOAT:8000.0
8000.0
::STMT
MATRIX:p,q,lambda,parsertemp116061,parsertemp116062,scale_X,shift_X
+(+(*(scale_X,%*%(parsertemp116061,parsertemp116062)),*(cast.FLOAT(q),shift_X)),*(lambda,p))
::STMT
MATRIX:ss_avg_res_Y,ss_avg_tot_Y
LITERAL_FLOAT:1.0
-(1.0,/(ss_avg_res_Y,ss_avg_tot_Y))
::STMT
MATRIX:Xd,Xu
LITERAL_FLOAT:1.0
/(1.0,-(Xu,Xd))
::STMT
MATRIX:Y_counts,parsertemp560521,ent2_vec
sqrt(sum(*(Y_counts,-(ent2_vec,parsertemp560521))))
::STMT
MATRIX:X,H,parsertemp16755
LITERAL_FLOAT:0.0,2.0
*(>(%*%(X,t(H)),0.0),^(2.0,cast.FLOAT(parsertemp16755)))
::STMT
MATRIX:cdf_min_distances
FLOAT:float467,float609
INT:int767,num_runs
colSums(<(cdf_min_distances,*(rand(int767,num_runs,float609,float467),cdf_min_distances)))
::STMT
MATRIX:WM,Y
/(sum(*(Y,WM)),sum(WM))
::STMT
MATRIX:scale_lambda
LITERAL_FLOAT:0.0
*(scale_lambda,0.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:2.0
*(linear_terms,2.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,80656.0
+(*(-(i,1.0),80656.0),1.0)
::STMT
MATRIX:P
LITERAL_FLOAT:4.0
*(P,4.0)
::STMT
MATRIX:fdom,X,parsertemp1688
+(X,-(t(parsertemp1688),fdom))
::STMT
MATRIX:sample_maps,X
LITERAL_FLOAT:2.0
rowSums(^(%*%(sample_maps,X),2.0))
::STMT
MATRIX:p,lambda,X
*(p,+(%*%(t(X),%*%(X,p)),*(lambda,p)))
::STMT
MATRIX:Ileft,_funvar2706,_funvar2707
FLOAT:numI
-(cast.FLOAT(_funvar2706),*(/(rowSums(Ileft),numI),_funvar2707))
::STMT
MATRIX:parsertemp31029,parsertemp31031
FLOAT:int871
LITERAL_FLOAT:149.0,150.0
/(/(-(colSums(parsertemp31029),*(int871,parsertemp31031)),149.0),150.0)
::STMT
MATRIX:parsertemp130418
LITERAL_FLOAT:1.0,4.0
+(*(max(parsertemp130418),4.0),1.0)
::STMT
MATRIX:X
FLOAT:s
LITERAL_FLOAT:0.0
-(+(nrow(X),0.0),s)
::STMT
MATRIX:parsertemp283570,tpr,fpr,parsertemp283568
LITERAL_FLOAT:2.0
+(cast.FLOAT(*(tpr,fpr)),sum(/(*(parsertemp283568,parsertemp283570),2.0)))
::STMT
MATRIX:xs
FLOAT:256_x
LITERAL_FLOAT:1000.0
-(1000.0,sum(>=(xs,256_x)))
::STMT
MATRIX:parsertemp72182
LITERAL_FLOAT:8.0
*(parsertemp72182,8.0)
::STMT
FLOAT:num_centroids
LITERAL_FLOAT:3.0
*(3.0,num_centroids)
::STMT
MATRIX:scale_X,X,parsertemp274503,parsertemp274506,P_1K
%*%(diag(scale_X),%*%(t(X),-(*(P_1K,parsertemp274503),*(P_1K,parsertemp274506))))
::STMT
MATRIX:X
FLOAT:n
LITERAL_FLOAT:-1.0
*(/(t(colSums(X)),n),-1.0)
::STMT
MATRIX:parsertemp42202,F
FLOAT:parsertemp42203,W,int416,meanX
t(*(/(F,-(W,int416)),-(+(parsertemp42202,parsertemp42203),meanX)))
::STMT
LITERAL_FLOAT:6.0,2001.0
*(6.0,2001.0)
::STMT
MATRIX:parsertemp410987,parsertemp410989,parsertemp410978,W,H,parsertemp410980
sum(%*%(/(*(W,parsertemp410987),t(parsertemp410989)),/(*(H,parsertemp410978),t(parsertemp410980))))
::STMT
MATRIX:linear_terms
FLOAT:var_power,link_power,int701
LITERAL_FLOAT:1.0
^(linear_terms,-(/(-(int701,var_power),link_power),1.0))
::STMT
MATRIX:parsertemp149339,parsertemp149335
FLOAT:int257,obj,parsertemp149332
LITERAL_FLOAT:0.5
-(obj,+(+(*(parsertemp149332,int257),sum(parsertemp149335)),*(0.5,sum(parsertemp149339))))
::STMT
MATRIX:parsertemp107030
LITERAL_FLOAT:7.0
*(parsertemp107030,7.0)
::STMT
MATRIX:y_batch,parsertemp459782,parsertemp459784
FLOAT:loss
+(loss,/(sum(*(parsertemp459782,parsertemp459784)),nrow(y_batch)))
::STMT
MATRIX:parsertemp73634
LITERAL_FLOAT:16.0
*(parsertemp73634,16.0)
::STMT
MATRIX:P,Y
LITERAL_FLOAT:1.0
/(P,+(-(ncol(Y),1.0),1.0))
::STMT
MATRIX:ss,se,e
LITERAL_FLOAT:1.0,40.0
-(/(/(se,ss),/(sum(e),40.0)),1.0)
::STMT
FLOAT:parsertemp254715,parsertemp254694,2123_sq_root_d,pp_CG,float162
+(float162,*(parsertemp254715,/(-(parsertemp254694,2123_sq_root_d),pp_CG)))
::STMT
MATRIX:_sbcvar78,parsertemp22266
FLOAT:int513
LITERAL_FLOAT:2.0,10000.0
/(^(-(_sbcvar78,/(parsertemp22266,int513)),2.0),/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0))
::STMT
MATRIX:linear_terms
FLOAT:int750,var_power,link_power
LITERAL_FLOAT:2.0
^(linear_terms,-(/(-(int750,var_power),link_power),2.0))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0,2.0
/(^(linear_terms,2.0),-(1.0,var_power))
::STMT
MATRIX:tmp
FLOAT:norm_r2_LS
/(cast.FLOAT(%*%(t(tmp),tmp)),norm_r2_LS)
::STMT
MATRIX:parsertemp556355
LITERAL_FLOAT:0.125
*(parsertemp556355,0.125)
::STMT
FLOAT:num_records
LITERAL_FLOAT:1920.0
/(1920.0,num_records)
::STMT
MATRIX:prec_chol,mu
LITERAL_FLOAT:2.0
rowSums(*(^(mu,2.0),^(prec_chol,2.0)))
::STMT
LITERAL_FLOAT:100.0
100.0
::STMT
LITERAL_FLOAT:105.0
105.0
::STMT
LITERAL_FLOAT:81.0
81.0
::STMT
LITERAL_FLOAT:80.0
80.0
::STMT
LITERAL_FLOAT:127.0
127.0
::STMT
LITERAL_FLOAT:120.0
120.0
::STMT
MATRIX:parsertemp409212,ctab
LITERAL_FLOAT:0.45
>(/(parsertemp409212,rowSums(ctab)),0.45)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
t(colSums(!=(X,0.0)))
::STMT
MATRIX:negSampleMeans,negSamples
LITERAL_FLOAT:2.0,1500.0
-(colSums(^(negSamples,2.0)),*(1500.0,^(negSampleMeans,2.0)))
::STMT
MATRIX:totalE,parsertemp31933,X2,parsertemp31935
t(%*%(t(totalE),==(%*%(X2,parsertemp31935),t(parsertemp31933))))
::STMT
LITERAL_FLOAT:16.0
16.0
::STMT
MATRIX:p,V
%*%(t(V),%*%(V,p))
::STMT
FLOAT:mu
LITERAL_FLOAT:0.999
-(0.999,mu)
::STMT
LITERAL_FLOAT:15.0
15.0
::STMT
FLOAT:int302,int418
LITERAL_FLOAT:1.0
+(+(+(+(int302,int418),1.0),1.0),1.0)
::STMT
MATRIX:subspace_idx,parsertemp73653
LITERAL_FLOAT:16.0,1.0
<(-(subspace_idx,*(parsertemp73653,16.0)),1.0)
::STMT
MATRIX:samples_vs_runs_map,centroids,X_samples
LITERAL_FLOAT:2.0
*(2.0,rowSums(*(X_samples,%*%(samples_vs_runs_map,centroids))))
::STMT
LITERAL_FLOAT:33.0
33.0
::STMT
LITERAL_FLOAT:32.0
32.0
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0
*(parsertemp43626,-1.0)
::STMT
MATRIX:rowSums_X_sq
FLOAT:D
LITERAL_FLOAT:0.5
/(*(0.5,sqrt(D)),max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:scale_X,shift_X
FLOAT:r
LITERAL_FLOAT:2.0
sum(^(+(*(scale_X,r),*(r,shift_X)),2.0))
::STMT
LITERAL_FLOAT:31.0
31.0
::STMT
LITERAL_FLOAT:30.0
30.0
::STMT
LITERAL_FLOAT:50.0
50.0
::STMT
MATRIX:parsertemp500607,parsertemp500610
FLOAT:tau
*(tau,sum(abs(*(parsertemp500607,parsertemp500610))))
::STMT
MATRIX:os,y,o
LITERAL_FLOAT:0.0
exp(*(-(0.0,y),+(o,os)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:2.0
/(^(linear_terms,2.0),2.0)
::STMT
MATRIX:p_LS
FLOAT:norm_r2_LS,parsertemp170552,lambda_LS
*(/(norm_r2_LS,*(cast.FLOAT(p_LS),+(parsertemp170552,lambda_LS))),+(*(cast.FLOAT(parsertemp170552),cast.FLOAT(p_LS)),*(lambda_LS,cast.FLOAT(p_LS))))
::STMT
MATRIX:b4,2362_2360_Y,W4
t(+(%*%(W4,t(2362_2360_Y)),b4))
::STMT
MATRIX:g_new,s,g_old
FLOAT:int686,int503
*(/(sum(^(g_new,int503)),sum(^(g_old,int686))),s)
::STMT
LITERAL_FLOAT:42.0
42.0
::STMT
MATRIX:means,variances
FLOAT:beta
t(-(means,*(beta,variances)))
::STMT
MATRIX:WM,CVars,CFreqs
FLOAT:float270,parsertemp31268,int751,W
LITERAL_FLOAT:1.0
/(sum(*(-(CFreqs,int751),CVars)),*(-(sum(WM),1.0),/(*(parsertemp31268,W),-(W,float270))))
::STMT
LITERAL_FLOAT:45.0
45.0
::STMT
MATRIX:parsertemp439367,mean,parsertemp439305,weight,parsertemp439306,avgMean
FLOAT:int994
LITERAL_FLOAT:1.0E-6
+(+(-(/(parsertemp439367,parsertemp439306),*(int994,avgMean)),/(*(mean,parsertemp439305),t(weight))),1.0E-6)
::STMT
MATRIX:U,X,parsertemp382851
FLOAT:int910
t(%*%(t(U),*(!=(X,int910),-(parsertemp382851,X))))
::STMT
MATRIX:prec_chol,X
LITERAL_FLOAT:2.0
%*%(rowSums(^(X,2.0)),t(^(prec_chol,2.0)))
::STMT
MATRIX:s,w
FLOAT:lambda,step_sz
*(lambda,+(w,*(step_sz,s)))
::STMT
LITERAL_FLOAT:1000.0
1000.0
::STMT
MATRIX:U,V,X
LITERAL_FLOAT:2.0
^(-(%*%(U,t(V)),X),2.0)
::STMT
MATRIX:S,parsertemp42207
LITERAL_FLOAT:1.0,2.0
+(-(parsertemp42207,/(t(S),2.0)),/(1.0,2.0))
::STMT
MATRIX:parsertemp10744,V,W,H,parsertemp10748
FLOAT:Eps
/(%*%(V,t(*(H,parsertemp10744))),+(%*%(W,%*%(H,parsertemp10748)),Eps))
::STMT
MATRIX:ss
LITERAL_FLOAT:0.050000000000000044,1.0,40.0
*(0.050000000000000044,-(/(40.0,ss),1.0))
::STMT
MATRIX:W,H,X,parsertemp410997
-(sum(%*%(W,H)),sum(*(X,parsertemp410997)))
::STMT
MATRIX:mean,parsertemp437225,X,parsertemp437631,weight,parsertemp437222
+(/(-(%*%(parsertemp437222,X),%*%(parsertemp437225,mean)),sum(weight)),diag(parsertemp437631))
::STMT
MATRIX:Q3,X,IQR
LITERAL_FLOAT:1.5
>(X,+(Q3,*(1.5,IQR)))
::STMT
MATRIX:Q1,X,IQR
LITERAL_FLOAT:1.5
<(X,-(Q1,*(1.5,IQR)))
::STMT
LITERAL_FLOAT:0.0
INT:int502,int777
t(rand(int502,int777,0.0,0.0))
::STMT
LITERAL_FLOAT:0.5000000001
0.5000000001
::STMT
MATRIX:C,Xm,parsertemp265701,XtZ
FLOAT:ZtZ_sum
colSums(%*%(%*%(Xm,%*%(C,parsertemp265701)),t(/(XtZ,ZtZ_sum))))
::STMT
LITERAL_FLOAT:3136.0
3136.0
::STMT
MATRIX:d,parsertemp410052,d_r_rev
*(d,t(colSums(*(parsertemp410052,d_r_rev))))
::STMT
MATRIX:subspace_variance,parsertemp72203
FLOAT:int677
LITERAL_FLOAT:1.0
%*%(t(subspace_variance),diag(/(1.0,<(parsertemp72203,int677))))
::STMT
FLOAT:parsertemp31330
LITERAL_FLOAT:1.0,10000.0
/(*(parsertemp31330,10000.0),-(10000.0,1.0))
::STMT
MATRIX:ubScores
FLOAT:minsc
LITERAL_FLOAT:0.0
&(>(ubScores,minsc),>(ubScores,0.0))
::STMT
MATRIX:parsertemp31105,parsertemp31107
LITERAL_FLOAT:7.996E9,1999.0,2.0
/(^(/(-(parsertemp31105,parsertemp31107),1999.0),2.0),7.996E9)
::STMT
LITERAL_FLOAT:254.0
254.0
::STMT
LITERAL_FLOAT:255.0
255.0
::STMT
LITERAL_FLOAT:300.0
300.0
::STMT
MATRIX:p_LS,tmp
FLOAT:norm_r2_LS
/(norm_r2_LS,*(cast.FLOAT(p_LS),cast.FLOAT(tmp)))
::STMT
MATRIX:valueCount,Y
/(t(valueCount),nrow(Y))
::STMT
MATRIX:selCols2
sum(!(selCols2))
::STMT
MATRIX:lambda,B,Grad
LITERAL_FLOAT:2.0
^(+(Grad,*(lambda,B)),2.0)
::STMT
MATRIX:R,dsep,dssm
/(+(R,dsep),-(R,dssm))
::STMT
MATRIX:2940_mask,2939_out
LITERAL_FLOAT:0.35
/(*(2939_out,2940_mask),0.35)
::STMT
MATRIX:r,alpha,Hd
LITERAL_FLOAT:2.0
^(-(r,*(cast.FLOAT(alpha),Hd)),2.0)
::STMT
MATRIX:Hdiff,betamax,beta
FLOAT:INF,int762,int239
!=(+(*(>=(Hdiff,int762),betamax),*(<(Hdiff,int239),beta)),INF)
::STMT
MATRIX:out2,parsertemp146940,184_dtemp,W2,W3
LITERAL_FLOAT:0.0
%*%(*(>(out2,0.0),%*%(-(184_dtemp,parsertemp146940),t(W3))),t(W2))
::STMT
MATRIX:W4_rand
LITERAL_FLOAT:0.0873148795050037
*(0.0873148795050037,W4_rand)
::STMT
MATRIX:w,out
LITERAL_FLOAT:1.0,50.0,0.5
*(1.0,+(*(0.5,cast.FLOAT(out)),*(50.0,cast.FLOAT(w))))
::STMT
MATRIX:parsertemp460644
LITERAL_FLOAT:0.0625
*(parsertemp460644,0.0625)
::STMT
MATRIX:r,w
FLOAT:tau
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(r,r))),*(tau,sum(abs(w))))
::STMT
LITERAL_FLOAT:500.0
500.0
::STMT
MATRIX:parsertemp31112,parsertemp31114
LITERAL_FLOAT:1499.0,2.0,3.37275E9
/(^(/(-(parsertemp31112,parsertemp31114),1499.0),2.0),3.37275E9)
::STMT
MATRIX:S,parsertemp42207
LITERAL_FLOAT:2.0,0.5
+(-(parsertemp42207,/(t(S),2.0)),0.5)
::STMT
MATRIX:out,parsertemp2798
FLOAT:int695,int909,int977,int948
sum(*(*(>(out,int948),-(int695,parsertemp2798)),*(>(out,int909),-(int977,parsertemp2798))))
::STMT
MATRIX:parsertemp389760,permut
LITERAL_FLOAT:1.0
%*%(t(permut),/(-(exp(parsertemp389760),1.0),+(exp(parsertemp389760),1.0)))
::STMT
MATRIX:parsertemp477715,Y,K
FLOAT:X
LITERAL_FLOAT:1.0
*(-(*(cast.FLOAT(K),-(X,X)),-(cast.FLOAT(Y),cast.FLOAT(Y))),-(1.0,/(cast.FLOAT(parsertemp477715),-(X,X))))
::STMT
MATRIX:parsertemp222703
LITERAL_FLOAT:0.0
==(t(parsertemp222703),0.0)
::STMT
MATRIX:d,parsertemp43998
FLOAT:int973
cast.FLOAT(%*%(t(d),+(d,*(int973,parsertemp43998))))
::STMT
MATRIX:q,r
FLOAT:p,a,norm_r2
%*%(t(+(r,*(a,q))),+(r,*(/(norm_r2,p),+(q,q))))
::STMT
MATRIX:m_err
cast.FLOAT(rowSums(colSums(m_err)))
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.000010000100001
sqrt(*(m2X,1.000010000100001))
::STMT
MATRIX:g_reg,p_CG
FLOAT:parsertemp170148,int960,q_CG,int952,z,parsertemp170170,pq_CG
*(+(+(*(parsertemp170170,pq_CG),*(z,q_CG)),sum(*(g_reg,p_CG))),/(-(*(z,int952),sqrt(parsertemp170148)),sum(^(p_CG,int960))))
::STMT
MATRIX:sts,d,parsertemp44021,parsertemp44023
FLOAT:delta2
sqrt(+(*(%*%(parsertemp44021,d),%*%(parsertemp44021,d)),*(%*%(parsertemp44023,d),-(delta2,sts))))
::STMT
FLOAT:offset_x
LITERAL_FLOAT:1.0
-(1.0,round(offset_x))
::STMT
MATRIX:parsertemp220853,parsertemp220854,betamax,Hneg,Hpos,beta
FLOAT:INF,logU
LITERAL_FLOAT:0.0
*(>=(-(+(parsertemp220853,parsertemp220854),logU),0.0),!=(+(*(Hpos,betamax),*(Hneg,beta)),INF))
::STMT
MATRIX:y_prob,ones_ctg
LITERAL_FLOAT:1.0
%*%(y_prob,-(1.0,diag(ones_ctg)))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
+(+(/(1.0,cast.FLOAT(A)),/(1.0,cast.FLOAT(A))),/(1.0,cast.FLOAT(A)))
::STMT
LITERAL_FLOAT:-0.001
-0.001
::STMT
LITERAL_FLOAT:0.001
0.001
::STMT
MATRIX:f,I
*(sum(I),max(f))
::STMT
MATRIX:parsertemp379668
FLOAT:int826
LITERAL_FLOAT:1.0,-1.0
*(sum(-(>=(parsertemp379668,int826),1.0)),-1.0)
::STMT
FLOAT:int713,int28
LITERAL_FLOAT:0.0
INT:parsertemp557199,int576
==(diag(rand(parsertemp557199,int576,int713,int28)),0.0)
::STMT
MATRIX:parsertemp149283,parsertemp149281
FLOAT:delta2,s2
LITERAL_FLOAT:2.0
sqrt(+(^(sum(parsertemp149281),2.0),*(sum(parsertemp149283),-(delta2,s2))))
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:parsertemp44015
cast.FLOAT(%*%(t(-(s,parsertemp44016)),-(s,*(parsertemp44015,d))))
::STMT
MATRIX:b,X
exp(%*%(X,b))
::STMT
FLOAT:parsertemp41020,m2,int106
LITERAL_FLOAT:2003.0
/(sqrt(*(/(int106,parsertemp41020),m2)),sqrt(2003.0))
::STMT
MATRIX:parsertemp497802,Y
LITERAL_FLOAT:0.0
*(Y,!=(parsertemp497802,0.0))
::STMT
MATRIX:p,lambda,scale_X,shift_X
FLOAT:q,norm_r2
*(/(norm_r2,sum(*(p,q))),+(+(*(scale_X,q),*(q,shift_X)),*(lambda,p)))
::STMT
FLOAT:sample_block_size
LITERAL_FLOAT:1.0,3.0
+(*(sample_block_size,3.0),1.0)
::STMT
MATRIX:2697_b,parsertemp459149,parsertemp459147
rowSums(exp(-(+(parsertemp459147,2697_b),parsertemp459149)))
::STMT
MATRIX:output_values,initial_prediction
FLOAT:learning_rate
+(initial_prediction,*(learning_rate,sum(output_values)))
::STMT
FLOAT:m2,float276,int815
LITERAL_FLOAT:2000.0
sqrt(*(/(2000.0,-(int815,float276)),m2))
::STMT
MATRIX:probs,out3,y_batch,184_scores,parsertemp146933
FLOAT:float988,int950,183_N,int776
LITERAL_FLOAT:1.0
*(*(*(/(int950,183_N),-(int776,y_batch)),/(1.0,+(probs,float988))),/(exp(-(out3,parsertemp146933)),rowSums(exp(184_scores))))
::STMT
MATRIX:parsertemp220853,parsertemp220854,beta
LITERAL_FLOAT:0.0,3.4011973816621555
*(>=(-(+(parsertemp220853,parsertemp220854),3.4011973816621555),0.0),beta)
::STMT
LITERAL_FLOAT:0.002
0.002
::STMT
MATRIX:parsertemp382680,parsertemp382677
FLOAT:parsertemp382674
LITERAL_FLOAT:0.5,5.0E-7
+(*(0.5,parsertemp382674),*(5.0E-7,+(sum(parsertemp382677),sum(parsertemp382680))))
::STMT
MATRIX:p_LS,X
FLOAT:lambda_LS
+(%*%(%*%(t(X),X),p_LS),*(lambda_LS,p_LS))
::STMT
LITERAL_FLOAT:8001.0
8001.0
::STMT
MATRIX:parsertemp396419,W4_rand
FLOAT:int485,int992
LITERAL_FLOAT:0.08681986202598489
%*%(*(0.08681986202598489,W4_rand),t(/(-(parsertemp396419,int992),+(parsertemp396419,int485))))
::STMT
MATRIX:Y_prob,parsertemp171377,Y,parsertemp171380
FLOAT:int900
LITERAL_FLOAT:3.141592653589793
/(*(rowSums(Y),-(*(Y,Y_prob),*(Y,Y_prob))),*(*(*(parsertemp171377,Y_prob),Y_prob),*(+(int900,parsertemp171380),3.141592653589793)))
::STMT
MATRIX:parsertemp220853,parsertemp220854
FLOAT:logU
LITERAL_FLOAT:0.0,2.0
*(2.0,>=(-(+(parsertemp220853,parsertemp220854),logU),0.0))
::STMT
FLOAT:parsertemp500918,offset_x
-(parsertemp500918,round(offset_x))
::STMT
FLOAT:var_power,link_power
LITERAL_FLOAT:1.0
/(-(1.0,var_power),link_power)
::STMT
FLOAT:index
LITERAL_FLOAT:1.0,2.0
+(+(*(index,2.0),2.0),1.0)
::STMT
MATRIX:Yhat_prime,H3_prime,E,W4
colSums(*(H3_prime,%*%(*(E,Yhat_prime),W4)))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:750.0
+(rowSums(classFeatureCounts),750.0)
::STMT
MATRIX:LT,parsertemp149320,parsertemp150469
rowSums(exp(-(LT,%*%(parsertemp149320,parsertemp150469))))
::STMT
MATRIX:X,parsertemp429911
FLOAT:int813,int704
LITERAL_FLOAT:300.0,2.0
-(t(colSums(^(X,int813))),*(300.0,^(/(parsertemp429911,int704),2.0)))
::STMT
MATRIX:y_hat,X_adapted
FLOAT:k,parsertemp176418
>(X_adapted,+(sqrt(parsertemp176418),*(k,y_hat)))
::STMT
MATRIX:y_hat,X_adapted
FLOAT:parsertemp176421,k
<(X_adapted,-(sqrt(parsertemp176421),*(k,y_hat)))
::STMT
FLOAT:int630,i_iter,interval,i_process_item
LITERAL_FLOAT:1.0
-(i_process_item,+(*(-(i_iter,int630),interval),1.0))
::STMT
MATRIX:termination_bitmap,final_wcss_successful
LITERAL_FLOAT:1.0,10.0
*(+(*(10.0,max(final_wcss_successful)),10.0),-(1.0,termination_bitmap))
::STMT
MATRIX:sig
FLOAT:q,mu
LITERAL_FLOAT:4.0
/(-(q,*(4.0,*(mu,mu))),*(4.0,*(cast.FLOAT(sig),cast.FLOAT(sig))))
::STMT
MATRIX:negSampleMeans,negSamples
FLOAT:int169,int697
LITERAL_FLOAT:1499.0,1500.0
/(-(colSums(^(negSamples,int169)),*(1500.0,^(negSampleMeans,int697))),1499.0)
::STMT
MATRIX:X
LITERAL_FLOAT:300.0,2.0
^(/(t(colSums(X)),300.0),2.0)
::STMT
FLOAT:log_l_change
LITERAL_FLOAT:2.0
*(2.0,abs(log_l_change))
::STMT
MATRIX:parsertemp132003,parsertemp132023,leftIdx
%*%(parsertemp132023,%*%(t(parsertemp132003),leftIdx))
::STMT
MATRIX:d,X,logisticD
FLOAT:C
*(C,%*%(t(X),*(logisticD,%*%(X,d))))
::STMT
MATRIX:parsertemp222700,X,parsertemp222696,parsertemp222693
LITERAL_FLOAT:-2.0
<=(+(*(-2.0,%*%(X,parsertemp222693)),t(rowSums(parsertemp222696))),parsertemp222700)
::STMT
MATRIX:X
FLOAT:int617
LITERAL_FLOAT:0.0
!=(t(colSums(!=(X,int617))),0.0)
::STMT
MATRIX:ss
FLOAT:alpha
LITERAL_FLOAT:1.0,20.0
*(-(1.0,alpha),-(/(20.0,ss),1.0))
::STMT
MATRIX:means,Y
colSums(-(Y,means))
::STMT
FLOAT:link_power
LITERAL_FLOAT:-2.0
*(-2.0,link_power)
::STMT
FLOAT:pow_two
LITERAL_FLOAT:2.0
*(2.0,pow_two)
::STMT
MATRIX:p_CG
FLOAT:parsertemp285739,parsertemp285737,pp_CG
LITERAL_FLOAT:-1.0
/(-(*(cast.FLOAT(p_CG),-1.0),sqrt(-(parsertemp285737,parsertemp285739))),pp_CG)
::STMT
MATRIX:p,q,V,parsertemp1939
FLOAT:norm_r2,eps
*(/(norm_r2,cast.FLOAT(%*%(parsertemp1939,q))),+(%*%(t(V),%*%(V,p)),*(eps,p)))
::STMT
MATRIX:linear_terms
FLOAT:link_power,int370
LITERAL_FLOAT:0.0,1.0
-(^(+(linear_terms,==(linear_terms,int370)),/(1.0,link_power)),==(linear_terms,0.0))
::STMT
MATRIX:w,X,y
LITERAL_FLOAT:-1.0
exp(*(*(y,-1.0),%*%(X,w)))
::STMT
LITERAL_FLOAT:2.0,1500.0
^(1500.0,2.0)
::STMT
MATRIX:parsertemp132494,rightHist,outBucket
%*%(==(outBucket,t(parsertemp132494)),rightHist)
::STMT
MATRIX:parsertemp174552
LITERAL_FLOAT:0.0
abs(==(parsertemp174552,0.0))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:1.0,2.0,0.5
-(1.0,*(2.0,>(y_corr,0.5)))
::STMT
FLOAT:ytest,yhat,int56,parsertemp454076,int163
LITERAL_FLOAT:1.0,2.0
-(1.0,/(^(-(ytest,yhat),2.0),-(^(ytest,int56),*(int163,parsertemp454076))))
::STMT
MATRIX:Q1,IQR
FLOAT:k
-(Q1,*(k,IQR))
::STMT
MATRIX:xs
FLOAT:256_x
LITERAL_FLOAT:1.0,1000.0
+(-(1000.0,sum(>=(xs,256_x))),1.0)
::STMT
MATRIX:w,parsertemp2794
LITERAL_FLOAT:2.0,0.5
*(0.5,sum(^(+(w,parsertemp2794),2.0)))
::STMT
MATRIX:linear_terms,Y
FLOAT:int668
LITERAL_FLOAT:0.0,1.0
+(*(linear_terms,-(1.0,==(Y,int668))),==(Y,0.0))
::STMT
MATRIX:parsertemp410080,d_r_rev,parsertemp410079,parsertemp410090
LITERAL_FLOAT:-1.0
+(*(cast.FLOAT(%*%(parsertemp410079,parsertemp410080)),-1.0),sum(*(d_r_rev,parsertemp410090)))
::STMT
MATRIX:parsertemp132003,parsertemp132023,leftIdx
LITERAL_FLOAT:0.0
>(%*%(parsertemp132023,%*%(t(parsertemp132003),leftIdx)),0.0)
::STMT
MATRIX:parsertemp410987,parsertemp410979,W,parsertemp410981
/(*(W,parsertemp410987),t(rowSums(/(parsertemp410979,parsertemp410981))))
::STMT
LITERAL_FLOAT:1.0,4.0
+(4.0,1.0)
::STMT
MATRIX:D,ZERODIAG,parsertemp220891
FLOAT:int374,int42
LITERAL_FLOAT:1.0
/(*(/(1.0,+(D,int42)),ZERODIAG),sum(*(/(int374,parsertemp220891),ZERODIAG)))
::STMT
MATRIX:184_probs,183_dpred,parsertemp146939,outr2
LITERAL_FLOAT:2.0
^(%*%(t(outr2),-(*(183_dpred,184_probs),*(184_probs,parsertemp146939))),2.0)
::STMT
MATRIX:q,r
FLOAT:alpha
sum(*(+(r,*(alpha,q)),+(r,*(alpha,q))))
::STMT
MATRIX:vb1,parsertemp460691
FLOAT:lr,mu
-(*(mu,vb1),*(lr,rowSums(parsertemp460691)))
::STMT
FLOAT:obj,obj_new,gs
-(-(obj_new,obj),gs)
::STMT
MATRIX:parsertemp76118
LITERAL_FLOAT:0.5,4460.0
+(0.5,/(parsertemp76118,4460.0))
::STMT
MATRIX:r,parsertemp44050
sqrt(sum(*(-(r,parsertemp44050),-(r,parsertemp44050))))
::STMT
FLOAT:padh,Hin
LITERAL_FLOAT:2.0
+(Hin,*(2.0,padh))
::STMT
FLOAT:numRows
LITERAL_FLOAT:0.05
*(0.05,numRows)
::STMT
MATRIX:grad
LITERAL_FLOAT:-1.0
*(*(grad,-1.0),*(grad,-1.0))
::STMT
MATRIX:xs
LITERAL_FLOAT:10.0,4.5
-(10.0,sum(>=(xs,4.5)))
::STMT
MATRIX:parsertemp555766,parsertemp555762,target
LITERAL_FLOAT:-1.0,1.0
-(*(*(target,-1.0),parsertemp555762),*(-(1.0,target),parsertemp555766))
::STMT
FLOAT:191_beta2,191_t,191_lr
LITERAL_FLOAT:1.0
*(191_lr,sqrt(-(1.0,^(191_beta2,191_t))))
::STMT
MATRIX:w,X,y
sum(*(-(%*%(X,w),y),-(%*%(X,w),y)))
::STMT
LITERAL_FLOAT:0.08720414403938946
0.08720414403938946
::STMT
MATRIX:simplex
-(rowSums(simplex),simplex)
::STMT
MATRIX:scale_lambda
LITERAL_FLOAT:1.0E-7
diag(*(scale_lambda,1.0E-7))
::STMT
MATRIX:g
FLOAT:lambda
LITERAL_FLOAT:2.0
sqrt(sum(^(+(g,lambda),2.0)))
::STMT
MATRIX:X,y
FLOAT:int442
LITERAL_FLOAT:0.0
INT:m,int706
-(%*%(X,rand(m,int706,0.0,int442)),y)
::STMT
MATRIX:parsertemp77570
LITERAL_FLOAT:0.5,2358.0
+(0.5,/(parsertemp77570,2358.0))
::STMT
MATRIX:p,q,r,lambda
FLOAT:norm_r2
+(r,*(/(norm_r2,cast.FLOAT(p)),+(q,*(lambda,p))))
::STMT
MATRIX:feature
LITERAL_FLOAT:1.0
-(1.0,min(feature))
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
LITERAL_FLOAT:2.0
*(^(n_risk_stratum,2.0),*(n_risk,n_event_stratum))
::STMT
MATRIX:Y
FLOAT:check_max,check_min
LITERAL_FLOAT:2.0
*(/(2.0,-(check_max,check_min)),Y)
::STMT
MATRIX:U,X,parsertemp382669
LITERAL_FLOAT:0.0,2.0
*(!=(X,0.0),^(-(%*%(U,parsertemp382669),X),2.0))
::STMT
FLOAT:idx
LITERAL_FLOAT:256.0
-(256.0,idx)
::STMT
MATRIX:paramLens,parsertemp387457
rev(/(parsertemp387457,rev(paramLens)))
::STMT
MATRIX:p_CG,z
FLOAT:trust_delta_sq
-(*(cast.FLOAT(%*%(p_CG,z)),cast.FLOAT(%*%(p_CG,z))),*(cast.FLOAT(%*%(p_CG,p_CG)),-(cast.FLOAT(z),trust_delta_sq)))
::STMT
MATRIX:X,H,parsertemp18133
LITERAL_FLOAT:0.0,2.0
*(>(%*%(X,t(H)),0.0),t(^(2.0,parsertemp18133)))
::STMT
MATRIX:parsertemp429918,parsertemp429916,parsertemp429914
FLOAT:int453,int941
LITERAL_FLOAT:0.0,1.0,299.0
*(/(-(t(parsertemp429914),*(int453,parsertemp429916)),299.0),-(1.0,<=(/(parsertemp429918,int941),0.0)))
::STMT
FLOAT:idx
LITERAL_FLOAT:253.0
-(253.0,idx)
::STMT
MATRIX:parsertemp175075,parsertemp175079,X,R1
-(R1,/(exp(-(X,parsertemp175075)),rowSums(exp(parsertemp175079))))
::STMT
FLOAT:522_strideh,522_padh,522_Hin,int470
LITERAL_FLOAT:1.0
/(-(+(522_Hin,*(int470,522_padh)),1.0),522_strideh)
::STMT
MATRIX:WM
FLOAT:parsertemp31268
LITERAL_FLOAT:1.0
/(*(parsertemp31268,sum(WM)),-(sum(WM),1.0))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:n_components,parsertemp506195
/(rand(parsertemp506195,n_components,0.0,1.0),rowSums(rand(parsertemp506195,n_components,0.0,1.0)))
::STMT
FLOAT:covXY
covXY
::STMT
MATRIX:is_row_in_samples,parsertemp76114
LITERAL_FLOAT:13381.0
-(13381.0,*(is_row_in_samples,parsertemp76114))
::STMT
MATRIX:output,output1
LITERAL_FLOAT:0.1
<(abs(-(output,output1)),0.1)
::STMT
MATRIX:prec,X,mu
LITERAL_FLOAT:2.0
rowSums(^(-(%*%(X,prec),%*%(mu,prec)),2.0))
::STMT
LITERAL_FLOAT:1.0,100.0
-(100.0,1.0)
::STMT
MATRIX:parsertemp222310
FLOAT:parsertemp222313
LITERAL_FLOAT:0.5
round(+(/(parsertemp222310,parsertemp222313),0.5))
::STMT
MATRIX:resp,X,parsertemp437188
FLOAT:float168
LITERAL_FLOAT:2.0
^(/(%*%(t(resp),X),t(+(parsertemp437188,float168))),2.0)
::STMT
MATRIX:y_residual,ytest
LITERAL_FLOAT:2.0
*($1:nrow(ytest),^(/(sum(y_residual),$1),2.0))
::STMT
LITERAL_FLOAT:5.0E-4
5.0E-4
::STMT
MATRIX:316_unnorm_probs,parsertemp175059
LITERAL_FLOAT:1.0E-6
<(abs(-(/(316_unnorm_probs,parsertemp175059),/(316_unnorm_probs,parsertemp175059))),1.0E-6)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
t(-(0.0,t(colSums(X))))
::STMT
MATRIX:y_train,prediction
FLOAT:float477
/(sum(==(y_train,>(prediction,float477))),nrow(y_train))
::STMT
MATRIX:z
FLOAT:trust_delta_sq
LITERAL_FLOAT:2.0
-(^(cast.FLOAT(z),2.0),trust_delta_sq)
::STMT
MATRIX:e_r_rev_agg,d_r_rev,X_agg
t(colSums(/(*(X_agg,d_r_rev),e_r_rev_agg)))
::STMT
MATRIX:parsertemp222327,is_row_in_samples
FLOAT:sample_block_size,num_samples
LITERAL_FLOAT:1.0
-(+(*(sample_block_size,num_samples),1.0),*(is_row_in_samples,parsertemp222327))
::STMT
FLOAT:m2Y,sigmaX
LITERAL_FLOAT:1.0002795638803466
*(sigmaX,sqrt(*(m2Y,1.0002795638803466)))
::STMT
MATRIX:X,permut
FLOAT:n
/(colSums(%*%(permut,X)),n)
::STMT
LITERAL_FLOAT:1.0E-10
1.0E-10
::STMT
MATRIX:output_values
LITERAL_FLOAT:0.3
*(0.3,sum(output_values))
::STMT
LITERAL_FLOAT:1.0,-1.0
*(1.0,-1.0)
::STMT
MATRIX:Q,V,X,P_1K
%*%(t(X),-(*(P_1K,%*%(X,V)),*(P_1K,rowSums(Q))))
::STMT
MATRIX:prec
diag(t(prec))
::STMT
LITERAL_FLOAT:1.0,5.0
+(5.0,1.0)
::STMT
LITERAL_FLOAT:0.0
cast.MATRIX(0.0)
::STMT
MATRIX:parsertemp382680,col_nonzeros,parsertemp382677,row_nonzeros
FLOAT:reg
LITERAL_FLOAT:0.5
*(*(0.5,reg),+(sum(*(parsertemp382677,row_nonzeros)),sum(*(parsertemp382680,col_nonzeros))))
::STMT
MATRIX:d_r,parsertemp409781
%*%(t(rev(d_r)),parsertemp409781)
::STMT
MATRIX:B,X,y
FLOAT:intercept
-(y,+(%*%(X,B),intercept))
::STMT
MATRIX:A,scale_X,shift_X
t(+(%*%(diag(scale_X),A),%*%(shift_X,A)))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,64.0
+(-(64.0,idx),1.0)
::STMT
MATRIX:g_new,parsertemp2824,s,parsertemp2826
+(*(/(sum(parsertemp2824),sum(parsertemp2826)),s),g_new)
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:0.0,1.0
^(+(linear_terms,==(linear_terms,0.0)),/(1.0,link_power))
::STMT
MATRIX:parsertemp171600,g_Y,lambda,scale_X,shift_X,gXY,beta
+(+(%*%(diag(scale_X),%*%(parsertemp171600,g_Y)),%*%(shift_X,gXY)),*(lambda,beta))
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:delta2
*(%*%(t(d),d),-(delta2,%*%(t(s),-(s,parsertemp44016))))
::STMT
LITERAL_FLOAT:0.0
INT:int1,int961
exp(rand(int1,int961,0.0,0.0))
::STMT
MATRIX:V,X,P_1K
*(P_1K,rowSums(*(P_1K,%*%(X,V))))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.6546536707079771
*(0.6546536707079771,W2_rand)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:2.0
*(linear_terms,-(2.0,var_power))
::STMT
MATRIX:X2
LITERAL_FLOAT:4.0
<(t(colSums(X2)),4.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0
-(+(i,1.0),1.0)
::STMT
FLOAT:approx_sample_size
LITERAL_FLOAT:10.0
+(approx_sample_size,round(*(10.0,sqrt(approx_sample_size))))
::STMT
MATRIX:B
LITERAL_FLOAT:4.0
-(4.0,nrow(B))
::STMT
FLOAT:dist
t(cast.MATRIX(dist))
::STMT
MATRIX:num_std
t(sqrt(num_std))
::STMT
MATRIX:var_X_cols,tmp
FLOAT:int300,int338,int958,N
LITERAL_FLOAT:0.0,1.0
+(*(/(tmp,-(N,int338)),-(1.0,<=(var_X_cols,int958))),<=(/(tmp,-(N,int300)),0.0))
::STMT
LITERAL_FLOAT:1.0E-12
1.0E-12
::STMT
FLOAT:float824,int237,float466,int581
LITERAL_FLOAT:1.0,3.0,6.0,2000.0
/(*(*(6.0,2000.0),-(2000.0,1.0)),*(*(-(int237,float466),+(int581,float824)),+(2000.0,3.0)))
::STMT
MATRIX:is_LT_infinite,Y_prob
LITERAL_FLOAT:1.0
+(*(Y_prob,-(1.0,rowSums(is_LT_infinite))),is_LT_infinite)
::STMT
MATRIX:means,Y_counts,Y,parsertemp560602
-(-(Y,means),%*%(Y_counts,/(colSums(parsertemp560602),sum(Y_counts))))
::STMT
MATRIX:parsertemp382947
FLOAT:reg,parsertemp382956,loss_init,parsertemp382953,float925
LITERAL_FLOAT:0.5
-(loss_init,+(*(0.5,sum(parsertemp382947)),*(*(float925,reg),+(parsertemp382953,parsertemp382956))))
::STMT
FLOAT:index
LITERAL_FLOAT:2.0,4.0
+(*(index,4.0),2.0)
::STMT
MATRIX:R
FLOAT:i8
LITERAL_FLOAT:24.0
-(nrow(R),*(24.0,i8))
::STMT
MATRIX:parsertemp436114
FLOAT:int359,int471
INT:2663_2662_n_col,int558
*(cast.FLOAT(parsertemp436114),rand(int558,2663_2662_n_col,int359,int471))
::STMT
FLOAT:parsertemp83
abs(-(cast.MATRIX(parsertemp83),parsertemp83))
::STMT
MATRIX:parsertemp31112,parsertemp31114
FLOAT:int597,int905
LITERAL_FLOAT:1.0,2.0,1500.0
/(^(/(-(parsertemp31112,parsertemp31114),-(int905,int597)),2.0),*(^(1500.0,2.0),-(1500.0,1.0)))
::STMT
MATRIX:Ileft,Iright
FLOAT:min_leaf
&(>=(rowSums(Ileft),min_leaf),>=(rowSums(Iright),min_leaf))
::STMT
MATRIX:codebook
FLOAT:j
LITERAL_FLOAT:1.0
*(-(j,1.0),ncol(codebook))
::STMT
MATRIX:parsertemp429916,parsertemp429914
FLOAT:int441
LITERAL_FLOAT:0.0,299.0
<=(/(-(t(parsertemp429914),*(int441,parsertemp429916)),299.0),0.0)
::STMT
MATRIX:subspace_idx,parsertemp107049
LITERAL_FLOAT:1.0,7.0
<(-(subspace_idx,*(parsertemp107049,7.0)),1.0)
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.08146881698903526
*(0.08146881698903526,W1_rand)
::STMT
MATRIX:R
LITERAL_FLOAT:0.0
cast.FLOAT(==(R,0.0))
::STMT
MATRIX:parsertemp10743,V,parsertemp10742,H,parsertemp10739,parsertemp10738
FLOAT:Eps
%*%(*(H,/(%*%(parsertemp10738,V),+(parsertemp10742,Eps))),t(*(H,/(parsertemp10739,parsertemp10743))))
::STMT
MATRIX:P,Y,dP
sum(&(<=(P,dP),!(Y)))
::STMT
MATRIX:distances,ksmall
FLOAT:int819,int751
LITERAL_FLOAT:0.0
INT:parsertemp557199,int480
*(<=(distances,ksmall),==(diag(rand(parsertemp557199,int480,int819,int751)),0.0))
::STMT
FLOAT:2690_Hin,parsertemp459058
LITERAL_FLOAT:1.0,2.0
+(/(-(+(2690_Hin,parsertemp459058),2.0),2.0),1.0)
::STMT
FLOAT:252_Y,float605,int241,252_X,252_K,float60
LITERAL_FLOAT:1.0
+(*(-(*(252_K,252_X),-(252_Y,252_Y)),-(1.0,/(float605,252_X))),*(+(*(int241,252_X),-(252_Y,252_Y)),/(-(float60,252_X),-(252_X,252_X))))
::STMT
MATRIX:Y,parsertemp2798,Xw
FLOAT:int496,int812
LITERAL_FLOAT:0.0,1.0
*(*(>(-(int496,parsertemp2798),0.0),-(1.0,*(Y,Xw))),*(>(-(int812,parsertemp2798),0.0),-(1.0,*(Y,Xw))))
::STMT
MATRIX:2364_2359_Y_prime,W2,2364_2358_Y,parsertemp389612
FLOAT:int492
LITERAL_FLOAT:1.0
t(*(-(1.0,^(2364_2358_Y,int492)),%*%(*(2364_2359_Y_prime,parsertemp389612),W2)))
::STMT
MATRIX:s
FLOAT:n
LITERAL_FLOAT:1.0
-(*(/(1.0,s),n),1.0)
::STMT
MATRIX:y_corr
FLOAT:int922
LITERAL_FLOAT:1.0
*(*(y_corr,-(1.0,<=(y_corr,int922))),-(1.0,>=(y_corr,1.0)))
::STMT
FLOAT:429_C
LITERAL_FLOAT:1.0
*(*(429_C,1.0),1.0)
::STMT
MATRIX:parsertemp220853,parsertemp220854,beta
FLOAT:logU
LITERAL_FLOAT:0.0
*(>=(-(+(parsertemp220853,parsertemp220854),logU),0.0),beta)
::STMT
MATRIX:Y,2212_tp
/(2212_tp,sum(Y))
::STMT
FLOAT:int489,lratio_t,N
LITERAL_FLOAT:1.0
-(1.0,exp(/(*(lratio_t,int489),N)))
::STMT
MATRIX:parsertemp116096,X2
LITERAL_FLOAT:0.0,32.0
|(<(t(colSums(X2)),32.0),==(t(%*%(parsertemp116096,X2)),0.0))
::STMT
MATRIX:H2_prime,2365_delta3,H1_prime,W2,W3
*(H1_prime,%*%(*(H2_prime,%*%(2365_delta3,W3)),W2))
::STMT
MATRIX:parsertemp44107,parsertemp44109,wnew
FLOAT:C
*(+(wnew,*(C,%*%(parsertemp44107,parsertemp44109))),+(wnew,*(C,%*%(parsertemp44107,parsertemp44109))))
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0,0.5
*(-(0.5,Y),==(rowSums(Y),0.0))
::STMT
MATRIX:s,d,parsertemp44021
FLOAT:delta2
*(cast.FLOAT(%*%(t(d),d)),-(delta2,cast.FLOAT(%*%(parsertemp44021,s))))
::STMT
LITERAL_FLOAT:1.0,100.0,0.8
+(*(100.0,0.8),1.0)
::STMT
MATRIX:tmp,X,parsertemp393475,parsertemp393466
LITERAL_FLOAT:1.0E-17
t(/(-(%*%(tmp,X),parsertemp393466),+(sqrt(parsertemp393475),1.0E-17)))
::STMT
MATRIX:parsertemp129018
LITERAL_FLOAT:1.0,2.0
+(*(max(parsertemp129018),2.0),1.0)
::STMT
MATRIX:surv,se_surv,parsertemp538736
FLOAT:parsertemp538734
^(surv,exp(/(*(parsertemp538734,se_surv),parsertemp538736)))
::STMT
FLOAT:i,k
LITERAL_FLOAT:4.0
+(+(i,k),4.0)
::STMT
MATRIX:p,V
FLOAT:eps
+(%*%(t(V),%*%(V,p)),*(eps,p))
::STMT
MATRIX:parsertemp552345,tab,catTotal
LITERAL_FLOAT:-1.0
sum(*(*(/(tab,catTotal),-1.0),parsertemp552345))
::STMT
MATRIX:X2
LITERAL_FLOAT:32.0
<(t(colSums(X2)),32.0)
::STMT
MATRIX:m_iter_err_sum,m_err
t(+(colSums(m_err),m_iter_err_sum))
::STMT
MATRIX:r,d,parsertemp43998
FLOAT:int723
LITERAL_FLOAT:2.0
/(sum(^(r,2.0)),%*%(t(d),+(d,*(int723,parsertemp43998))))
::STMT
MATRIX:parsertemp122063,parsertemp122058
FLOAT:eAvg,alpha,n
LITERAL_FLOAT:1.0
-(*(alpha,-(/(parsertemp122058,eAvg),1.0)),*(-(1.0,alpha),-(*(parsertemp122063,n),1.0)))
::STMT
MATRIX:m_err_mean
LITERAL_FLOAT:-0.001
-(-0.001,cast.FLOAT(m_err_mean))
::STMT
MATRIX:X
LITERAL_FLOAT:300.0,0.0
-(0.0,/(t(colSums(X)),300.0))
::STMT
MATRIX:WM
FLOAT:m2X,W,float201
sqrt(*(m2X,/(sum(WM),-(W,float201))))
::STMT
LITERAL_FLOAT:1.0,3.0
+(3.0,1.0)
::STMT
MATRIX:V,W,parsertemp10741,H
FLOAT:Eps
*(H,/(%*%(t(W),V),+(%*%(parsertemp10741,H),Eps)))
::STMT
MATRIX:parsertemp410118,g0_1,g_2
cast.FLOAT(%*%(t(+(g0_1,g_2)),+(g0_1,t(parsertemp410118))))
::STMT
MATRIX:E,F,parsertemp12849
FLOAT:q,int210
sqrt(/(sum(/(parsertemp12849,E)),*(sum(F),-(q,int210))))
::STMT
MATRIX:log_prob,X
LITERAL_FLOAT:1.8378770664093453
+(*(ncol(X),1.8378770664093453),log_prob)
::STMT
MATRIX:X,parsertemp16893,parsertemp16892
/(%*%(X,t(X)),%*%(sqrt(rowSums(parsertemp16892)),t(sqrt(parsertemp16893))))
::STMT
MATRIX:s,w
%*%(t(+(w,s)),+(w,s))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0,200.0
-(0.0,/(t(colSums(X)),200.0))
::STMT
MATRIX:parsertemp443530,mean,parsertemp443532,X,weight
FLOAT:float416
-(%*%(t(X),X),%*%(*(t(mean),+(parsertemp443530,float416)),/(%*%(parsertemp443532,X),t(weight))))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:2.0
/(^(linear_terms,2.0),-(2.0,var_power))
::STMT
MATRIX:parsertemp170101
FLOAT:parsertemp170114,r_CG,g_reg,z,277_sq_root_d,parsertemp170093,pp_CG
LITERAL_FLOAT:0.5
+(*(0.5,*(cast.FLOAT(z),+(r_CG,g_reg))),*(+(+(parsertemp170114,z),sum(parsertemp170101)),/(-(parsertemp170093,277_sq_root_d),pp_CG)))
::STMT
MATRIX:Y
FLOAT:maxv,minv
+(sum(==(Y,minv)),sum(==(Y,maxv)))
::STMT
FLOAT:num_records
LITERAL_FLOAT:960.0
/(960.0,num_records)
::STMT
MATRIX:r,parsertemp44050
FLOAT:norm_r2
/(sum(*(-(r,parsertemp44050),-(r,parsertemp44050))),norm_r2)
::STMT
MATRIX:X,permut
colSums(%*%(permut,X))
::STMT
FLOAT:batch_size,parsertemp145942
LITERAL_FLOAT:1.0
-(+(+(parsertemp145942,1.0),batch_size),1.0)
::STMT
MATRIX:lambda,V,shift_X,parsertemp274512,HV
*(V,+(+(%*%(parsertemp274512,HV),%*%(shift_X,HV)),*(lambda,V)))
::STMT
MATRIX:I,y2
LITERAL_FLOAT:2.0
^(/(%*%(I,y2),sum(I)),2.0)
::STMT
MATRIX:H3_prime,delta4,W4
t(colSums(*(H3_prime,%*%(delta4,W4))))
::STMT
MATRIX:tmp,parsertemp260786,X,Y,parsertemp260785,out
%*%(t(-(%*%(parsertemp260785,parsertemp260786),tmp)),-(%*%(t(X),*(out,Y)),tmp))
::STMT
MATRIX:Y,missing_mask_Y
LITERAL_FLOAT:1.0
*(missing_mask_Y,+(max(Y),1.0))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0,0.231641888
+(1.0,*(abs(finite_linear_terms),0.231641888))
::STMT
MATRIX:ytest,yhat
FLOAT:int780,mean_y_test
LITERAL_FLOAT:1.0,2.0
/(^(-(cast.FLOAT(ytest),cast.FLOAT(yhat)),2.0),-(^(cast.FLOAT(ytest),2.0),*(1.0,^(mean_y_test,int780))))
::STMT
MATRIX:z
FLOAT:trust_delta_sq,pp_CG
LITERAL_FLOAT:2.0
*(pp_CG,-(^(cast.FLOAT(z),2.0),trust_delta_sq))
::STMT
MATRIX:parsertemp147188
FLOAT:D
LITERAL_FLOAT:2.0
*(parsertemp147188,sqrt(/(2.0,D)))
::STMT
MATRIX:X
FLOAT:int111
LITERAL_FLOAT:1.0E-6
/(*(1.0E-6,sum(^(X,int111))),ncol(X))
::STMT
LITERAL_FLOAT:1.4142135623730951
1.4142135623730951
::STMT
MATRIX:sq_sums,mu
FLOAT:window_size
-(/(sq_sums,window_size),*(mu,mu))
::STMT
MATRIX:663_img
t(rev(t(663_img)))
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.08692913816996169
*(0.08692913816996169,W1_rand)
::STMT
MATRIX:classes
LITERAL_FLOAT:1.0,0.7
*(cast.FLOAT(classes),-(1.0,0.7))
::STMT
MATRIX:parsertemp2832
sum(==(round(parsertemp2832),max(round(parsertemp2832))))
::STMT
FLOAT:i
LITERAL_FLOAT:18.0
+(18.0,i)
::STMT
MATRIX:V
FLOAT:std_dev,int435,mu
*(<(V,-(mu,*(int435,std_dev))),V)
::STMT
MATRIX:V
FLOAT:std_dev,mu,int91
*(>(V,+(mu,*(int91,std_dev))),V)
::STMT
MATRIX:d,X,logisticD
%*%(t(X),*(logisticD,%*%(X,d)))
::STMT
MATRIX:parsertemp477917,b
FLOAT:int929
LITERAL_FLOAT:2.0
sum(^(%*%(*(parsertemp477917,int929),b),2.0))
::STMT
MATRIX:subspace_idx,parsertemp72201
LITERAL_FLOAT:1.0,8.0
<(-(subspace_idx,*(parsertemp72201,8.0)),1.0)
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0
/(Y,+(rowSums(Y),==(rowSums(Y),0.0)))
::STMT
MATRIX:w,X,y
FLOAT:int253
LITERAL_FLOAT:1.0
+(1.0,exp(*(*(y,int253),%*%(X,w))))
::STMT
MATRIX:r_LS
FLOAT:norm_r2_LS,p_LS,parsertemp170552,lambda_LS
LITERAL_FLOAT:0.0
-(0.0,+(r_LS,*(/(norm_r2_LS,p_LS),+(parsertemp170552,lambda_LS))))
::STMT
MATRIX:parsertemp552530,Y
LITERAL_FLOAT:0.0
INT:parsertemp552529,idx
==(+(rand(parsertemp552529,idx,0.0,0.0),t(parsertemp552530)),Y)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:1.0,2.0
-(1.0,*(2.0,y_corr))
::STMT
MATRIX:linear_terms
FLOAT:int594
LITERAL_FLOAT:1.0,2.0
+(1.0,-(*(2.0,>=(linear_terms,int594)),1.0))
::STMT
MATRIX:shift_X,w,parsertemp170066,X
*(cast.FLOAT(shift_X),cast.FLOAT(%*%(t(X),*(w,parsertemp170066))))
::STMT
MATRIX:parsertemp437548,pred,parsertemp437666
==(*(parsertemp437666,t(parsertemp437548)),pred)
::STMT
MATRIX:means,parsertemp389215
FLOAT:int11
LITERAL_FLOAT:1057.0,1058.0
/(*(-(parsertemp389215,^(means,int11)),1058.0),1057.0)
::STMT
MATRIX:U,V_sum
rowSums(/(*(U,U),sum(V_sum)))
::STMT
FLOAT:padh,strideh,int428,Hin,Hf
/(-(+(Hin,*(int428,padh)),Hf),strideh)
::STMT
MATRIX:parsertemp31111,parsertemp31113
FLOAT:int876
LITERAL_FLOAT:1499.0,2.0
^(/(-(colSums(parsertemp31111),*(int876,parsertemp31113)),1499.0),2.0)
::STMT
MATRIX:parsertemp16859,X
FLOAT:int570
LITERAL_FLOAT:1.0E-6
+(sqrt(rowSums(^(X,int570))),*(<(sqrt(parsertemp16859),1.0E-6),1.0E-6))
::STMT
FLOAT:new_log_l,log_l,neg_log_l_change_predicted
LITERAL_FLOAT:-1.0
/(+(*(new_log_l,-1.0),log_l),neg_log_l_change_predicted)
::STMT
FLOAT:i2
LITERAL_FLOAT:24.0,1.0
+(*(24.0,i2),1.0)
::STMT
MATRIX:grad
sqrt(sum(*(grad,grad)))
::STMT
FLOAT:res_eee
LITERAL_FLOAT:2.0,0.3
round(-(/(res_eee,2.0),0.3))
::STMT
MATRIX:parsertemp285531,z,parsertemp285533
FLOAT:pp,sq_root_d,zq,parsertemp285544,parsertemp285526
LITERAL_FLOAT:0.5
+(*(0.5,sum(*(z,parsertemp285533))),*(+(+(parsertemp285544,zq),sum(parsertemp285531)),/(-(parsertemp285526,sq_root_d),pp)))
::STMT
MATRIX:parsertemp382919,parsertemp382916,S,col_nonzeros
FLOAT:reg
*(S,+(t(%*%(parsertemp382916,parsertemp382919)),*(*(reg,S),col_nonzeros)))
::STMT
MATRIX:vectors,pq_result
LITERAL_FLOAT:2.0,480.0
/(sum(^(-(vectors,pq_result),2.0)),480.0)
::STMT
MATRIX:X,ScaleFactor
FLOAT:N
t(/(colSums(/(X,ScaleFactor)),N))
::STMT
MATRIX:border,parsertemp386448,parsertemp386459,withinEps
LITERAL_FLOAT:0.0
t(*(>(*(parsertemp386448,withinEps),0.0),==(-(border,parsertemp386459),0.0)))
::STMT
MATRIX:vectors,pq_result
LITERAL_FLOAT:800.0,2.0
/(sum(^(-(vectors,pq_result),2.0)),800.0)
::STMT
MATRIX:p,lambda,parsertemp456801,parsertemp456800
cast.FLOAT(%*%(t(p),+(%*%(parsertemp456800,parsertemp456801),*(lambda,p))))
::STMT
MATRIX:parsertemp500609,parsertemp500606,parsertemp500604,w
FLOAT:int146,int367
*(-(*(*(parsertemp500604,parsertemp500606),>(parsertemp500609,int146)),w),-(*(*(parsertemp500604,parsertemp500606),>(parsertemp500609,int367)),w))
::STMT
LITERAL_FLOAT:0.21483446221182986
0.21483446221182986
::STMT
MATRIX:P,X,Y,parsertemp148868
FLOAT:float9
LITERAL_FLOAT:0.0,2.0
^(+(%*%(t(X),-(P,Y)),*(*(parsertemp148868,float9),0.0)),2.0)
::STMT
MATRIX:parsertemp467675,Y,Xw
FLOAT:int437
LITERAL_FLOAT:0.0,1.0
*(*(>(-(int437,parsertemp467675),0.0),-(1.0,*(Y,Xw))),Y)
::STMT
MATRIX:simplex
/(-(rowSums(simplex),simplex),nrow(simplex))
::STMT
MATRIX:d_r,parsertemp409781
*(rev(d_r),parsertemp409781)
::STMT
FLOAT:W
LITERAL_FLOAT:1.0
/(W,-(W,1.0))
::STMT
MATRIX:is_LT_infinite,Y_prob
LITERAL_FLOAT:1.0
*(/(Y_prob,rowSums(Y_prob)),-(1.0,rowSums(is_LT_infinite)))
::STMT
MATRIX:parsertemp409788,parsertemp409797
LITERAL_FLOAT:-1.0,2.0
^(+(*(t(parsertemp409788),-1.0),t(colSums(parsertemp409797))),2.0)
::STMT
MATRIX:parsertemp31111,parsertemp31113
FLOAT:int649
LITERAL_FLOAT:1499.0,1500.0
/(/(-(colSums(parsertemp31111),*(int649,parsertemp31113)),1499.0),1500.0)
::STMT
LITERAL_FLOAT:1.0E-17
1.0E-17
::STMT
MATRIX:scale_lambda,parsertemp150455
LITERAL_FLOAT:0.0,1.0E-5
*(*(%*%(scale_lambda,parsertemp150455),1.0E-5),0.0)
::STMT
FLOAT:e,decay
LITERAL_FLOAT:1.0
+(1.0,*(decay,e))
::STMT
MATRIX:A
/(*(cast.FLOAT(A),cast.FLOAT(A)),*(cast.FLOAT(A),cast.FLOAT(A)))
::STMT
MATRIX:p,V
FLOAT:eps
%*%(t(p),+(%*%(t(V),%*%(V,p)),*(eps,p)))
::STMT
MATRIX:parsertemp43621,X,y
FLOAT:float787
LITERAL_FLOAT:1.0
%*%(t(X),*(-(/(float787,parsertemp43621),1.0),y))
::STMT
MATRIX:g_new,g_old
LITERAL_FLOAT:2.0
/(sum(^(g_new,2.0)),sum(^(g_old,2.0)))
::STMT
MATRIX:_sbcvar415,parsertemp116129
FLOAT:eAvg,parsertemp116127
LITERAL_FLOAT:0.050000000000000044,1.0,0.95
-(*(0.95,-(/(parsertemp116129,eAvg),1.0)),*(0.050000000000000044,-(/(parsertemp116127,_sbcvar415),1.0)))
::STMT
MATRIX:w_X,X
FLOAT:int159
cast.FLOAT(%*%(t(-(int159,w_X)),t(colSums(X))))
::STMT
MATRIX:prec,X,mu
LITERAL_FLOAT:2.0
^(-(%*%(X,prec),%*%(mu,prec)),2.0)
::STMT
FLOAT:i,Hin,Win
LITERAL_FLOAT:1.0
*(*(-(i,1.0),Hin),Win)
::STMT
MATRIX:missing_val_maps
LITERAL_FLOAT:3.0
-(3.0,nrow(missing_val_maps))
::STMT
MATRIX:out
FLOAT:dd,step_sz,wd
*(-(+(wd,*(step_sz,dd)),sum(out)),-(+(wd,*(step_sz,dd)),sum(out)))
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.07261134713572442
*(0.07261134713572442,W1_rand)
::STMT
MATRIX:g
FLOAT:float990
LITERAL_FLOAT:0.0,2.0
sum(^(-(0.0,*(float990,g)),2.0))
::STMT
MATRIX:cm,FD
LITERAL_FLOAT:1.0
+(FD,==(cm,1.0))
::STMT
FLOAT:parsertemp22485,parsertemp22452,parsertemp22453
LITERAL_FLOAT:2.0
-(parsertemp22485,*(2.0,sqrt(+(parsertemp22452,parsertemp22453))))
::STMT
MATRIX:residual_matrix
LITERAL_FLOAT:0.0,2.0
/(^(sum(residual_matrix),2.0),+(nrow(residual_matrix),0.0))
::STMT
MATRIX:lambda,parsertemp285716,scale_X,p_CG,shift_X,parsertemp285714,temp_CG
+(+(*(lambda,p_CG),%*%(diag(scale_X),%*%(parsertemp285714,parsertemp285716))),%*%(shift_X,temp_CG))
::STMT
MATRIX:parsertemp389212,parsertemp389215
FLOAT:int362
LITERAL_FLOAT:2.0,1058.0
*(-(parsertemp389215,^(/(parsertemp389212,int362),2.0)),1058.0)
::STMT
MATRIX:Xm,parsertemp265706,Z,parsertemp265702
FLOAT:ss
sum(+(%*%(t(Z),%*%(Xm,parsertemp265702)),*(parsertemp265706,ss)))
::STMT
FLOAT:delta
LITERAL_FLOAT:4.0
*(4.0,delta)
::STMT
MATRIX:parsertemp42207,parsertemp42208,_sbcvar330,438_Ranks
FLOAT:parsertemp42222,meanY,meanX
LITERAL_FLOAT:0.5
*(t(*(/(_sbcvar330,parsertemp42222),-(438_Ranks,meanX))),-(+(-(parsertemp42207,parsertemp42208),0.5),meanY))
::STMT
MATRIX:z,parsertemp285752
FLOAT:2234_sq_root_d,parsertemp285742,pp_CG,parsertemp285757
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(z,parsertemp285752))),*(parsertemp285757,/(+(parsertemp285742,2234_sq_root_d),pp_CG)))
::STMT
FLOAT:batch_size,parsertemp145942
LITERAL_FLOAT:1.0
+(+(parsertemp145942,1.0),batch_size)
::STMT
FLOAT:m2X,W,float178
sqrt(*(m2X,/(W,-(W,float178))))
::STMT
MATRIX:p,q
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),p)
::STMT
FLOAT:m2,mu
LITERAL_FLOAT:1.0005
/(sqrt(*(1.0005,m2)),mu)
::STMT
MATRIX:Y_counts,Y,parsertemp560599
FLOAT:parsertemp560600
LITERAL_FLOAT:2.0
^(-(Y,%*%(Y_counts,/(parsertemp560599,parsertemp560600))),2.0)
::STMT
MATRIX:Xd,parsertemp2775
FLOAT:int805
LITERAL_FLOAT:0.0
*(*(Xd,>(-(int805,parsertemp2775),0.0)),Xd)
::STMT
MATRIX:parsertemp500663
LITERAL_FLOAT:-1.0E30
*(-1.0E30,parsertemp500663)
::STMT
MATRIX:parsertemp477829,2814_Y
FLOAT:2814_X,inp_x
*(+(*(cast.FLOAT(parsertemp477829),-(2814_X,2814_X)),-(cast.FLOAT(2814_Y),cast.FLOAT(2814_Y))),/(-(inp_x,cast.FLOAT(2814_X)),-(cast.FLOAT(2814_X),cast.FLOAT(2814_X))))
::STMT
MATRIX:Xtest_dists
FLOAT:eps
LITERAL_FLOAT:0.0
*(<=(Xtest_dists,eps),<(0.0,Xtest_dists))
::STMT
MATRIX:parsertemp410250,event
FLOAT:parsertemp410251
/(-(max(^(parsertemp410250,parsertemp410251)),min(^(parsertemp410250,parsertemp410251))),sum(event))
::STMT
MATRIX:275_X,275_curr_X
FLOAT:275_value
&(==(275_X,275_curr_X),<(275_X,275_value))
::STMT
MATRIX:r_CG,g_reg,z
cast.FLOAT(%*%(t(z),+(r_CG,g_reg)))
::STMT
MATRIX:X
FLOAT:var_lag,xq_lag,arch_coef,var_coef,a0
LITERAL_FLOAT:2.0
/(^(cast.FLOAT(X),2.0),+(+(a0,*(arch_coef,xq_lag)),*(var_coef,var_lag)))
::STMT
FLOAT:k,n
LITERAL_FLOAT:2.0,4.0
-(+(-(n,4.0),2.0),k)
::STMT
MATRIX:X
FLOAT:x
-(x,X)
::STMT
MATRIX:Hdiff,beta,betamin
FLOAT:int455,int899
+(beta,+(*(<(Hdiff,int899),betamin),*(>=(Hdiff,int455),beta)))
::STMT
MATRIX:Hdiff,betamax,beta
FLOAT:int866,int847
+(beta,+(*(>=(Hdiff,int847),betamax),*(<(Hdiff,int866),beta)))
::STMT
MATRIX:z
LITERAL_FLOAT:2.0
sqrt(^(cast.FLOAT(z),2.0))
::STMT
MATRIX:X,H
LITERAL_FLOAT:0.0
>(%*%(X,t(H)),0.0)
::STMT
MATRIX:Bx
diag(Bx)
::STMT
MATRIX:parsertemp31189,parsertemp31194,parsertemp31196,parsertemp31187
LITERAL_FLOAT:1499.0,6999.0,1500.0,7000.0
+(/(/(-(parsertemp31187,parsertemp31189),6999.0),7000.0),/(/(-(parsertemp31194,parsertemp31196),1499.0),1500.0))
::STMT
MATRIX:parsertemp170244,parsertemp170240,parsertemp170238
FLOAT:float847,float32,float42
LITERAL_FLOAT:1.0,-0.284496736
*(/(1.0,+(1.0,*(parsertemp170238,float847))),+(-0.284496736,*(/(float32,parsertemp170240),+(float42,parsertemp170244))))
::STMT
FLOAT:2690_Hin
LITERAL_FLOAT:0.0,2.0
-(+(2690_Hin,*(2.0,0.0)),2.0)
::STMT
MATRIX:A,B,X
<=(%*%(X,A),B)
::STMT
LITERAL_FLOAT:1.0,2.0,3.0,2001.0
*(*(-(2001.0,2.0),+(2001.0,1.0)),+(2001.0,3.0))
::STMT
MATRIX:P,I,X2
*(t(%*%(X2,P)),I)
::STMT
LITERAL_FLOAT:0.06835859270246632
0.06835859270246632
::STMT
MATRIX:d,parsertemp410053
sum(*(d,t(colSums(parsertemp410053))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(^(sum(round(W)),2.0),+(sum(round(W)),1.0))
::STMT
MATRIX:2883_ctab
LITERAL_FLOAT:0.0,1.0
==(rowSums(!=(2883_ctab,0.0)),1.0)
::STMT
MATRIX:M2,X
-(nrow(X),nrow(M2))
::STMT
MATRIX:parsertemp403496,W3_rand
FLOAT:int454,int938
LITERAL_FLOAT:0.1651445647689541
%*%(*(0.1651445647689541,W3_rand),t(/(-(parsertemp403496,int454),+(parsertemp403496,int938))))
::STMT
MATRIX:w,parsertemp2794
FLOAT:lambda
LITERAL_FLOAT:2.0
*(/(lambda,2.0),sum(*(+(w,parsertemp2794),+(w,parsertemp2794))))
::STMT
MATRIX:parsertemp31029,parsertemp31031
FLOAT:int700
LITERAL_FLOAT:1.0,2.0,150.0
^(/(-(colSums(parsertemp31029),*(int700,parsertemp31031)),-(150.0,1.0)),2.0)
::STMT
MATRIX:p,z
*(sum(*(p,z)),sum(*(p,z)))
::STMT
MATRIX:X
LITERAL_FLOAT:-2.0
*(-2.0,%*%(X,t(X)))
::STMT
MATRIX:parsertemp31189,parsertemp31194,parsertemp31196,parsertemp31187
FLOAT:int893,int871,int192,int39
LITERAL_FLOAT:1500.0,7000.0
+(/(/(-(parsertemp31187,parsertemp31189),-(int893,int39)),7000.0),/(/(-(parsertemp31194,parsertemp31196),-(int192,int871)),1500.0))
::STMT
MATRIX:scale_X,shift_X
LITERAL_FLOAT:2.0
*(*(2.0,scale_X),shift_X)
::STMT
MATRIX:COMPONENTS,id
-(==(id,cast.FLOAT(id)),cast.FLOAT(diag(diag(COMPONENTS))))
::STMT
MATRIX:252_X
LITERAL_FLOAT:4.5
/(-(4.5,cast.FLOAT(252_X)),-(cast.FLOAT(252_X),cast.FLOAT(252_X)))
::STMT
MATRIX:252_Y,252_X,252_K
-(*(cast.FLOAT(252_K),-(cast.FLOAT(252_X),cast.FLOAT(252_X))),-(cast.FLOAT(252_Y),cast.FLOAT(252_Y)))
::STMT
MATRIX:gs
FLOAT:alpha2Scalar
LITERAL_FLOAT:-0.5
/(*(-0.5,cast.FLOAT(gs)),alpha2Scalar)
::STMT
MATRIX:parsertemp146940,184_dtemp
FLOAT:beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,beta2),^(colSums(-(184_dtemp,parsertemp146940)),2.0))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0,2000.0
*(/(2000.0,-(2000.0,1.0)),m2)
::STMT
MATRIX:parsertemp387404,K_inv,Ks,Kss
-(cast.FLOAT(Kss),cast.FLOAT(%*%(%*%(parsertemp387404,K_inv),Ks)))
::STMT
MATRIX:parsertemp131907,parsertemp131918,cumLeftHist,parsertemp132092,leftHist,outBucket
+(%*%(==(outBucket,%*%(parsertemp132092,parsertemp131907)),-(cumLeftHist,leftHist)),parsertemp131918)
::STMT
MATRIX:e,X2
LITERAL_FLOAT:0.0
>(t(%*%(t(e),X2)),0.0)
::STMT
MATRIX:PRED,GT
/(sum(==(PRED,GT)),length(==(PRED,GT)))
::STMT
MATRIX:U,V,X
-(X,%*%(U,t(V)))
::STMT
FLOAT:m2X,float180,int20
LITERAL_FLOAT:100000.0
sqrt(*(m2X,/(100000.0,-(int20,float180))))
::STMT
MATRIX:p,A
*(p,%*%(t(A),%*%(A,p)))
::STMT
MATRIX:V_nonzero,row_nonzeros,lambda_I
+(%*%(t(V_nonzero),V_nonzero),*(cast.FLOAT(row_nonzeros),lambda_I))
::STMT
MATRIX:C,Xm,parsertemp265706,parsertemp265704,Z,parsertemp265701
FLOAT:ss
/(%*%(t(Xm),%*%(Xm,%*%(C,parsertemp265701))),sum(+(%*%(parsertemp265704,Z),*(parsertemp265706,ss))))
::STMT
FLOAT:parsertemp13703
LITERAL_FLOAT:1.0,1000.0
/(*(parsertemp13703,1000.0),-(1000.0,1.0))
::STMT
MATRIX:WM
FLOAT:parsertemp31268
LITERAL_FLOAT:1.0
*(-(sum(WM),1.0),/(*(parsertemp31268,sum(WM)),-(sum(WM),1.0)))
::STMT
MATRIX:Xm,tmp,parsertemp265702
t(/(%*%(t(Xm),%*%(Xm,parsertemp265702)),sum(tmp)))
::STMT
MATRIX:scale_X,shift_X,X,parsertemp271403
FLOAT:int126,int545
LITERAL_FLOAT:2.0
+(+(%*%(^(X,int126),^(scale_X,int545)),%*%(X,*(parsertemp271403,shift_X))),sum(^(shift_X,2.0)))
::STMT
FLOAT:parsertemp271435
LITERAL_FLOAT:1500.0
*(1500.0,parsertemp271435)
::STMT
FLOAT:Hin
LITERAL_FLOAT:184.0
*(+(Hin,184.0),+(Hin,184.0))
::STMT
MATRIX:d,parsertemp43996,parsertemp43997
LITERAL_FLOAT:2.0
%*%(t(d),+(d,*(2.0,%*%(parsertemp43996,parsertemp43997))))
::STMT
MATRIX:K_inv,Ks,Kss
-(Kss,%*%(%*%(t(Ks),K_inv),Ks))
::STMT
MATRIX:parsertemp220900,parsertemp220899,Y
LITERAL_FLOAT:300.0,0.0
+(Y,-(0.0,*(300.0,-(parsertemp220899,parsertemp220900))))
::STMT
MATRIX:WM
LITERAL_FLOAT:1.0
-(sum(WM),1.0)
::STMT
FLOAT:res_eee
LITERAL_FLOAT:2.0,0.3
-(/(res_eee,2.0),0.3)
::STMT
MATRIX:parsertemp24102
FLOAT:num_bins
LITERAL_FLOAT:1.0
*(>(+(round(parsertemp24102),1.0),num_bins),num_bins)
::STMT
MATRIX:W
FLOAT:m2
*(m2,sum(round(W)))
::STMT
MATRIX:2903_mask,dout,2902_W
FLOAT:2903_p
*(/(2903_mask,2903_p),%*%(dout,t(2902_W)))
::STMT
MATRIX:r_CG,q_CG
FLOAT:alpha_CG
+(r_CG,*(alpha_CG,cast.FLOAT(q_CG)))
::STMT
MATRIX:_sbcvar95,_sbcvar97
FLOAT:221_my
LITERAL_FLOAT:0.0,2.0
^(+(%*%(_sbcvar95,_sbcvar97),-(0.0,221_my)),2.0)
::STMT
MATRIX:parsertemp395002,W4_rand,parsertemp395005
LITERAL_FLOAT:0.08692913816996169
t(%*%(*(0.08692913816996169,W4_rand),t(/(parsertemp395002,parsertemp395005))))
::STMT
MATRIX:X,Y,K
-(*(K,-(X,X)),-(Y,Y))
::STMT
MATRIX:Xd,out
FLOAT:dd,parsertemp467655,wd
/(*(-(+(wd,parsertemp467655),sum(out)),-(+(wd,parsertemp467655),sum(out))),+(dd,sum(Xd)))
::STMT
FLOAT:i
LITERAL_FLOAT:27.0
+(27.0,i)
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0
%*%(-(0.0,t(X)),y)
::STMT
MATRIX:leaf_ids
FLOAT:boundary_left,step_size
<(leaf_ids,+(+(boundary_left,step_size),step_size))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,11.0
+(-(11.0,idx),1.0)
::STMT
LITERAL_FLOAT:1.0,2.0
+(2.0,1.0)
::STMT
MATRIX:p_gaps_vector
FLOAT:number_nans
/(number_nans,sum(p_gaps_vector))
::STMT
FLOAT:g,h
/(*(g,g),h)
::STMT
MATRIX:var_X_cols,parsertemp414376,parsertemp414378
FLOAT:int672
LITERAL_FLOAT:0.0,1.0,199.0
+(*(/(-(parsertemp414376,parsertemp414378),199.0),-(1.0,<=(var_X_cols,int672))),<=(/(-(parsertemp414376,parsertemp414378),199.0),0.0))
::STMT
LITERAL_FLOAT:1.0,6.0,2001.0
*(*(6.0,2001.0),-(2001.0,1.0))
::STMT
MATRIX:D,beta
LITERAL_FLOAT:-1.0
exp(*(*(D,-1.0),beta))
::STMT
MATRIX:d,exp_Xb,X
rev(*(X,*(%*%(X,d),exp_Xb)))
::STMT
MATRIX:K_inv,parsertemp387408,Ks,Kss
cast.FLOAT(-(Kss,%*%(%*%(parsertemp387408,K_inv),Ks)))
::STMT
MATRIX:present_domain_vals_mat,parsertemp27485
FLOAT:my
-(%*%(present_domain_vals_mat,parsertemp27485),my)
::STMT
MATRIX:p_CG,z
LITERAL_FLOAT:-1.0
*(cast.FLOAT(%*%(t(p_CG),z)),-1.0)
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0,2.0
*(2.0,sum(*(parsertemp43626,-1.0)))
::STMT
MATRIX:X_batch,W1_grad
FLOAT:step
*(/(step,nrow(X_batch)),W1_grad)
::STMT
MATRIX:_sbcvar1156,_sbcvar1155
FLOAT:num_records
LITERAL_FLOAT:1.0
+(*(_sbcvar1155,_sbcvar1156),*(+(num_records,1.0),-(1.0,_sbcvar1156)))
::STMT
MATRIX:e_r_rev_agg,select,d_r_rev,X_rev_agg
/(*(%*%(select,X_rev_agg),d_r_rev),e_r_rev_agg)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),750.0))
::STMT
MATRIX:parsertemp220853,Ws,beta
FLOAT:logU
LITERAL_FLOAT:0.0
<(-(+(parsertemp220853,*(beta,Ws)),logU),0.0)
::STMT
MATRIX:P,D,ZERODIAG
LITERAL_FLOAT:1.0E-12
/(rowSums(*(*(P,ZERODIAG),D)),+(rowSums(*(P,ZERODIAG)),1.0E-12))
::STMT
MATRIX:tmp,w,out
LITERAL_FLOAT:50.0,0.5
+(*(0.5,cast.FLOAT(%*%(out,out))),*(50.0,cast.FLOAT(%*%(w,tmp))))
::STMT
MATRIX:p,G
FLOAT:alpha
*(alpha,%*%(G,p))
::STMT
MATRIX:q,z
FLOAT:pp,pq,parsertemp285524
LITERAL_FLOAT:0.5
+(*(*(0.5,/(parsertemp285524,pp)),pq),sum(*(z,q)))
::STMT
MATRIX:p,q,lambda
sum(*(p,+(q,*(lambda,p))))
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0
*(+(0.0,*(cast.FLOAT(lambda),cast.FLOAT(beta))),+(0.0,*(cast.FLOAT(lambda),cast.FLOAT(beta))))
::STMT
MATRIX:_sbcvar78
LITERAL_FLOAT:10000.0
/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0)
::STMT
MATRIX:parsertemp16859,77_Y_row_norm,parsertemp16868,X,Y,parsertemp16861
FLOAT:float904
/(%*%(X,t(Y)),%*%(+(sqrt(parsertemp16859),*(parsertemp16861,float904)),t(+(77_Y_row_norm,parsertemp16868))))
::STMT
MATRIX:X_adapted,parsertemp176506
FLOAT:intercept,parsertemp176418
LITERAL_FLOAT:3.0
<(X_adapted,-(sqrt(parsertemp176418),*(3.0,+(parsertemp176506,intercept))))
::STMT
MATRIX:X_adapted,parsertemp176506
FLOAT:intercept,parsertemp176418
LITERAL_FLOAT:3.0
>(X_adapted,+(sqrt(parsertemp176418),*(3.0,+(parsertemp176506,intercept))))
::STMT
MATRIX:parsertemp171600,g_Y,lambda,parsertemp171602,beta
LITERAL_FLOAT:2.0
^(+(*(cast.FLOAT(parsertemp171602),%*%(parsertemp171600,g_Y)),*(cast.FLOAT(lambda),cast.FLOAT(beta))),2.0)
::STMT
MATRIX:z
FLOAT:trust_delta_sq,pp_CG
*(pp_CG,-(cast.FLOAT(%*%(z,z)),trust_delta_sq))
::STMT
LITERAL_FLOAT:-0.36651292058166435
-0.36651292058166435
::STMT
MATRIX:F
LITERAL_FLOAT:2.0
/(rowSums(F),2.0)
::STMT
MATRIX:parsertemp31104,parsertemp31106
FLOAT:int255
LITERAL_FLOAT:1999.0,2000.0
/(/(-(colSums(parsertemp31104),*(int255,parsertemp31106)),1999.0),2000.0)
::STMT
FLOAT:parsertemp5,m2X,parsertemp9,m2Y,covXY
/(covXY,*(sqrt(*(m2X,parsertemp5)),sqrt(*(m2Y,parsertemp9))))
::STMT
MATRIX:diff_nominal
FLOAT:num_std_median
LITERAL_FLOAT:0.0
*(!=(diff_nominal,0.0),num_std_median)
::STMT
MATRIX:W1_rand,X,parsertemp399148,parsertemp399138
FLOAT:float154
LITERAL_FLOAT:0.08692913816996169
%*%(*(0.08692913816996169,W1_rand),t(/(-(X,parsertemp399138),+(parsertemp399148,float154))))
::STMT
MATRIX:maskd1,out1,185_dX,parsertemp146947,W2
FLOAT:p
LITERAL_FLOAT:0.0
*(>(out1,0.0),*(/(maskd1,p),%*%(*(parsertemp146947,185_dX),t(W2))))
::STMT
MATRIX:X
FLOAT:n
LITERAL_FLOAT:2.0
^(/(t(colSums(X)),n),2.0)
::STMT
MATRIX:LT,Y,parsertemp149320
sum(*(Y,-(LT,parsertemp149320)))
::STMT
MATRIX:V,X
LITERAL_FLOAT:0.0
*(V,t(!=(X,0.0)))
::STMT
MATRIX:X,K
LITERAL_FLOAT:-1.0
*(*(K,-1.0),-(X,X))
::STMT
MATRIX:W
FLOAT:m4
LITERAL_FLOAT:1.0,2.0
*(*(^(sum(W),2.0),+(sum(W),1.0)),m4)
::STMT
MATRIX:parsertemp32006,simplex
LITERAL_FLOAT:2.0
-(*(2.0,/(-(parsertemp32006,simplex),nrow(simplex))),simplex)
::STMT
MATRIX:resp,mean,X,weight,diff
/(%*%(t(*(diff,resp)),-(X,mean)),cast.FLOAT(weight))
::STMT
MATRIX:X
/(t(colSums(X)),nrow(X))
::STMT
MATRIX:parsertemp31023,parsertemp31025,parsertemp31030,parsertemp31032
LITERAL_FLOAT:149.0,150.0,99.0,100.0
+(/(/(-(parsertemp31023,parsertemp31025),99.0),100.0),/(/(-(parsertemp31030,parsertemp31032),149.0),150.0))
::STMT
MATRIX:R
LITERAL_FLOAT:0.0,32.0
&(>=(R,32.0),>(R,0.0))
::STMT
MATRIX:parsertemp31763,parsertemp31756
FLOAT:minSup
LITERAL_FLOAT:0.0
sum(&(>=(t(parsertemp31756),minSup),>(t(parsertemp31763),0.0)))
::STMT
MATRIX:ytest,yhat
LITERAL_FLOAT:1.0,2.0
^(/(-(cast.FLOAT(ytest),cast.FLOAT(yhat)),1.0),2.0)
::STMT
MATRIX:s,w
LITERAL_FLOAT:2.0
*(2.0,cast.FLOAT(%*%(t(w),s)))
::STMT
LITERAL_FLOAT:0.2656844656620286
0.2656844656620286
::STMT
MATRIX:R,parsertemp40219,parsertemp40216,parsertemp40225,removedE
FLOAT:level
-(+(R,rowSums(*(parsertemp40216,parsertemp40225))),rowSums(*(==(parsertemp40219,level),t(removedE))))
::STMT
MATRIX:Y_val,parsertemp459795
FLOAT:int459
LITERAL_FLOAT:50.0
/(sum(*(-(int459,Y_val),parsertemp459795)),50.0)
::STMT
MATRIX:majority
LITERAL_FLOAT:0.0,1.0,2.0
INT:int589,parsertemp282730
*(>(rand(parsertemp282730,int589,1.0,2.0),0.0),majority)
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:delta2
*(%*%(t(d),d),-(delta2,%*%(t(s),-(s,parsertemp44016))))
::STMT
MATRIX:parsertemp460691
FLOAT:lr
*(lr,rowSums(parsertemp460691))
::STMT
MATRIX:parsertemp171269,Y,linear_terms
FLOAT:int153,int429
LITERAL_FLOAT:0.0
-(/(+(Y,==(Y,int429)),+(*(linear_terms,parsertemp171269),==(Y,int153))),==(Y,0.0))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0E7
*(==(+(1.0E7,exp(finite_linear_terms)),1.0E7),exp(finite_linear_terms))
::STMT
MATRIX:CI_l
LITERAL_FLOAT:0.5
t(<=(CI_l,0.5))
::STMT
MATRIX:m_iter_err_sum,m_err
-(t(+(colSums(m_err),m_iter_err_sum)),+(colSums(m_err),m_iter_err_sum))
::STMT
MATRIX:F
colSums(F)
::STMT
MATRIX:ot2
FLOAT:int521,Nt
LITERAL_FLOAT:100.0
/(*(sum(>(ot2,int521)),100.0),Nt)
::STMT
MATRIX:eVals,eVecs
LITERAL_FLOAT:-1.0
%*%(eVecs,diag(^(eVals,-1.0)))
::STMT
MATRIX:R,3_ss,dsep
FLOAT:3_eAvg
/(/(+(R,dsep),3_ss),3_eAvg)
::STMT
MATRIX:b,X
rev(*(X,exp(%*%(X,b))))
::STMT
MATRIX:X
FLOAT:p
-(nrow(X),p)
::STMT
MATRIX:indexWithInGroups,parsertemp129475,groupIndex,selectedMatrix
+(-(*(groupIndex,max(parsertemp129475)),max(parsertemp129475)),rowSums(*(indexWithInGroups,selectedMatrix)))
::STMT
MATRIX:Y
-(Y,/(sum(Y),nrow(Y)))
::STMT
LITERAL_FLOAT:5.0,2003.0
+(2003.0,5.0)
::STMT
FLOAT:i,s_cols
LITERAL_FLOAT:1.0
*(-(i,1.0),s_cols)
::STMT
MATRIX:parsertemp271438,parsertemp271437
LITERAL_FLOAT:2.0
sqrt(sum(^(%*%(parsertemp271437,parsertemp271438),2.0)))
::STMT
FLOAT:max_depth
LITERAL_FLOAT:2.0
^(2.0,max_depth)
::STMT
LITERAL_FLOAT:1.0,100000.0
/(100000.0,-(100000.0,1.0))
::STMT
MATRIX:parsertemp251811
FLOAT:f
LITERAL_FLOAT:0.0
==(<=(parsertemp251811,f),0.0)
::STMT
LITERAL_FLOAT:44.75488800120049
44.75488800120049
::STMT
MATRIX:H2_prime,H1_prime,W2,parsertemp389612
t(*(H1_prime,%*%(*(H2_prime,parsertemp389612),W2)))
::STMT
LITERAL_FLOAT:0.001308
0.001308
::STMT
MATRIX:img_in
FLOAT:w
LITERAL_FLOAT:2.0
/(-(ncol(img_in),w),2.0)
::STMT
MATRIX:out2,parsertemp146942,184_dscores,outd1
FLOAT:int988
LITERAL_FLOAT:2.0
^(%*%(t(outd1),*(>(out2,int988),%*%(184_dscores,parsertemp146942))),2.0)
::STMT
MATRIX:z_LS
FLOAT:norm_r2_LS,p_LS
+(z_LS,*(/(norm_r2_LS,*(p_LS,p_LS)),cast.FLOAT(p_LS)))
::STMT
MATRIX:y_val,preds
t(-(y_val,preds))
::STMT
MATRIX:parsertemp2832
max(round(parsertemp2832))
::STMT
MATRIX:parsertemp131906,parsertemp132092,rightHist,outBucket
%*%(==(outBucket,%*%(parsertemp132092,t(parsertemp131906))),rightHist)
::STMT
MATRIX:b_cumulant,Y,natural_parameters
-(*(Y,natural_parameters),b_cumulant)
::STMT
FLOAT:norm_r2,norm_r2_initial
/(norm_r2,norm_r2_initial)
::STMT
MATRIX:leaf_ids,out
FLOAT:boundary_left,step_size
+(out,&(>=(leaf_ids,boundary_left),<(leaf_ids,+(boundary_left,step_size))))
::STMT
MATRIX:B,X,y
FLOAT:intercept
LITERAL_FLOAT:2.0
^(-(y,+(%*%(X,B),intercept)),2.0)
::STMT
MATRIX:mean
LITERAL_FLOAT:2.0
*(2.0,^(mean,2.0))
::STMT
FLOAT:sv,rad,delta2,s2
/(-(delta2,s2),+(sv,rad))
::STMT
MATRIX:classes,X
FLOAT:split
+(-(nrow(X),split),nrow(classes))
::STMT
MATRIX:parsertemp553014,M2,parsertemp553121,parsertemp553122,missing,parsertemp553008
LITERAL_FLOAT:2.0
-(+(%*%(rowSums(parsertemp553008),parsertemp553121),t(%*%(parsertemp553014,parsertemp553122))),*(2.0,%*%(M2,t(missing))))
::STMT
LITERAL_FLOAT:1.6583123951777
1.6583123951777
::STMT
FLOAT:sum_y_test,n
LITERAL_FLOAT:2.0
*(n,^(/(sum_y_test,n),2.0))
::STMT
FLOAT:a,b,rad
LITERAL_FLOAT:-1.0,2.0
/(*(-(b,rad),-1.0),*(2.0,a))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
*(linear_terms,-(1.0,var_power))
::STMT
MATRIX:r,s,grad
-(%*%(t(s),grad),%*%(t(s),r))
::STMT
MATRIX:parsertemp43631,parsertemp43633
LITERAL_FLOAT:0.0,2.0
^(+(0.0,*(2.0,%*%(parsertemp43631,parsertemp43633))),2.0)
::STMT
MATRIX:minD,D
colSums(/(<=(D,minD),rowSums(<=(D,minD))))
::STMT
MATRIX:ones,classFeatureCounts
LITERAL_FLOAT:1.0,500.0
%*%(+(rowSums(classFeatureCounts),*(500.0,1.0)),ones)
::STMT
MATRIX:b4,parsertemp389330,parsertemp389333,W4
+(%*%(W4,t(/(parsertemp389330,parsertemp389333))),b4)
::STMT
MATRIX:M
LITERAL_FLOAT:2.0
>=(rowSums(M),2.0)
::STMT
MATRIX:F
t(colSums(F))
::STMT
MATRIX:parsertemp146957,188_dX
FLOAT:beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,beta2),^(colSums(*(parsertemp146957,188_dX)),2.0))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
-(^(sum(round(W)),2.0),1.0)
::STMT
MATRIX:parsertemp220863,parsertemp220864,Hdiff,beta
FLOAT:int40,INF
LITERAL_FLOAT:2.0
*(*(*(2.0,>=(Hdiff,int40)),==(+(parsertemp220863,parsertemp220864),INF)),beta)
::STMT
MATRIX:parsertemp42200,parsertemp42201,_sbcvar330
FLOAT:meanX
LITERAL_FLOAT:1.0,0.5
*(/(_sbcvar330,-(sum(_sbcvar330),1.0)),-(+(-(parsertemp42200,parsertemp42201),0.5),meanX))
::STMT
FLOAT:nFeats
LITERAL_FLOAT:6.283185307179586
^(6.283185307179586,nFeats)
::STMT
MATRIX:p_CG
FLOAT:trust_delta_sq,z,pp_CG
-(*(*(cast.FLOAT(z),sum(p_CG)),*(cast.FLOAT(z),sum(p_CG))),*(pp_CG,-(*(z,z),trust_delta_sq)))
::STMT
MATRIX:45_CVars,45_CFreqs
FLOAT:int43
LITERAL_FLOAT:1000.0
/(sum(*(-(45_CFreqs,int43),45_CVars)),-(1000.0,nrow(45_CFreqs)))
::STMT
MATRIX:parsertemp555613,X,Xc,parsertemp555606,parsertemp555615
LITERAL_FLOAT:1.0
/(/(%*%(t(Xc),-(X,parsertemp555606)),-(nrow(X),1.0)),%*%(t(sqrt(parsertemp555613)),sqrt(parsertemp555615)))
::STMT
MATRIX:Bxu,Bxd
LITERAL_FLOAT:2.0
*(2.0,+(Bxd,Bxu))
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0
+(0.0,*(lambda,beta))
::STMT
FLOAT:parsertemp557360,parsertemp557354,parsertemp557356,parsertemp557358,prob_true,prob_false
+(/(*(prob_true,parsertemp557354),parsertemp557356),/(*(prob_false,parsertemp557358),parsertemp557360))
::STMT
FLOAT:parsertemp557360,parsertemp557354,parsertemp557356,weight,parsertemp557358,prob_true,prob_false
LITERAL_FLOAT:-1.0
*(*(-1.0,weight),+(/(*(prob_true,parsertemp557354),parsertemp557356),/(*(prob_false,parsertemp557358),parsertemp557360)))
::STMT
FLOAT:F1
LITERAL_FLOAT:2.0
*(*(F1,2.0),2.0)
::STMT
FLOAT:p,P,Q
LITERAL_FLOAT:1.0
+(+(+(1.0,p),P),Q)
::STMT
MATRIX:scale_X,X
LITERAL_FLOAT:2.0
%*%(^(X,2.0),^(scale_X,2.0))
::STMT
MATRIX:ts
FLOAT:q
-(q,%*%(ts,ts))
::STMT
FLOAT:s
LITERAL_FLOAT:1.0,4.0
/(4.0,+(s,1.0))
::STMT
MATRIX:parsertemp410978,W,H
/(*(H,t(parsertemp410978)),t(colSums(W)))
::STMT
MATRIX:classes
LITERAL_FLOAT:0.30000000000000004
*(cast.FLOAT(classes),0.30000000000000004)
::STMT
MATRIX:g_reg,p_CG
FLOAT:q_CG,z,int78,pq_CG,pp_CG,parsertemp170107,parsertemp170091
*(+(+(*(parsertemp170107,pq_CG),*(z,q_CG)),sum(*(g_reg,p_CG))),/(+(*(z,int78),sqrt(parsertemp170091)),pp_CG))
::STMT
MATRIX:s,d,alpha
FLOAT:parsertemp44004
%*%(t(+(s,*(parsertemp44004,d))),+(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:fP
FLOAT:max_values
^(ncol(fP),max_values)
::STMT
MATRIX:e,X,tS
FLOAT:l
t(%*%(t(e),==(%*%(X,tS),l)))
::STMT
MATRIX:parsertemp22683,id
-(==(id,t(id)),diag(diag(==(id,parsertemp22683))))
::STMT
MATRIX:g
FLOAT:lambda,parsertemp169913
LITERAL_FLOAT:2.0
*(sum(^(+(g,lambda),2.0)),parsertemp169913)
::STMT
MATRIX:dout,out
LITERAL_FLOAT:1.0,2.0
*(-(1.0,^(out,2.0)),dout)
::STMT
MATRIX:V,W,H,parsertemp10749
LITERAL_FLOAT:1.0E-8
*(W,/(%*%(V,t(H)),+(%*%(W,parsertemp10749),1.0E-8)))
::STMT
LITERAL_FLOAT:2.0,2003.0
^(2003.0,2.0)
::STMT
MATRIX:out2,parsertemp146942,184_dscores
FLOAT:int386,beta1
LITERAL_FLOAT:1.0
*(-(1.0,beta1),colSums(*(>(out2,int386),%*%(184_dscores,parsertemp146942))))
::STMT
MATRIX:X,Centering,ScaleFactor
t(/(-(X,Centering),ScaleFactor))
::STMT
MATRIX:p
LITERAL_FLOAT:1.0E-8
*(1.0E-8,p)
::STMT
MATRIX:2701_mask,2700_W,parsertemp459178,2699_dtemp,2702_X
LITERAL_FLOAT:0.0,0.5
*(>(2702_X,0.0),*(/(2701_mask,0.5),%*%(-(2699_dtemp,parsertemp459178),t(2700_W))))
::STMT
MATRIX:parsertemp171268,Y,linear_terms,parsertemp171271,vec1
FLOAT:link_power,int612
/(-(-(/(parsertemp171268,parsertemp171271),==(Y,int612)),*(*(Y,vec1),linear_terms)),link_power)
::STMT
MATRIX:lambda,shift_X,gXY,parsertemp171602,beta
LITERAL_FLOAT:2.0
^(+(+(%*%(parsertemp171602,gXY),%*%(shift_X,gXY)),*(lambda,beta)),2.0)
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.08333333333333333
*(0.08333333333333333,W1_rand)
::STMT
MATRIX:P,Z,ZERODIAG,parsertemp220891
FLOAT:int793
-(P,/(*(/(int793,parsertemp220891),ZERODIAG),sum(*(Z,ZERODIAG))))
::STMT
MATRIX:R,S,parsertemp40218
FLOAT:level
-(R,rowSums(==(%*%(S,parsertemp40218),level)))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
sum(>=(rowSums(abs(A)),1.0))
::STMT
FLOAT:float320,parsertemp169813
LITERAL_FLOAT:2.302585092994046,4.0
*(2.302585092994046,-(4.0,round(-(parsertemp169813,float320))))
::STMT
MATRIX:parsertemp393584,W4_rand,parsertemp393587
LITERAL_FLOAT:0.08709382882250233
t(%*%(*(0.08709382882250233,W4_rand),t(/(parsertemp393584,parsertemp393587))))
::STMT
MATRIX:parsertemp414374,avg_X_cols
FLOAT:int635
LITERAL_FLOAT:200.0,199.0
/(-(t(colSums(parsertemp414374)),*(200.0,^(avg_X_cols,int635))),199.0)
::STMT
MATRIX:parsertemp10743,V,H,parsertemp10739
%*%(V,t(*(H,/(parsertemp10739,parsertemp10743))))
::STMT
MATRIX:D,beta
LITERAL_FLOAT:0.0
*(-(0.0,D),beta)
::STMT
MATRIX:X_batch,2365_delta2,H1_prime,W2
%*%(t(*(H1_prime,%*%(2365_delta2,W2))),X_batch)
::STMT
MATRIX:parsertemp409789,parsertemp409798,g0_2,g0_1
FLOAT:int16
cast.FLOAT(%*%(t(+(g0_1,g0_2)),+(-(int16,parsertemp409789),t(parsertemp409798))))
::STMT
MATRIX:WM
FLOAT:parsertemp31268
LITERAL_FLOAT:1.0
/(*(parsertemp31268,sum(WM)),-(sum(WM),1.0))
::STMT
FLOAT:arch_coef,var_coef,a0
LITERAL_FLOAT:1.0
/(a0,-(-(1.0,arch_coef),var_coef))
::STMT
MATRIX:parsertemp220988,parsertemp220989,dY,Y
LITERAL_FLOAT:300.0,0.9
+(Y,-(*(0.9,dY),*(300.0,-(parsertemp220988,parsertemp220989))))
::STMT
MATRIX:p,q,r,parsertemp1947
FLOAT:norm_r2,alpha
LITERAL_FLOAT:-1.0
+(*(+(r,*(alpha,q)),-1.0),*(/(sum(parsertemp1947),norm_r2),p))
::STMT
MATRIX:upd_W1
LITERAL_FLOAT:0.9
*(0.9,upd_W1)
::STMT
LITERAL_FLOAT:1.0E-30
1.0E-30
::STMT
MATRIX:p,q,parsertemp503394,Z
FLOAT:norm_r2
*(/(norm_r2,cast.FLOAT(%*%(parsertemp503394,q))),%*%(Z,p))
::STMT
FLOAT:n_group_cols
LITERAL_FLOAT:2.0
+(2.0,n_group_cols)
::STMT
MATRIX:P,Phi,Theta
%*%(%*%(P,Theta),t(Phi))
::STMT
MATRIX:2697_out,2697_b,parsertemp459149,parsertemp459147
/(exp(-(+(parsertemp459147,2697_b),parsertemp459149)),rowSums(exp(-(2697_out,parsertemp459149))))
::STMT
MATRIX:out
FLOAT:dd,step_sz,wd
-(+(wd,*(step_sz,dd)),sum(out))
::STMT
MATRIX:A,scale_X,shift_X,parsertemp115874,X
t(+(%*%(diag(scale_X),%*%(parsertemp115874,X)),%*%(shift_X,A)))
::STMT
MATRIX:d
cast.FLOAT(%*%(t(d),d))
::STMT
MATRIX:tmp
FLOAT:norm_r2_LS
/(*(cast.FLOAT(tmp),cast.FLOAT(tmp)),norm_r2_LS)
::STMT
MATRIX:r,s,grad
-(cast.FLOAT(%*%(t(s),grad)),cast.FLOAT(%*%(t(s),r)))
::STMT
FLOAT:o_init,N
LITERAL_FLOAT:-2.0
exp(/(*(-2.0,o_init),N))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.1092173494617922
*(0.1092173494617922,W2_rand)
::STMT
LITERAL_FLOAT:1.0,-1.0E30
INT:int11,M
*(-1.0E30,rand(M,int11,1.0,1.0))
::STMT
MATRIX:the_exp,linear_terms,Y
FLOAT:int787
*(*(exp(*(the_exp,int787)),exp(linear_terms)),rowSums(Y))
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:8.660254037844387
/(8.660254037844387,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:parsertemp500607,w,parsertemp500610
sum(*(-(*(parsertemp500607,parsertemp500610),w),-(*(parsertemp500607,parsertemp500610),w)))
::STMT
MATRIX:Xtest_dists
FLOAT:int953,eps
LITERAL_FLOAT:1.0
>=(rowSums(*(<=(Xtest_dists,eps),<(int953,Xtest_dists))),1.0)
::STMT
MATRIX:ZtZ,C,Xm,parsertemp265709,Z,parsertemp265701
%*%(%*%(Xm,%*%(C,parsertemp265701)),t(/(%*%(parsertemp265709,Z),sum(ZtZ))))
::STMT
MATRIX:s,w
*(w,s)
::STMT
MATRIX:linear_terms
exp(linear_terms)
::STMT
MATRIX:269_Row_norm,parsertemp34343,X_block
LITERAL_FLOAT:0.3
>(/(%*%(X_block,t(X_block)),%*%(sqrt(parsertemp34343),t(269_Row_norm))),0.3)
::STMT
FLOAT:int874,int128,width,parsertemp387147
LITERAL_FLOAT:-1.0,2.0
exp(/(*(-1.0,^(parsertemp387147,int128)),*(2.0,^(width,int874))))
::STMT
MATRIX:parsertemp174552
LITERAL_FLOAT:0.0
sum(==(parsertemp174552,0.0))
::STMT
FLOAT:s
LITERAL_FLOAT:1.0,5.0
/(5.0,+(s,1.0))
::STMT
MATRIX:parsertemp436668,X,parsertemp436672,bc_matrix
LITERAL_FLOAT:2.0
-(*(bc_matrix,t(rowSums(parsertemp436668))),*(2.0,%*%(X,t(parsertemp436672))))
::STMT
MATRIX:resp,X,weight
LITERAL_FLOAT:2.0
/(%*%(t(resp),^(X,2.0)),t(weight))
::STMT
MATRIX:B,C,D,E,parsertemp462474
%*%(==(%*%(<=(parsertemp462474,B),C),D),E)
::STMT
MATRIX:X,permut
FLOAT:n
LITERAL_FLOAT:2.0
/(colSums(^(%*%(permut,X),2.0)),n)
::STMT
MATRIX:parsertemp411208,parsertemp411210,parsertemp411199,X,parsertemp411201,parsertemp411217
-(sum(%*%(/(parsertemp411208,parsertemp411210),/(parsertemp411199,parsertemp411201))),sum(*(X,parsertemp411217)))
::STMT
MATRIX:C,parsertemp174574
FLOAT:numRows
/(sum(==(parsertemp174574,C)),numRows)
::STMT
LITERAL_FLOAT:1.0,2003.0
+(2003.0,1.0)
::STMT
MATRIX:X_orig
FLOAT:parsertemp164950
+(ncol(X_orig),parsertemp164950)
::STMT
MATRIX:parsertemp196005
FLOAT:parsertemp191170,Wf
LITERAL_FLOAT:2.0
*(parsertemp196005,sqrt(/(2.0,*(parsertemp191170,Wf))))
::STMT
MATRIX:tmp,X
FLOAT:x
*(cast.FLOAT(tmp),/(-(x,cast.FLOAT(X)),-(cast.FLOAT(X),cast.FLOAT(X))))
::STMT
MATRIX:W1_rand,parsertemp396312,X,parsertemp396302
FLOAT:float297
LITERAL_FLOAT:0.07808688094430302
%*%(*(0.07808688094430302,W1_rand),t(/(-(X,parsertemp396302),+(parsertemp396312,float297))))
::STMT
MATRIX:newbeta,lambda
LITERAL_FLOAT:2.0
*(cast.FLOAT(lambda),^(cast.FLOAT(newbeta),2.0))
::STMT
MATRIX:parsertemp393583,W4_rand
FLOAT:int268,int639
LITERAL_FLOAT:0.08709382882250233
%*%(*(0.08709382882250233,W4_rand),t(/(-(parsertemp393583,int639),+(parsertemp393583,int268))))
::STMT
MATRIX:Nc
==(Nc,max(Nc))
::STMT
MATRIX:parsertemp31030,parsertemp31032
LITERAL_FLOAT:149.0,2.0,3352500.0
/(^(/(-(parsertemp31030,parsertemp31032),149.0),2.0),3352500.0)
::STMT
MATRIX:parsertemp472404
FLOAT:max_features,n
<=(parsertemp472404,/(^(n,max_features),n))
::STMT
MATRIX:77_Y_row_norm,parsertemp16864
FLOAT:float693
LITERAL_FLOAT:1.0E-6
t(+(sqrt(rowSums(parsertemp16864)),*(<(77_Y_row_norm,float693),1.0E-6)))
::STMT
MATRIX:g_reg,q_CG,p_CG,z
FLOAT:float720,277_tau_1,pq_CG
+(+(*(*(float720,277_tau_1),pq_CG),*(cast.FLOAT(z),cast.FLOAT(q_CG))),sum(*(g_reg,p_CG)))
::STMT
MATRIX:X
X
::STMT
MATRIX:p_CG
FLOAT:trust_delta_sq,z
sqrt(-(*(cast.FLOAT(p_CG),cast.FLOAT(p_CG)),*(cast.FLOAT(p_CG),-(z,trust_delta_sq))))
::STMT
MATRIX:parsertemp389580,parsertemp389560,2365_delta3,W3
FLOAT:int629
LITERAL_FLOAT:1.0
%*%(t(*(-(int629,parsertemp389580),%*%(2365_delta3,W3))),/(-(exp(parsertemp389560),1.0),+(exp(parsertemp389560),1.0)))
::STMT
MATRIX:parsertemp410245,parsertemp410248
FLOAT:int652,float185
LITERAL_FLOAT:0.6666666666666666
min(^(/(-(int652,parsertemp410245),*(float185,parsertemp410248)),0.6666666666666666))
::STMT
MATRIX:Q,R,parsertemp500360,parsertemp500308,parsertemp500359,parsertemp500300
LITERAL_FLOAT:2.0
-(+(%*%(rowSums(parsertemp500300),parsertemp500359),%*%(parsertemp500360,t(parsertemp500308))),*(2.0,%*%(R,t(Q))))
::STMT
MATRIX:y_train,prediction
LITERAL_FLOAT:0.5
==(y_train,>(prediction,0.5))
::STMT
MATRIX:newbeta,lambda
LITERAL_FLOAT:2.0,0.5
*(0.5,*(cast.FLOAT(lambda),^(cast.FLOAT(newbeta),2.0)))
::STMT
MATRIX:R
FLOAT:minSup
>=(R,minSup)
::STMT
MATRIX:w,ssX_p_CG,X
cast.FLOAT(%*%(t(X),*(w,%*%(X,ssX_p_CG))))
::STMT
FLOAT:ratio
LITERAL_FLOAT:15.0
*(15.0,ratio)
::STMT
MATRIX:G,minDist
FLOAT:int625
LITERAL_FLOAT:-1.0
^(+(G,*(!=(G,int625),minDist)),-1.0)
::STMT
LITERAL_FLOAT:3.0,2003.0
+(2003.0,3.0)
::STMT
MATRIX:w,g
FLOAT:alpha,tau
-(abs(-(w,/(g,alpha))),/(tau,alpha))
::STMT
MATRIX:parsertemp72334
FLOAT:rows
cast.FLOAT(/(colSums(rowSums(parsertemp72334)),rows))
::STMT
FLOAT:new_log_l,saturated_log_l
LITERAL_FLOAT:2.0
*(2.0,-(saturated_log_l,new_log_l))
::STMT
MATRIX:n_risk,n_event
/(n_event,*(n_risk,-(n_risk,n_event)))
::STMT
MATRIX:parsertemp283570,tpr,fpr,parsertemp283568
LITERAL_FLOAT:2.0
+(*(cast.FLOAT(tpr),cast.FLOAT(fpr)),sum(/(*(parsertemp283568,parsertemp283570),2.0)))
::STMT
MATRIX:X
LITERAL_FLOAT:-2.0,2.0
+(*(-2.0,%*%(X,t(X))),rowSums(^(X,2.0)))
::STMT
MATRIX:prec,X,mu
*(-(%*%(X,prec),%*%(mu,prec)),-(%*%(X,prec),%*%(mu,prec)))
::STMT
MATRIX:mean,X,weight
-(%*%(t(X),X),%*%(*(t(mean),weight),mean))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,3.0
+(*(3.0,-(i,1.0)),1.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
-(0.0,sum(X))
::STMT
FLOAT:parsertemp85,int24,wt,parsertemp90
LITERAL_FLOAT:1.0,2.0,4.0
*(*(4.0,-(^(wt,int24),1.0)),^(sqrt(/(parsertemp85,parsertemp90)),2.0))
::STMT
MATRIX:lambda,g,beta
LITERAL_FLOAT:-1.0
*(+(g,*(lambda,beta)),-1.0)
::STMT
MATRIX:ubScores,fSizes
FLOAT:minsc
LITERAL_FLOAT:0.0
&(fSizes,&(>(ubScores,minsc),>(ubScores,0.0)))
::STMT
LITERAL_FLOAT:1.0,2.0,4.0,2001.0
*(4.0,-(^(2001.0,2.0),1.0))
::STMT
LITERAL_FLOAT:-1.0
INT:int571,n
diag(rand(n,int571,-1.0,-1.0))
::STMT
LITERAL_FLOAT:1.0
INT:int269,n
diag(rand(n,int269,1.0,1.0))
::STMT
MATRIX:parsertemp71758,is_row_in_samples
FLOAT:sample_block_size
LITERAL_FLOAT:1.0,3.0
-(+(*(sample_block_size,3.0),1.0),*(is_row_in_samples,parsertemp71758))
::STMT
MATRIX:scale_X,w,parsertemp170066,X
*(cast.FLOAT(diag(scale_X)),cast.FLOAT(%*%(t(X),*(w,parsertemp170066))))
::STMT
FLOAT:s
LITERAL_FLOAT:3.0
^(3.0,s)
::STMT
MATRIX:m_iter_err_sum_squared,parsertemp379572,parsertemp379570,parsertemp379563
FLOAT:i_process_item
LITERAL_FLOAT:1.0
sqrt(/(+(-(parsertemp379570,parsertemp379572),+(parsertemp379563,m_iter_err_sum_squared)),-(i_process_item,1.0)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,3.0
+(*(3.0,-(i,1.0)),3.0)
::STMT
MATRIX:X,Y
FLOAT:x
LITERAL_FLOAT:1.0
*(-(1.0,/(-(x,X),-(X,X))),Y)
::STMT
MATRIX:w,parsertemp500601
FLOAT:alpha,tau
LITERAL_FLOAT:0.0
>(-(abs(-(w,parsertemp500601)),/(tau,alpha)),0.0)
::STMT
MATRIX:parsertemp131967
*(ncol(parsertemp131967),nrow(parsertemp131967))
::STMT
MATRIX:parsertemp265718,parsertemp265715
FLOAT:Xm
LITERAL_FLOAT:2.0,4000.0
/(-(+(Xm,trace(parsertemp265715)),*(2.0,cast.FLOAT(parsertemp265718))),4000.0)
::STMT
MATRIX:m_iter_err_sum_squared,m_err
LITERAL_FLOAT:2.0
+(colSums(^(m_err,2.0)),m_iter_err_sum_squared)
::STMT
MATRIX:obj,gs,parsertemp44066,parsertemp44078
FLOAT:parsertemp44082
LITERAL_FLOAT:-0.5
cast.FLOAT(/(-(obj,+(parsertemp44078,parsertemp44082)),*(-0.5,-(gs,parsertemp44066))))
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
-(1.0,/(-(x,cast.FLOAT(X)),-(cast.FLOAT(X),cast.FLOAT(X))))
::STMT
MATRIX:parsertemp552530
LITERAL_FLOAT:0.0
INT:parsertemp552529,idx
+(rand(parsertemp552529,idx,0.0,0.0),t(parsertemp552530))
::STMT
MATRIX:Q,ssX_V,X,parsertemp150463,P_1K
-(*(P_1K,%*%(X,ssX_V)),*(P_1K,%*%(rowSums(Q),parsertemp150463)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,61.0
+(*(-(i,1.0),61.0),61.0)
::STMT
MATRIX:prob,test_Y
FLOAT:threshold
LITERAL_FLOAT:0.0
*(test_Y,==(>(prob,threshold),0.0))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,61.0,34.0
+(*(-(i,1.0),61.0),34.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
!=(rowSums(!=(X,0.0)),0.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,2.0,3.0
+(*(3.0,-(i,1.0)),2.0)
::STMT
MATRIX:ss
LITERAL_FLOAT:0.050000000000000044,1.0,20.0
*(0.050000000000000044,-(/(20.0,ss),1.0))
::STMT
MATRIX:subspace_idx,parsertemp109953
LITERAL_FLOAT:1.0,42.0
<(-(subspace_idx,*(parsertemp109953,42.0)),1.0)
::STMT
MATRIX:parsertemp2832
sum(==(round(parsertemp2832),min(round(parsertemp2832))))
::STMT
MATRIX:parsertemp24100
FLOAT:bin_width
LITERAL_FLOAT:1.0,0.5
+(round(-(/(parsertemp24100,bin_width),0.5)),1.0)
::STMT
MATRIX:p,Z
cast.FLOAT(%*%(t(p),%*%(Z,p)))
::STMT
MATRIX:By2,By1
LITERAL_FLOAT:3.0
*(3.0,+(By1,By2))
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.0,100000.0
*(m2X,/(100000.0,-(100000.0,1.0)))
::STMT
MATRIX:C,parsertemp11014
LITERAL_FLOAT:1000.0,100.0
*(/(sum(==(parsertemp11014,C)),1000.0),100.0)
::STMT
MATRIX:parsertemp2832
sum(==(round(parsertemp2832),max(round(parsertemp2832))))
::STMT
LITERAL_FLOAT:3.5355339059327378
3.5355339059327378
::STMT
FLOAT:dist
+(cast.MATRIX(dist),t(cast.MATRIX(dist)))
::STMT
MATRIX:parsertemp409054,ctab
FLOAT:threshold
>(/(parsertemp409054,rowSums(ctab)),threshold)
::STMT
MATRIX:_sbcvar95,_sbcvar97
FLOAT:221_my
LITERAL_FLOAT:0.0
+(%*%(_sbcvar95,_sbcvar97),-(0.0,221_my))
::STMT
LITERAL_FLOAT:0.0
INT:int373,int452,int579,int618
%*%(t(rand(int373,int618,0.0,0.0)),rand(int452,int579,0.0,0.0))
::STMT
MATRIX:leaf_ids
FLOAT:boundary_left,step_size
&(!(<(leaf_ids,+(boundary_left,step_size))),<(leaf_ids,+(+(boundary_left,step_size),step_size)))
::STMT
MATRIX:parsertemp163357
LITERAL_FLOAT:1.0
t(/(1.0,parsertemp163357))
::STMT
MATRIX:ss
LITERAL_FLOAT:1.0
/(1.0,t(ss))
::STMT
MATRIX:parsertemp149867,Y
FLOAT:int506
LITERAL_FLOAT:100.0
*(/(sum(==(parsertemp149867,int506)),nrow(Y)),100.0)
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.06835859270246632
*(0.06835859270246632,W1_rand)
::STMT
MATRIX:221_CFreqs,_sbcvar95,_sbcvar98
FLOAT:int359
LITERAL_FLOAT:1000.0
/(sum(*(+(221_CFreqs,int359),%*%(_sbcvar95,_sbcvar98))),-(1000.0,nrow(_sbcvar95)))
::STMT
MATRIX:sv,Y,Xd,out
sum(*(*(*(out,sv),Y),Xd))
::STMT
MATRIX:w,X,y
t(-(%*%(X,w),y))
::STMT
MATRIX:output1,dataset
LITERAL_FLOAT:0.0,0.16
==(<(abs(-(output1,dataset)),0.16),0.0)
::STMT
MATRIX:w,out
FLOAT:lambda
LITERAL_FLOAT:2.0,0.5
+(*(0.5,sum(*(out,out))),*(/(lambda,2.0),sum(*(w,w))))
::STMT
MATRIX:parsertemp447299
LITERAL_FLOAT:1.0
t(-(parsertemp447299,1.0))
::STMT
MATRIX:w,X,y
%*%(t(X),-(%*%(X,w),y))
::STMT
MATRIX:parsertemp170251,lt_pos_neg
FLOAT:int508
LITERAL_FLOAT:2.0,0.5
*(-(0.5,lt_pos_neg),exp(/(-(int508,parsertemp170251),2.0)))
::STMT
MATRIX:g_new,g_old
/(sum(*(g_new,g_new)),sum(*(g_old,g_old)))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0,1.0
==(<(X,1.0),0.0)
::STMT
MATRIX:sv,Xd
FLOAT:dd
+(dd,sum(*(*(Xd,sv),Xd)))
::STMT
MATRIX:parsertemp115729,parsertemp115724
FLOAT:eAvg,n2
LITERAL_FLOAT:0.050000000000000044,1.0,0.95
-(*(0.95,-(/(parsertemp115724,eAvg),1.0)),*(0.050000000000000044,-(*(parsertemp115729,n2),1.0)))
::STMT
MATRIX:id
diag(==(id,t(id)))
::STMT
MATRIX:termination_bitmap,parsertemp222665
FLOAT:int772,parsertemp222668,int577
min(+(*(parsertemp222665,termination_bitmap),*(+(parsertemp222668,int772),-(int577,termination_bitmap))))
::STMT
MATRIX:E,X
LITERAL_FLOAT:-1.0
*(t(colSums(*(X,E))),-1.0)
::STMT
MATRIX:parsertemp150393
LITERAL_FLOAT:0.0,0.1
sum(==(<(abs(parsertemp150393),0.1),0.0))
::STMT
MATRIX:means,parsertemp560511
LITERAL_FLOAT:2.0
^(rowSums(*(means,parsertemp560511)),2.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0,2.0
-(1.0,/(exp(finite_linear_terms),2.0))
::STMT
MATRIX:scale_lambda,parsertemp150455
LITERAL_FLOAT:1.0E-5
*(%*%(scale_lambda,parsertemp150455),1.0E-5)
::STMT
MATRIX:X
FLOAT:index
LITERAL_FLOAT:1.0,2.0
+(*(index,-(ncol(X),1.0)),2.0)
::STMT
MATRIX:p_gaps_vector
LITERAL_FLOAT:0.0
t(>(p_gaps_vector,0.0))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
-(ncol(X),2.0)
::STMT
MATRIX:F
FLOAT:q
LITERAL_FLOAT:1.0
*(sum(F),-(q,1.0))
::STMT
MATRIX:X,Centering
LITERAL_FLOAT:2.0
colSums(^(-(X,Centering),2.0))
::STMT
MATRIX:m_iter_err_sum_squared,parsertemp379560,m_err_mean,m_iter_err_sum,m_err
FLOAT:int71,int123,i_process_item,int826
+(-(*(^(m_err_mean,int123),i_process_item),*(*(int826,m_err_mean),+(parsertemp379560,m_iter_err_sum))),+(colSums(^(m_err,int71)),m_iter_err_sum_squared))
::STMT
MATRIX:d,alpha
*(cast.FLOAT(alpha),d)
::STMT
MATRIX:prevTK2,totalE,X2
*(==(%*%(X2,t(prevTK2)),t(rowSums(prevTK2))),totalE)
::STMT
FLOAT:parsertemp166531
LITERAL_FLOAT:10.0
*(10.0,parsertemp166531)
::STMT
MATRIX:parsertemp170136
FLOAT:278_sq_root_d,parsertemp170150,pq_CG
LITERAL_FLOAT:0.5
*(*(0.5,/(+(parsertemp170150,278_sq_root_d),sum(parsertemp170136))),pq_CG)
::STMT
MATRIX:FXY
LITERAL_FLOAT:1.0
-(ncol(FXY),1.0)
::STMT
MATRIX:G,authorities
/(%*%(t(G),%*%(G,authorities)),max(%*%(t(G),%*%(G,authorities))))
::STMT
MATRIX:shift_X,ssX_newbeta,z,beta
+(ssX_newbeta,%*%(t(shift_X),+(beta,z)))
::STMT
MATRIX:_sbcvar96,_sbcvar95,_sbcvar98
LITERAL_FLOAT:-1.0
*(+(%*%(_sbcvar95,_sbcvar96),-1.0),%*%(_sbcvar95,_sbcvar98))
::STMT
MATRIX:V,y
LITERAL_FLOAT:-1.0
*(%*%(t(V),y),-1.0)
::STMT
FLOAT:idx
LITERAL_FLOAT:64.0
-(64.0,idx)
::STMT
FLOAT:e,mu,epochs
LITERAL_FLOAT:0.999,1.0
/(-(0.999,mu),-(+(1.0,epochs),e))
::STMT
LITERAL_FLOAT:1.0E-6
INT:int362,int452
rand(int452,int362,1.0E-6,1.0E-6)
::STMT
FLOAT:parsertemp22485,parsertemp22452,parsertemp22453
abs(/(parsertemp22485,sqrt(+(parsertemp22452,parsertemp22453))))
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0,2.0
INT:int411,int621
rand(int411,int621,*(2.0,*(-1.0,sum(parsertemp43626))),*(2.0,*(-1.0,sum(parsertemp43626))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(^(sum(round(W)),2.0),+(sum(round(W)),1.0))
::STMT
FLOAT:int1,parsertemp86,int43,parsertemp87,int280,wt
sqrt(/(*(*(int280,wt),-(wt,int1)),*(*(parsertemp86,parsertemp87),+(wt,int43))))
::STMT
MATRIX:classes
FLOAT:split
+(split,nrow(classes))
::STMT
MATRIX:V,y
LITERAL_FLOAT:-1.0
*(*(%*%(t(V),y),-1.0),*(%*%(t(V),y),-1.0))
::STMT
FLOAT:n_group_cols
LITERAL_FLOAT:3.0
+(3.0,n_group_cols)
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:2.29128784747792
/(2.29128784747792,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:means,Y_counts,Y,parsertemp560603
FLOAT:parsertemp560604
LITERAL_FLOAT:2.0
^(-(-(Y,means),%*%(Y_counts,/(parsertemp560603,parsertemp560604))),2.0)
::STMT
MATRIX:2883_ctab
FLOAT:int703
LITERAL_FLOAT:1.0
sum(==(rowSums(!=(2883_ctab,int703)),1.0))
::STMT
MATRIX:g_new,parsertemp468777,tmp,g_old
/(cast.FLOAT(%*%(t(g_new),-(parsertemp468777,tmp))),cast.FLOAT(%*%(t(g_old),g_old)))
::STMT
FLOAT:norm_r2,norm_r2_initial
sqrt(/(norm_r2,norm_r2_initial))
::STMT
MATRIX:Y
FLOAT:parsertemp185166
-(parsertemp185166,min(Y))
::STMT
MATRIX:X,parsertemp386475
FLOAT:int965
sqrt(+(+(*(int965,parsertemp386475),X),t(X)))
::STMT
MATRIX:2701_mask,doutd3
LITERAL_FLOAT:0.5
*(/(2701_mask,0.5),doutd3)
::STMT
MATRIX:svUpBnd,R,svLowBnd
*(<=(R,cast.FLOAT(svUpBnd)),>(R,cast.FLOAT(svLowBnd)))
::STMT
MATRIX:P12,map
LITERAL_FLOAT:0.0
rowSums(!=(%*%(map,P12),0.0))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,51.0,64.0
+(*(-(i,1.0),64.0),51.0)
::STMT
MATRIX:parsertemp1531,y
FLOAT:int824
LITERAL_FLOAT:2.0
sum(^(%*%(-(int824,parsertemp1531),y),2.0))
::STMT
FLOAT:K
LITERAL_FLOAT:11.0
*(11.0,K)
::STMT
FLOAT:C,K
LITERAL_FLOAT:1.0,2.0
*(*(C,+(C,1.0)),^(K,2.0))
::STMT
MATRIX:prediction,target
LITERAL_FLOAT:2.0,0.5
*(0.5,rowSums(^(-(prediction,target),2.0)))
::STMT
MATRIX:os,y,o
FLOAT:int829
LITERAL_FLOAT:1.0
+(1.0,exp(*(*(y,int829),+(o,os))))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005
sqrt(*(1.0005,m2))
::STMT
MATRIX:lambda,scale_X,p_CG,w,parsertemp170066,X
+(*(lambda,p_CG),*(cast.FLOAT(diag(scale_X)),%*%(t(X),*(w,parsertemp170066))))
::STMT
MATRIX:parsertemp382670,X
LITERAL_FLOAT:0.0,2.0
sum(*(!=(X,0.0),^(-(parsertemp382670,X),2.0)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,60.0,64.0
+(*(-(i,1.0),64.0),60.0)
::STMT
FLOAT:C,Hf,Wf
LITERAL_FLOAT:2.0
/(2.0,*(*(C,Hf),Wf))
::STMT
MATRIX:linear_terms,Y
FLOAT:parsertemp171226,link_power,parsertemp171223,int493
/(*(^(linear_terms,-(parsertemp171226,int493)),-(Y,^(linear_terms,parsertemp171223))),link_power)
::STMT
FLOAT:int276,z,pp_CG,parsertemp170091
LITERAL_FLOAT:0.5
*(0.5,/(+(*(z,int276),sqrt(parsertemp170091)),pp_CG))
::STMT
MATRIX:r,c,F
LITERAL_FLOAT:2.0
^(-(F,/(%*%(r,c),sum(F))),2.0)
::STMT
FLOAT:float658,float239,float677,float221
LITERAL_FLOAT:2.0
INT:int110,int752,int269,int936
+(sum(^(rand(int752,int936,float221,float239),2.0)),sum(^(rand(int269,int110,float677,float658),2.0)))
::STMT
MATRIX:R,B,parsertemp503780
%*%(t(+(R,diag(parsertemp503780))),B)
::STMT
LITERAL_FLOAT:1.0,20.0
+(20.0,1.0)
::STMT
MATRIX:X,mu,parsertemp183827,ScaleFactor
FLOAT:int264,N
LITERAL_FLOAT:1.0
-(/(%*%(t(X),/(X,ScaleFactor)),-(N,1.0)),*(/(N,-(N,int264)),%*%(t(mu),/(parsertemp183827,N))))
::STMT
LITERAL_FLOAT:1.0,7000.0
-(7000.0,1.0)
::STMT
MATRIX:knn_index
FLOAT:s
LITERAL_FLOAT:100.0
*(/(s,100.0),ncol(knn_index))
::STMT
FLOAT:p,P,Q,q,int89
+(+(+(+(int89,p),P),Q),q)
::STMT
FLOAT:2344_s_err_vars,2344_s_err_mean
LITERAL_FLOAT:-1.0,0.001
/(-(*(0.001,-1.0),2344_s_err_mean),2344_s_err_vars)
::STMT
MATRIX:Y
FLOAT:class
LITERAL_FLOAT:1.0,2.0
-(*(2.0,==(Y,class)),1.0)
::STMT
FLOAT:int520,int776,parsertemp459331,Win
LITERAL_FLOAT:2.0,64.0
/(2.0,*(*(64.0,/(parsertemp459331,int776)),/(/(Win,int520),2.0)))
::STMT
MATRIX:W1_rand,stds,parsertemp400568
LITERAL_FLOAT:0.08333333333333333
t(%*%(*(0.08333333333333333,W1_rand),t(/(parsertemp400568,stds))))
::STMT
MATRIX:p_CG
FLOAT:int158,parsertemp254749,z,parsertemp254772,int517
*(parsertemp254772,/(-(*(z,int158),sqrt(parsertemp254749)),sum(^(p_CG,int517))))
::STMT
MATRIX:ytest
FLOAT:mean_y_test,int293
LITERAL_FLOAT:0.0,1.0,2.0
/(-(^(cast.FLOAT(ytest),2.0),*(1.0,^(mean_y_test,int293))),0.0)
::STMT
MATRIX:X2
FLOAT:minSup
>=(t(colSums(X2)),minSup)
::STMT
MATRIX:B,S
LITERAL_FLOAT:2.0
^(+(B,S),2.0)
::STMT
MATRIX:parsertemp31105,parsertemp31107
FLOAT:int559,int592
LITERAL_FLOAT:1.0,2.0,2000.0
/(^(/(-(parsertemp31105,parsertemp31107),-(int559,int592)),2.0),*(^(2000.0,2.0),-(2000.0,1.0)))
::STMT
MATRIX:D,parsertemp570375,classMeans
LITERAL_FLOAT:1.0,2.0
*(/(1.0,2.0),%*%(%*%(-(D,classMeans),parsertemp570375),t(-(D,classMeans))))
::STMT
FLOAT:link_power
LITERAL_FLOAT:0.0,1.0
-(/(0.0,link_power),1.0)
::STMT
FLOAT:parsertemp496694,int349,parsertemp496686,n,a0
LITERAL_FLOAT:1.0,2.0
*(/(1.0,*(2.0,n)),+(parsertemp496694,/(^(parsertemp496686,int349),a0)))
::STMT
MATRIX:yhat
FLOAT:ytest,int615
LITERAL_FLOAT:1.0,2.0
-(^(-(cast.FLOAT(ytest),cast.FLOAT(yhat)),2.0),*(1.0,^(/(ytest,int615),2.0)))
::STMT
MATRIX:id
diag(==(id,cast.FLOAT(id)))
::STMT
MATRIX:parsertemp456742,X,y
LITERAL_FLOAT:0.0
%*%(t(-(0.0,%*%(parsertemp456742,y))),%*%(t(X),y))
::STMT
MATRIX:parsertemp410081,d_r_rev,parsertemp410090
FLOAT:o
LITERAL_FLOAT:-1.0
-(+(*(cast.FLOAT(parsertemp410081),-1.0),cast.FLOAT(%*%(d_r_rev,parsertemp410090))),o)
::STMT
MATRIX:parsertemp570396,classVars
*(diag(parsertemp570396),max(classVars))
::STMT
MATRIX:subspace_idx,parsertemp72201
FLOAT:subvector_size
LITERAL_FLOAT:1.0
/(1.0,<(-(subspace_idx,*(parsertemp72201,subvector_size)),1.0))
::STMT
MATRIX:252_X,252_K
*(cast.FLOAT(252_K),-(cast.FLOAT(252_X),cast.FLOAT(252_X)))
::STMT
MATRIX:is_natural_parameter_log_zero,Y
sum(*(is_natural_parameter_log_zero,abs(Y)))
::STMT
MATRIX:X_Train,X_Test
+(sum(X_Train),sum(X_Test))
::STMT
MATRIX:G,authorities,hubs
LITERAL_FLOAT:2.0
^(-(/(%*%(G,authorities),max(hubs)),hubs),2.0)
::STMT
FLOAT:parsertemp115827,sum_sq_y_test,n
LITERAL_FLOAT:1.0
sqrt(/(-(sum_sq_y_test,*(n,parsertemp115827)),-(n,1.0)))
::STMT
FLOAT:link_power
LITERAL_FLOAT:2.0
-(/(2.0,link_power),2.0)
::STMT
FLOAT:link_power
LITERAL_FLOAT:0.0,2.0
-(/(0.0,link_power),2.0)
::STMT
MATRIX:images
LITERAL_FLOAT:2.0,255.0
*(/(images,255.0),2.0)
::STMT
MATRIX:s,w
LITERAL_FLOAT:1.0
*(1.0,cast.FLOAT(%*%(t(w),s)))
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.000010000100001
*(m2X,1.000010000100001)
::STMT
FLOAT:check_max,check_min
/(+(check_min,check_max),-(check_max,check_min))
::STMT
MATRIX:_sbcvar14,_sbcvar13
FLOAT:int143,parsertemp13703,int127
LITERAL_FLOAT:999.0
/(sum(*(-(_sbcvar13,int143),_sbcvar14)),*(999.0,/(*(parsertemp13703,int127),999.0)))
::STMT
FLOAT:wcss
LITERAL_FLOAT:1.0E-6
*(1.0E-6,wcss)
::STMT
MATRIX:parsertemp31763,parsertemp31756,parsertemp31758,maxsc
FLOAT:minSup
LITERAL_FLOAT:0.0
&(&(>=(t(parsertemp31756),minSup),>(t(parsertemp31763),0.0)),|(>(t(parsertemp31758),0.0),>(maxsc,0.0)))
::STMT
MATRIX:r,parsertemp44050
sqrt(sum(*(-(r,parsertemp44050),-(r,parsertemp44050))))
::STMT
FLOAT:deviance_nodisp
LITERAL_FLOAT:0.1
+(deviance_nodisp,0.1)
::STMT
MATRIX:y
FLOAT:n
LITERAL_FLOAT:2.0
/(sum(^(y,2.0)),n)
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int467,m
sum(abs(rand(m,int467,0.0,1.0)))
::STMT
MATRIX:parsertemp436667,precisions
LITERAL_FLOAT:1.0
INT:parsertemp436666,int896
*(rand(int896,parsertemp436666,1.0,1.0),t(rowSums(*(parsertemp436667,precisions))))
::STMT
MATRIX:p,q,lambda
*(p,+(q,*(lambda,p)))
::STMT
MATRIX:svUpBnd,R,svLowBnd
diag(*(<=(R,cast.FLOAT(svUpBnd)),>(R,cast.FLOAT(svLowBnd))))
::STMT
MATRIX:lambda,B,Grad
LITERAL_FLOAT:2.0
sum(^(+(Grad,*(lambda,B)),2.0))
::STMT
MATRIX:W4_rand
LITERAL_FLOAT:0.08720414403938946
*(0.08720414403938946,W4_rand)
::STMT
MATRIX:parsertemp415351,parsertemp415356
FLOAT:parsertemp415362,parsertemp415358,n
LITERAL_FLOAT:1.0
-(1.0,/(-(sum(parsertemp415356),*(n,parsertemp415358)),-(sum(parsertemp415351),*(n,parsertemp415362))))
::STMT
MATRIX:y_residual,ytest
FLOAT:int275,avg_res,mean_y_test,int699,int768,int838
/(-(sum(^(y_residual,int838)),*($1:nrow(ytest),^(avg_res,int275))),-(sum(^(ytest,int768)),*($1,^(mean_y_test,int699))))
::STMT
MATRIX:grad
FLOAT:int211
LITERAL_FLOAT:2.0
sqrt(sum(^(-(int211,grad),2.0)))
::STMT
MATRIX:_sbcvar92,parsertemp27721,220_r,220_c,220_E
FLOAT:int757
LITERAL_FLOAT:2.0,1.0E-4
/(^(-(_sbcvar92,+(parsertemp27721,220_E)),2.0),+(*(==(220_E,int757),1.0E-4),/(%*%(220_r,220_c),sum(_sbcvar92))))
::STMT
MATRIX:s
LITERAL_FLOAT:1.0
/(1.0,s)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
/(-1.0,linear_terms)
::STMT
MATRIX:184_probs,183_dpred,parsertemp146939
FLOAT:beta1
LITERAL_FLOAT:1.0
*(-(1.0,beta1),colSums(-(*(183_dpred,184_probs),*(184_probs,parsertemp146939))))
::STMT
MATRIX:r,Hd
FLOAT:parsertemp44049
sum(*(-(r,*(parsertemp44049,Hd)),-(r,*(parsertemp44049,Hd))))
::STMT
MATRIX:parsertemp222310
FLOAT:parsertemp222313
LITERAL_FLOAT:0.5
+(/(parsertemp222310,parsertemp222313),0.5)
::STMT
MATRIX:parsertemp414372,X
FLOAT:int923,int309
LITERAL_FLOAT:200.0,2.0
-(t(colSums(^(X,int923))),*(200.0,^(/(parsertemp414372,int309),2.0)))
::STMT
FLOAT:k
LITERAL_FLOAT:1.0,4.0
-(+(k,4.0),1.0)
::STMT
FLOAT:parsertemp477829,parsertemp477814,2814_K,2814_X,2814_Y,inp_x
LITERAL_FLOAT:1.0
+(*(-(*(2814_K,2814_X),-(2814_Y,2814_Y)),-(1.0,/(parsertemp477814,2814_X))),*(+(*(parsertemp477829,2814_X),-(2814_Y,2814_Y)),/(-(inp_x,2814_X),-(2814_X,2814_X))))
::STMT
FLOAT:output_values,log_odds,float34
LITERAL_FLOAT:1.0,2.7182818284
+(1.0,^(2.7182818284,+(log_odds,*(float34,output_values))))
::STMT
FLOAT:run_index
LITERAL_FLOAT:24.0
*(24.0,run_index)
::STMT
MATRIX:p,parsertemp1934,parsertemp1935
FLOAT:eps
cast.FLOAT(%*%(t(p),+(%*%(parsertemp1934,parsertemp1935),*(eps,p))))
::STMT
MATRIX:parsertemp43620,parsertemp43619
FLOAT:float10
LITERAL_FLOAT:1.0
*(/(1.0,+(1.0,exp(parsertemp43619))),-(1.0,/(1.0,+(float10,parsertemp43620))))
::STMT
MATRIX:X
FLOAT:N
/(colSums(X),N)
::STMT
MATRIX:parsertemp31024,parsertemp31022
FLOAT:int627
LITERAL_FLOAT:1.0,2.0,100.0
^(/(-(colSums(parsertemp31022),*(int627,parsertemp31024)),-(100.0,1.0)),2.0)
::STMT
MATRIX:finite_linear_terms
FLOAT:int949
LITERAL_FLOAT:0.0,2.0
exp(/(-(0.0,^(finite_linear_terms,int949)),2.0))
::STMT
MATRIX:os,y,o
LITERAL_FLOAT:-1.0
*(*(y,-1.0),+(o,os))
::STMT
MATRIX:g
LITERAL_FLOAT:2.0,0.01
*(0.01,sum(^(g,2.0)))
::STMT
MATRIX:Y,parsertemp171319
FLOAT:one_over_sqrt_two_pi,float696
LITERAL_FLOAT:2.0
*(*(exp(/(parsertemp171319,float696)),^(one_over_sqrt_two_pi,2.0)),rowSums(Y))
::STMT
MATRIX:negSampleMeans
LITERAL_FLOAT:2.0,1500.0
*(1500.0,^(negSampleMeans,2.0))
::STMT
FLOAT:parsertemp169812
LITERAL_FLOAT:2.302585092994046,0.5
round(-(/(parsertemp169812,2.302585092994046),0.5))
::STMT
MATRIX:P,X,Y
%*%(t(X),-(P,Y))
::STMT
MATRIX:parsertemp285516
FLOAT:pp,parsertemp285518,parsertemp285520
LITERAL_FLOAT:-1.0
/(+(*(sum(parsertemp285516),-1.0),sqrt(-(parsertemp285518,parsertemp285520))),pp)
::STMT
LITERAL_FLOAT:0.08692913816996169
0.08692913816996169
::STMT
MATRIX:WM,Y,CMeans
-(CMeans,/(sum(*(Y,WM)),sum(WM)))
::STMT
MATRIX:colSD,colMean
LITERAL_FLOAT:3.0
+(colMean,*(3.0,colSD))
::STMT
MATRIX:p,q,V,parsertemp1939
FLOAT:norm_r2
LITERAL_FLOAT:1.0E-8
*(/(norm_r2,cast.FLOAT(%*%(parsertemp1939,q))),+(%*%(t(V),%*%(V,p)),*(1.0E-8,p)))
::STMT
MATRIX:subspace_idx,parsertemp109953
LITERAL_FLOAT:42.0
-(subspace_idx,*(parsertemp109953,42.0))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
*(^(exp(linear_terms),-(1.0,var_power)),exp(linear_terms))
::STMT
MATRIX:scale_lambda
LITERAL_FLOAT:0.001
*(scale_lambda,0.001)
::STMT
MATRIX:X
FLOAT:a0
LITERAL_FLOAT:2.0
/(^(cast.FLOAT(X),2.0),a0)
::STMT
MATRIX:parsertemp13711,_sbcvar14
FLOAT:parsertemp13704,float583
LITERAL_FLOAT:1.0,999.0
-(1.0,/(sum(*(parsertemp13711,_sbcvar14)),*(999.0,/(parsertemp13704,float583))))
::STMT
MATRIX:P,X,Y
LITERAL_FLOAT:2.0
sum(^(%*%(t(X),-(P,Y)),2.0))
::STMT
MATRIX:Y_counts,vars
FLOAT:dispersion
/(*(dispersion,colSums(vars)),sum(Y_counts))
::STMT
MATRIX:termination_bitmap,parsertemp222665,parsertemp222670
FLOAT:parsertemp222669
==(*(parsertemp222665,termination_bitmap),min(+(*(parsertemp222665,termination_bitmap),*(parsertemp222669,parsertemp222670))))
::STMT
MATRIX:parsertemp31026,parsertemp31033
FLOAT:int571,parsertemp31034,int594,int55,parsertemp31027,int98,int225,int812,int171,int19
LITERAL_FLOAT:2.0
+(/(^(/(parsertemp31026,parsertemp31027),2.0),*(^(int571,int98),-(int225,int171))),/(^(/(parsertemp31033,parsertemp31034),2.0),*(^(int19,int594),-(int55,int812))))
::STMT
MATRIX:X_train
LITERAL_FLOAT:256.0
/(nrow(X_train),256.0)
::STMT
MATRIX:r,scale_X,shift_X
+(*(scale_X,r),*(cast.FLOAT(r),shift_X))
::STMT
MATRIX:y_hat,b,R
-(-(b,%*%(R,y_hat)),y_hat)
::STMT
MATRIX:b,H,parsertemp410187,parsertemp410189
%*%(%*%(t(b),-(+(H,parsertemp410187),diag(parsertemp410189))),b)
::STMT
MATRIX:U,V
FLOAT:int540,int757
LITERAL_FLOAT:5.0E-7
*(5.0E-7,+(sum(^(U,int540)),sum(^(V,int757))))
::STMT
MATRIX:subspace_idx,parsertemp75105
LITERAL_FLOAT:32.0
-(subspace_idx,*(parsertemp75105,32.0))
::STMT
MATRIX:X
LITERAL_FLOAT:-1.0
*(*(t(colSums(X)),-1.0),-1.0)
::STMT
MATRIX:parsertemp410245,parsertemp410248
FLOAT:int865,float295
LITERAL_FLOAT:0.6666666666666666
max(^(/(-(int865,parsertemp410245),*(float295,parsertemp410248)),0.6666666666666666))
::STMT
MATRIX:parsertemp146931,184_dtemp,parsertemp146929,184_unnorm_probs,parsertemp146936
colSums(-(*(*(parsertemp146929,parsertemp146931),/(184_unnorm_probs,parsertemp146936)),*(/(184_unnorm_probs,parsertemp146936),rowSums(184_dtemp))))
::STMT
MATRIX:P
/(+(P,t(P)),sum(+(P,t(P))))
::STMT
MATRIX:parsertemp265709,tmp,Z,XtZ
FLOAT:ZtZ_sum
*(tmp,%*%(t(/(XtZ,ZtZ_sum)),/(%*%(parsertemp265709,Z),sum(tmp))))
::STMT
MATRIX:test_val
LITERAL_FLOAT:128.0
/(nrow(test_val),128.0)
::STMT
MATRIX:s,w
%*%(t(+(w,s)),+(w,s))
::STMT
MATRIX:Hdiff,betamax,beta
FLOAT:INF,int983,int39
==(+(*(>=(Hdiff,int983),betamax),*(<(Hdiff,int39),beta)),INF)
::STMT
MATRIX:subspace_idx,parsertemp73653
LITERAL_FLOAT:16.0
-(subspace_idx,*(parsertemp73653,16.0))
::STMT
MATRIX:subspace_idx,parsertemp107049
LITERAL_FLOAT:7.0
-(subspace_idx,*(parsertemp107049,7.0))
::STMT
LITERAL_FLOAT:1.8378770664093453
1.8378770664093453
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:parsertemp44015,delta2
-(delta2,%*%(t(-(s,parsertemp44016)),-(s,*(parsertemp44015,d))))
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0
sum(*(parsertemp43626,-1.0))
::STMT
MATRIX:r,d,parsertemp43999
LITERAL_FLOAT:2.0
/(sum(^(r,2.0)),cast.FLOAT(%*%(t(d),+(d,parsertemp43999))))
::STMT
MATRIX:left,tmp,right
==(%*%(tmp,left),%*%(tmp,right))
::STMT
FLOAT:Z_logl,dispersion
/(Z_logl,sqrt(dispersion))
::STMT
FLOAT:int81,ytest,int874,parsertemp454076
LITERAL_FLOAT:0.0
sqrt(/(-(^(ytest,int874),*(int81,parsertemp454076)),0.0))
::STMT
MATRIX:r_LS
FLOAT:norm_r2_LS,p_LS,parsertemp170552,lambda_LS
LITERAL_FLOAT:2.0
^(+(cast.FLOAT(r_LS),*(/(norm_r2_LS,p_LS),+(parsertemp170552,lambda_LS))),2.0)
::STMT
MATRIX:subspace_idx,parsertemp72201
LITERAL_FLOAT:8.0
-(subspace_idx,*(parsertemp72201,8.0))
::STMT
MATRIX:w_X,z_LS,X
/(nrow(X),*(cast.FLOAT(w_X),cast.FLOAT(z_LS)))
::STMT
MATRIX:col,more_than_ub,parsertemp24107,parsertemp24102,parsertemp24103
FLOAT:int331,num_bins
LITERAL_FLOAT:1.0
+(+(*(-(parsertemp24107,more_than_ub),+(parsertemp24103,int331)),*(>(col,num_bins),num_bins)),<(+(round(parsertemp24102),1.0),1.0))
::STMT
MATRIX:parsertemp171315,Y,parsertemp171307,parsertemp171319
FLOAT:float945,float368,float541
*(*(exp(/(parsertemp171319,float368)),*(/(float945,parsertemp171307),+(float541,parsertemp171315))),rowSums(Y))
::STMT
FLOAT:int92,n
LITERAL_FLOAT:1.0,2.0,0.02
*(-(+(-(n,int92),1.0),2.0),0.02)
::STMT
MATRIX:subspace_idx,parsertemp75105
LITERAL_FLOAT:1.0,32.0
<(-(subspace_idx,*(parsertemp75105,32.0)),1.0)
::STMT
MATRIX:Y_prob,Y
*(rowSums(Y),-(*(Y,Y_prob),*(Y,Y_prob)))
::STMT
MATRIX:neighbors
-(neighbors,diag(diag(neighbors)))
::STMT
MATRIX:X
LITERAL_FLOAT:-1.0
*(t(colSums(X)),-1.0)
::STMT
MATRIX:X,Y,K
FLOAT:int87,x
*(+(*(*(K,int87),-(X,X)),-(Y,Y)),/(-(x,X),-(X,X)))
::STMT
MATRIX:resp
LITERAL_FLOAT:2.22E-16
t(+(colSums(resp),2.22E-16))
::STMT
MATRIX:TopIxs,TopVals
LITERAL_FLOAT:0.0
*(TopIxs,>(TopVals,0.0))
::STMT
MATRIX:p_CG
FLOAT:parsertemp170089,z,pp_CG
LITERAL_FLOAT:-1.0
-(*(*(cast.FLOAT(z),sum(p_CG)),-1.0),sqrt(-(*(z,z),*(pp_CG,parsertemp170089))))
::STMT
MATRIX:r,X,y
FLOAT:int400
cast.FLOAT(%*%(t(-(int400,r)),%*%(t(X),y)))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0E-6
*(1.0E-6,cast.FLOAT(%*%(t(X),X)))
::STMT
MATRIX:d,exp_Xb,X
rev(*(%*%(X,d),exp_Xb))
::STMT
MATRIX:R
FLOAT:i8
LITERAL_FLOAT:24.0
-(ncol(R),*(24.0,i8))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.21483446221182986
*(0.21483446221182986,W2_rand)
::STMT
LITERAL_FLOAT:1.0E-12
INT:int552,int757
diag(rand(int552,int757,1.0E-12,1.0E-12))
::STMT
MATRIX:C,parsertemp174574
FLOAT:numRows
LITERAL_FLOAT:100.0
*(/(sum(==(parsertemp174574,C)),numRows),100.0)
::STMT
FLOAT:a0
LITERAL_FLOAT:1.0E-5
+(a0,1.0E-5)
::STMT
MATRIX:parsertemp149307,parsertemp149305
FLOAT:parsertemp149336,obj,parsertemp149333,parsertemp149340,float839
LITERAL_FLOAT:-0.5
/(-(obj,+(+(parsertemp149333,parsertemp149336),*(float839,parsertemp149340))),*(-0.5,-(sum(parsertemp149305),sum(parsertemp149307))))
::STMT
MATRIX:Y,Xd,parsertemp2775,out
FLOAT:int664,int14
*(*(*(-(int14,parsertemp2775),>(out,int664)),Y),Xd)
::STMT
MATRIX:2903_mask,dout,2904_X,2902_W
FLOAT:2903_p
LITERAL_FLOAT:0.0
*(>(2904_X,0.0),*(/(2903_mask,2903_p),%*%(dout,t(2902_W))))
::STMT
MATRIX:PRED,GT
/(sum(*(PRED,GT)),sum(PRED))
::STMT
FLOAT:AIC_best_orig
LITERAL_FLOAT:0.001
abs(*(0.001,AIC_best_orig))
::STMT
MATRIX:s,d
FLOAT:norm_r2,alpha_deno
%*%(t(+(s,*(norm_r2,d))),+(s,*(/(norm_r2,alpha_deno),d)))
::STMT
MATRIX:resp,parsertemp443532,X,weight
LITERAL_FLOAT:2.22E-16
*(t(/(%*%(parsertemp443532,X),t(weight))),+(colSums(resp),2.22E-16))
::STMT
FLOAT:x
LITERAL_FLOAT:-1.0
exp(*(x,-1.0))
::STMT
FLOAT:num_records
LITERAL_FLOAT:3840.0
/(3840.0,num_records)
::STMT
MATRIX:R,dssm
FLOAT:2_n
LITERAL_FLOAT:1.0
-(/(2_n,-(R,dssm)),1.0)
::STMT
MATRIX:w,wnew
FLOAT:sigma,alpha
LITERAL_FLOAT:0.5
*(*(*(0.5,sigma),alpha),sum(*(-(wnew,w),-(wnew,w))))
::STMT
MATRIX:r,parsertemp1936,parsertemp1937
FLOAT:parsertemp1941,norm_r2
LITERAL_FLOAT:0.0
-(0.0,+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))))
::STMT
MATRIX:qLow,length,qUp
LITERAL_FLOAT:2.0
>=(rowSums(|(<(length,qLow),>(length,qUp))),2.0)
::STMT
MATRIX:_sbcvar11
LITERAL_FLOAT:1000.0
-(_sbcvar11,/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0))
::STMT
MATRIX:minD,D
rowSums(<=(D,minD))
::STMT
LITERAL_FLOAT:0.99
0.99
::STMT
MATRIX:parsertemp500608,parsertemp500604,parsertemp500605
FLOAT:lambda
LITERAL_FLOAT:0.0
abs(*(*(parsertemp500604,-(parsertemp500605,lambda)),>(-(parsertemp500608,lambda),0.0)))
::STMT
MATRIX:parsertemp260769,w
FLOAT:reg
LITERAL_FLOAT:2.0
*(/(reg,2.0),sum(*(+(w,parsertemp260769),+(w,parsertemp260769))))
::STMT
MATRIX:_sbcvar1708
LITERAL_FLOAT:0.7
*(_sbcvar1708,0.7)
::STMT
MATRIX:WM
FLOAT:m2X
LITERAL_FLOAT:1.0
*(m2X,/(sum(WM),-(sum(WM),1.0)))
::STMT
MATRIX:tmp,g_old
/(cast.FLOAT(%*%(t(tmp),tmp)),cast.FLOAT(%*%(t(g_old),g_old)))
::STMT
MATRIX:parsertemp409789,parsertemp409798,parsertemp409788,parsertemp409797
FLOAT:int843
LITERAL_FLOAT:0.0
%*%(t(+(-(int843,parsertemp409789),t(parsertemp409798))),+(-(0.0,t(parsertemp409788)),t(colSums(parsertemp409797))))
::STMT
MATRIX:tmp_Xw,Y,parsertemp2775
FLOAT:int711
LITERAL_FLOAT:0.0,1.0
*(*(-(1.0,*(Y,tmp_Xw)),>(-(int711,parsertemp2775),0.0)),Y)
::STMT
MATRIX:parsertemp389212
LITERAL_FLOAT:2.0,1058.0
^(/(parsertemp389212,1058.0),2.0)
::STMT
MATRIX:2903_mask,dout,X,2904_X,parsertemp555692
FLOAT:2903_p
LITERAL_FLOAT:0.0
%*%(t(X),*(>(2904_X,0.0),*(/(2903_mask,2903_p),%*%(dout,parsertemp555692))))
::STMT
MATRIX:w,g
FLOAT:alpha
-(w,/(g,alpha))
::STMT
MATRIX:P,lambda,X,Y,B_new
LITERAL_FLOAT:2.0
^(+(%*%(t(X),-(P,Y)),*(lambda,B_new)),2.0)
::STMT
FLOAT:i
LITERAL_FLOAT:4.0
+(4.0,i)
::STMT
MATRIX:cdf_min_distances,random_row
colSums(<(cdf_min_distances,*(random_row,cdf_min_distances)))
::STMT
FLOAT:deviance_nodisp,eps
LITERAL_FLOAT:0.1
*(eps,+(deviance_nodisp,0.1))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,2.0
+(exp(*(2.0,X)),1.0)
::STMT
MATRIX:colSD,X,colMean
LITERAL_FLOAT:3.0
<(X,-(colMean,*(3.0,colSD)))
::STMT
MATRIX:colSD,X,colMean
LITERAL_FLOAT:3.0
>(X,+(colMean,*(3.0,colSD)))
::STMT
MATRIX:p_LS,parsertemp170551,X
FLOAT:lambda_LS
+(*(cast.FLOAT(%*%(parsertemp170551,X)),cast.FLOAT(p_LS)),*(lambda_LS,cast.FLOAT(p_LS)))
::STMT
MATRIX:parsertemp10744,parsertemp10746,V,W,H
LITERAL_FLOAT:1.0E-8
/(%*%(V,t(*(H,parsertemp10744))),+(%*%(W,%*%(H,parsertemp10746)),1.0E-8))
::STMT
MATRIX:W
round(W)
::STMT
MATRIX:X
FLOAT:threshold
*(>(X,threshold),X)
::STMT
MATRIX:mu
FLOAT:window_size,q
-(q,*(window_size,cast.FLOAT(*(mu,mu))))
::STMT
FLOAT:log_ten,parsertemp169814
LITERAL_FLOAT:4.0
exp(*(log_ten,-(4.0,round(parsertemp169814))))
::STMT
MATRIX:parsertemp393570,W3_rand
FLOAT:int397,int924
LITERAL_FLOAT:0.128920512778062
%*%(*(0.128920512778062,W3_rand),t(/(-(parsertemp393570,int397),+(parsertemp393570,int924))))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(750.0,1.0)))
::STMT
FLOAT:a,b,x
LITERAL_FLOAT:2.0
+(*(a,^(x,2.0)),*(b,x))
::STMT
MATRIX:Q,R,parsertemp500307
FLOAT:int723
LITERAL_FLOAT:2.0
-(+(rowSums(^(R,int723)),t(rowSums(parsertemp500307))),*(2.0,%*%(R,t(Q))))
::STMT
LITERAL_FLOAT:0.25
0.25
::STMT
MATRIX:parsertemp115857,X,avg_X_cols
FLOAT:int636
LITERAL_FLOAT:1.0
/(-(t(colSums(parsertemp115857)),*($1:nrow(X),^(avg_X_cols,int636))),-($1,1.0))
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,2.0
+(*(2.0,-(run_index,1.0)),1.0)
::STMT
FLOAT:parsertemp181047,parsertemp181040
LITERAL_FLOAT:1.0,8.0
sqrt(*(8.0,-(1.0,/(parsertemp181040,parsertemp181047))))
::STMT
MATRIX:g0_1,d_r_rev,parsertemp410116
+(g0_1,t(colSums(*(parsertemp410116,d_r_rev))))
::STMT
MATRIX:parsertemp411194,parsertemp411197,W,H,parsertemp411205,parsertemp411206
%*%(/(*(W,%*%(parsertemp411205,parsertemp411206)),t(rowSums(H))),/(*(H,%*%(parsertemp411194,parsertemp411197)),t(colSums(W))))
::STMT
MATRIX:X,y
FLOAT:int879,int649
INT:int378,m
%*%(t(X),-(%*%(X,rand(m,int378,int649,int879)),y))
::STMT
MATRIX:ss
FLOAT:130_n
LITERAL_FLOAT:1.0
-(/(130_n,ss),1.0)
::STMT
MATRIX:ot,yt
LITERAL_FLOAT:0.0,100.0
*(sum(>(*(yt,ot),0.0)),100.0)
::STMT
LITERAL_FLOAT:-0.5
-0.5
::STMT
LITERAL_FLOAT:0.5
0.5
::STMT
MATRIX:W
FLOAT:int197,int575,m3,var,wt
LITERAL_FLOAT:2.0,3.0
/(*(^(sum(W),2.0),m3),*(*(-(wt,int197),-(wt,int575)),^(sqrt(var),3.0)))
::STMT
LITERAL_FLOAT:0.254829592
0.254829592
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
-(1.0,exp(linear_terms))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,128.0,4.0
+(*(-(i,1.0),128.0),4.0)
::STMT
FLOAT:522_padh,522_Hin
LITERAL_FLOAT:1.0,2.0
-(+(522_Hin,*(2.0,522_padh)),1.0)
::STMT
FLOAT:obj,objnew
abs(-(objnew,obj))
::STMT
LITERAL_FLOAT:1.0,150.0
-(150.0,1.0)
::STMT
LITERAL_FLOAT:0.75
0.75
::STMT
MATRIX:p,A,r,parsertemp477951
FLOAT:norm_r2
+(r,*(/(norm_r2,sum(parsertemp477951)),%*%(t(A),%*%(A,p))))
::STMT
MATRIX:parsertemp285848,X
LITERAL_FLOAT:0.0
%*%(t(-(0.0,t(parsertemp285848))),t(colSums(X)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,128.0,3.0
+(*(-(i,1.0),128.0),3.0)
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0,2.0
^(+(0.0,*(cast.FLOAT(lambda),cast.FLOAT(beta))),2.0)
::STMT
MATRIX:p,r,Z
FLOAT:parsertemp31794,norm_r2
*(+(r,*(/(norm_r2,parsertemp31794),%*%(Z,p))),+(r,*(/(norm_r2,parsertemp31794),%*%(Z,p))))
::STMT
LITERAL_FLOAT:0.0625
0.0625
::STMT
LITERAL_FLOAT:1.0002795638803466
1.0002795638803466
::STMT
FLOAT:int263,2690_Hin,int538
LITERAL_FLOAT:2.0
/(-(+(2690_Hin,*(int538,int263)),2.0),2.0)
::STMT
MATRIX:A,CVars,CFreqs
FLOAT:int972
/(sum(*(-(CFreqs,int972),CVars)),-(nrow(A),nrow(CFreqs)))
::STMT
MATRIX:linear_terms
FLOAT:link_power,int964,int879
LITERAL_FLOAT:-2.0,1.0
/(^(linear_terms,+(-2.0,/(int964,link_power))),-(1.0,^(linear_terms,/(int879,link_power))))
::STMT
MATRIX:ss,parsertemp31463
FLOAT:eAvg,alpha,n
LITERAL_FLOAT:1.0
-(*(alpha,-(/(parsertemp31463,eAvg),1.0)),*(-(1.0,alpha),-(/(n,ss),1.0)))
::STMT
LITERAL_FLOAT:1.0,0.8
+(1.0,0.8)
::STMT
LITERAL_FLOAT:0.125
0.125
::STMT
MATRIX:X,Centering
LITERAL_FLOAT:2.0,1764.0
/(colSums(^(-(X,Centering),2.0)),1764.0)
::STMT
MATRIX:intercept,X,beta
exp(+(%*%(X,beta),intercept))
::STMT
MATRIX:A,present_domain_vals_mat,CFreqs,parsertemp27487
FLOAT:int999
/(sum(*(-(CFreqs,int999),%*%(present_domain_vals_mat,parsertemp27487))),-(nrow(A),nrow(present_domain_vals_mat)))
::STMT
FLOAT:int453,F1
LITERAL_FLOAT:2.0
*(*(*(*(F1,int453),2.0),2.0),2.0)
::STMT
MATRIX:R,parsertemp503780
t(+(R,diag(parsertemp503780)))
::STMT
MATRIX:means,Y,vars
LITERAL_FLOAT:2.0
/(^(-(Y,means),2.0),vars)
::STMT
MATRIX:X,parsertemp438796
*(ncol(X),parsertemp438796)
::STMT
LITERAL_FLOAT:4.0
4.0
::STMT
FLOAT:n
LITERAL_FLOAT:2.0,4.0
+(-(n,4.0),2.0)
::STMT
LITERAL_FLOAT:4.5
4.5
::STMT
FLOAT:start_x,i,s_cols
LITERAL_FLOAT:1.0
+(*(-(i,1.0),s_cols),start_x)
::STMT
MATRIX:2014_cnI,parsertemp230385
t(%*%(parsertemp230385,2014_cnI))
::STMT
MATRIX:obj,objnew,gs
-(-(objnew,obj),gs)
::STMT
MATRIX:P,Y,dP
&(>(P,dP),Y)
::STMT
MATRIX:parsertemp44107,parsertemp44109,wnew
FLOAT:C
*(+(wnew,*(C,%*%(parsertemp44107,parsertemp44109))),+(wnew,*(C,%*%(parsertemp44107,parsertemp44109))))
::STMT
MATRIX:G
sum(!=(rowSums(G),t(colSums(G))))
::STMT
MATRIX:parsertemp171245,Y
LITERAL_FLOAT:1.0
*(rowSums(Y),/(1.0,-(exp(parsertemp171245),1.0)))
::STMT
LITERAL_FLOAT:6.0
6.0
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0,2.0
*(2.0,*(-1.0,sum(parsertemp43626)))
::STMT
LITERAL_FLOAT:5.0
5.0
::STMT
MATRIX:cumLeftHist,parsertemp131906,parsertemp132092,leftHist,outBucket
%*%(==(outBucket,%*%(parsertemp132092,t(parsertemp131906))),-(cumLeftHist,leftHist))
::STMT
LITERAL_FLOAT:1.0E-9
1.0E-9
::STMT
LITERAL_FLOAT:2.515517
2.515517
::STMT
MATRIX:_sbcvar96,_sbcvar95,_sbcvar97
FLOAT:221_my,int469
LITERAL_FLOAT:2.0
*(%*%(_sbcvar95,_sbcvar96),^(+(%*%(_sbcvar95,_sbcvar97),-(int469,221_my)),2.0))
::STMT
FLOAT:n
LITERAL_FLOAT:1.0,4.0
+(-(n,4.0),1.0)
::STMT
LITERAL_FLOAT:8.0
8.0
::STMT
MATRIX:prec,X,mu
-(%*%(X,prec),%*%(mu,prec))
::STMT
LITERAL_FLOAT:9.0
9.0
::STMT
LITERAL_FLOAT:7.0
7.0
::STMT
MATRIX:M
FLOAT:parsertemp178174
+(max(M),parsertemp178174)
::STMT
MATRIX:sample_rec_ids
FLOAT:num_records
LITERAL_FLOAT:1.0
+(*(sample_rec_ids,<=(sample_rec_ids,num_records)),*(+(num_records,1.0),-(1.0,<=(sample_rec_ids,num_records))))
::STMT
MATRIX:W,H
%*%(%*%(t(W),W),H)
::STMT
MATRIX:feature
LITERAL_FLOAT:1.0
+(feature,-(1.0,min(feature)))
::STMT
MATRIX:p,ssX_p,shift_X
+(ssX_p,%*%(t(shift_X),p))
::STMT
MATRIX:parsertemp27461,r,c,E,F
FLOAT:int686
LITERAL_FLOAT:2.0,1.0E-4
/(^(-(F,+(parsertemp27461,E)),2.0),+(*(==(E,int686),1.0E-4),/(%*%(r,c),sum(F))))
::STMT
MATRIX:Q3,IQR
LITERAL_FLOAT:2.0
+(Q3,*(2.0,IQR))
::STMT
LITERAL_FLOAT:10.0
10.0
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:-2.0,1.0
^(linear_terms,+(-2.0,/(1.0,link_power)))
::STMT
LITERAL_FLOAT:1.0
1.0
::STMT
LITERAL_FLOAT:-1.0
-1.0
::STMT
FLOAT:parsertemp2
cast.MATRIX(parsertemp2)
::STMT
LITERAL_FLOAT:-Infinity
-Infinity
::STMT
LITERAL_FLOAT:Infinity
Infinity
::STMT
MATRIX:W,parsertemp411110,X,H
LITERAL_FLOAT:1.0E-8
*(W,/(%*%(X,t(H)),+(%*%(W,parsertemp411110),1.0E-8)))
::STMT
MATRIX:parsertemp459193,vW3,parsertemp459200,2703_W
FLOAT:lr,mu,float473
-(*(mu,vW3),*(lr,+(%*%(parsertemp459200,parsertemp459193),*(float473,2703_W))))
::STMT
MATRIX:pred
LITERAL_FLOAT:1.0E-10
+(pred,1.0E-10)
::STMT
FLOAT:factor_up,parsertemp195892
LITERAL_FLOAT:1.0,2.0
-(-(*(2.0,factor_up),parsertemp195892),1.0)
::STMT
LITERAL_FLOAT:NaN
NaN
::STMT
LITERAL_FLOAT:1.5
1.5
::STMT
MATRIX:P1,P2,S
LITERAL_FLOAT:0.0
!=(+(%*%(P1,S),%*%(P2,S)),0.0)
::STMT
MATRIX:parsertemp539203
LITERAL_FLOAT:-1.0,2.0
/(*(parsertemp539203,-1.0),2.0)
::STMT
MATRIX:parsertemp222703
LITERAL_FLOAT:0.0,1.0
+(rowSums(==(t(parsertemp222703),0.0)),1.0)
::STMT
MATRIX:U,row_nonzeros
FLOAT:reg
*(*(reg,U),row_nonzeros)
::STMT
MATRIX:2701_mask,2700_W,parsertemp459178,2699_dtemp,2702_X,2703_W
FLOAT:int377,float760
%*%(*(*(>(2702_X,int377),/(2701_mask,float760)),%*%(-(2699_dtemp,parsertemp459178),t(2700_W))),t(2703_W))
::STMT
LITERAL_FLOAT:2.0
2.0
::STMT
LITERAL_FLOAT:0.0
0.0
::STMT
LITERAL_FLOAT:-0.0
-0.0
::STMT
LITERAL_FLOAT:-2.0
-2.0
::STMT
MATRIX:parsertemp220911,g,Y
FLOAT:float687
LITERAL_FLOAT:0.0
-(+(Y,-(0.0,*(float687,g))),parsertemp220911)
::STMT
MATRIX:E,F
LITERAL_FLOAT:0.001
<(-(E,F),0.001)
::STMT
MATRIX:RDMean,parsertemp265748
LITERAL_FLOAT:2.0
t(-(parsertemp265748,^(RDMean,2.0)))
::STMT
LITERAL_FLOAT:3.0
3.0
::STMT
MATRIX:svUpBnd,R,svLowBnd
*(<=(R,cast.FLOAT(svUpBnd)),>(R,cast.FLOAT(svLowBnd)))
::STMT
MATRIX:sts,d,parsertemp44021,parsertemp44023
FLOAT:delta2
sqrt(+(*(%*%(parsertemp44021,d),%*%(parsertemp44021,d)),*(%*%(parsertemp44023,d),-(delta2,sts))))
::STMT
MATRIX:t,parsertemp32834,parsertemp32843,X,parsertemp32837,parsertemp32827,parsertemp32824,parsertemp32846
FLOAT:int882,x
LITERAL_FLOAT:1.0
*(*(/(-(x,X),-(X,X)),-(1.0,/(parsertemp32824,parsertemp32827))),+(*(-(parsertemp32834,parsertemp32837),-(int882,t)),*(+(parsertemp32843,parsertemp32846),/(parsertemp32824,parsertemp32827))))
::STMT
MATRIX:parsertemp145796,y
FLOAT:int717
sum(rowSums(*(*(y,int717),parsertemp145796)))
::STMT
MATRIX:Y,vec1
FLOAT:link_power
LITERAL_FLOAT:2.0
/(*(rowSums(Y),vec1),^(link_power,2.0))
::STMT
MATRIX:X_Xd_exp_Xb_rev_agg,select,D_r_rev
/(%*%(select,X_Xd_exp_Xb_rev_agg),D_r_rev)
::STMT
MATRIX:s,d,alpha
FLOAT:parsertemp44015
%*%(t(-(s,*(parsertemp44015,d))),-(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:X
FLOAT:int681,epsilon
<(sqrt(rowSums(^(X,int681))),epsilon)
::STMT
FLOAT:K
LITERAL_FLOAT:21.0
*(21.0,K)
::STMT
MATRIX:neighbors,corePts,withinEps
LITERAL_FLOAT:0.0
colSums(>(*(*(neighbors,corePts),withinEps),0.0))
::STMT
MATRIX:y_corr,parsertemp171002
FLOAT:int375
LITERAL_FLOAT:0.0,1.0
-(parsertemp171002,/(==(y_corr,0.0),-(1.0,==(y_corr,int375))))
::STMT
MATRIX:W
FLOAT:float615,m2,wt
/(sqrt(/(*(m2,wt),-(wt,float615))),sqrt(sum(round(W))))
::STMT
MATRIX:X
FLOAT:index
LITERAL_FLOAT:1.0
*(index,-(ncol(X),1.0))
::STMT
MATRIX:parsertemp472326,parsertemp472314
-(nrow(parsertemp472314),cast.FLOAT(parsertemp472326))
::STMT
MATRIX:b,parsertemp410078,sb
LITERAL_FLOAT:-1.0
*(cast.FLOAT(%*%(colSums(parsertemp410078),+(b,sb))),-1.0)
::STMT
MATRIX:parsertemp24102,parsertemp24103
FLOAT:num_bins,int935
LITERAL_FLOAT:1.0
-(-(1.0,<(+(parsertemp24103,int935),1.0)),>(+(round(parsertemp24102),1.0),num_bins))
::STMT
LITERAL_FLOAT:10.0,-8.0
^(10.0,-8.0)
::STMT
MATRIX:2792_M2
LITERAL_FLOAT:0.0
|(!=(2792_M2,0.0),!=(2792_M2,0.0))
::STMT
LITERAL_FLOAT:10.0,-10.0
^(10.0,-10.0)
::STMT
LITERAL_FLOAT:-12.0,10.0
^(10.0,-12.0)
::STMT
MATRIX:minD,D,parsertemp222603,parsertemp222600
t(/(<=(+(parsertemp222600,parsertemp222603),minD),rowSums(<=(D,minD))))
::STMT
MATRIX:parsertemp222703
LITERAL_FLOAT:0.0
rowSums(==(t(parsertemp222703),0.0))
::STMT
FLOAT:num_func_invoc
LITERAL_FLOAT:1.0,5.0
-(+(num_func_invoc,5.0),1.0)
::STMT
MATRIX:ss_res_Y,var_tot_Y
FLOAT:df_ss_res_Y
/(/(ss_res_Y,df_ss_res_Y),var_tot_Y)
::STMT
MATRIX:M
LITERAL_FLOAT:0.0,2.0
&(>(rowSums(M),0.0),<(rowSums(M),2.0))
::STMT
MATRIX:X,permut
FLOAT:n
-(%*%(permut,X),/(colSums(%*%(permut,X)),n))
::STMT
MATRIX:CMeans,CFreqs
FLOAT:my
LITERAL_FLOAT:2.0
sum(*(CFreqs,^(-(CMeans,my),2.0)))
::STMT
MATRIX:B
LITERAL_FLOAT:8.0
/(nrow(B),8.0)
::STMT
LITERAL_FLOAT:0.0873148795050037
0.0873148795050037
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),2.0),+(sum(W),1.0)),+(sum(round(W)),3.0))
::STMT
MATRIX:parsertemp414371
LITERAL_FLOAT:200.0,2.0
*(200.0,^(/(t(parsertemp414371),200.0),2.0))
::STMT
MATRIX:X
FLOAT:x
sum(>=(X,x))
::STMT
MATRIX:border,parsertemp386448,parsertemp386459,parsertemp386449,parsertemp386460,withinEps
FLOAT:int478,int316
LITERAL_FLOAT:0.0
+(*(>(*(parsertemp386448,withinEps),0.0),==(-(border,parsertemp386459),0.0)),t(*(>(parsertemp386449,int478),==(parsertemp386460,int316))))
::STMT
LITERAL_FLOAT:10.0,-30.0
^(10.0,-30.0)
::STMT
LITERAL_FLOAT:10.0,30.0
^(10.0,30.0)
::STMT
MATRIX:parsertemp191275,parsertemp191273
FLOAT:397_C
+(parsertemp191273,*(397_C,t(parsertemp191275)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
+(1.0,^(linear_terms,2.0))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,128.0
+(*(-(i,1.0),128.0),128.0)
::STMT
MATRIX:B
LITERAL_FLOAT:4.0
/(nrow(B),4.0)
::STMT
MATRIX:237_present_domain_vals_mat,parsertemp29514,237_CFreqs
FLOAT:int194
LITERAL_FLOAT:10000.0
/(sum(*(-(237_CFreqs,int194),%*%(237_present_domain_vals_mat,parsertemp29514))),-(10000.0,nrow(237_present_domain_vals_mat)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,128.0,84.0
+(*(-(i,1.0),128.0),84.0)
::STMT
MATRIX:S,parsertemp175056
rowSums(exp(-(S,parsertemp175056)))
::STMT
MATRIX:dout
LITERAL_FLOAT:0.01
*(0.01,dout)
::STMT
MATRIX:parsertemp122291,parsertemp122288
LITERAL_FLOAT:0.0,4.0
sum(|(<(t(parsertemp122288),4.0),==(t(parsertemp122291),0.0)))
::STMT
MATRIX:B
LITERAL_FLOAT:2.0
/(nrow(B),2.0)
::STMT
MATRIX:Bx,Yd,Yu
LITERAL_FLOAT:2.0
/(-(Yu,Yd),^(Bx,2.0))
::STMT
MATRIX:Q1,Q3,X,IQR
FLOAT:k
|(<(X,-(Q1,*(k,IQR))),>(X,+(Q3,*(k,IQR))))
::STMT
LITERAL_FLOAT:0.08681986202598489
0.08681986202598489
::STMT
FLOAT:i,k
LITERAL_FLOAT:1.0
cast.MATRIX(-(+(i,k),1.0))
::STMT
MATRIX:parsertemp2832
sum(==(round(parsertemp2832),min(round(parsertemp2832))))
::STMT
MATRIX:w
LITERAL_FLOAT:0.5
*(0.5,%*%(t(w),w))
::STMT
LITERAL_FLOAT:1.0,10.0
+(10.0,1.0)
::STMT
MATRIX:vW1,dW,parsertemp459256
FLOAT:lr,mu,float518
-(*(mu,vW1),*(lr,+(dW,*(float518,parsertemp459256))))
::STMT
MATRIX:p_LS
FLOAT:norm_r2_LS,parsertemp170552,lambda_LS
*(/(norm_r2_LS,*(cast.FLOAT(p_LS),+(parsertemp170552,lambda_LS))),cast.FLOAT(p_LS))
::STMT
FLOAT:m2
LITERAL_FLOAT:3.0,1.0005
^(sqrt(*(1.0005,m2)),3.0)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
/(nrow(X),1.0)
::STMT
MATRIX:Q1,X,IQR
LITERAL_FLOAT:2.0
<(X,-(Q1,*(2.0,IQR)))
::STMT
MATRIX:Q3,X,IQR
LITERAL_FLOAT:2.0
>(X,+(Q3,*(2.0,IQR)))
::STMT
FLOAT:o_init
LITERAL_FLOAT:-2.0,50.0
/(*(-2.0,o_init),50.0)
::STMT
FLOAT:m2
LITERAL_FLOAT:4.0,1.0005
^(sqrt(*(1.0005,m2)),4.0)
::STMT
FLOAT:std,float498,float46
INT:int895,int207
cast.MATRIX(*(cast.FLOAT(rand(int207,int895,float46,float498)),std))
::STMT
FLOAT:parsertemp190484,parsertemp190485,FN,TN,FP
sqrt(*(*(*(parsertemp190484,parsertemp190485),+(TN,FP)),+(TN,FN)))
::STMT
MATRIX:parsertemp443530,resp,X
FLOAT:float889
t(/(%*%(t(resp),X),t(+(parsertemp443530,float889))))
::STMT
MATRIX:W,H
FLOAT:Eps
+(%*%(%*%(t(W),W),H),Eps)
::STMT
MATRIX:mean,parsertemp437236,parsertemp437235,X,weight,parsertemp437241
FLOAT:int326
LITERAL_FLOAT:2.0
+(-(/(%*%(parsertemp437235,parsertemp437236),t(weight)),*(2.0,^(mean,int326))),/(*(mean,%*%(parsertemp437241,X)),t(weight)))
::STMT
MATRIX:s,d
FLOAT:parsertemp44015
%*%(t(-(s,*(parsertemp44015,d))),d)
::STMT
MATRIX:parsertemp410987,parsertemp410978,W,H
%*%(/(*(W,parsertemp410987),t(rowSums(H))),/(*(H,t(parsertemp410978)),t(colSums(W))))
::STMT
FLOAT:_sbcvar1799
LITERAL_FLOAT:9.0
-(9.0,_sbcvar1799)
::STMT
FLOAT:i
LITERAL_FLOAT:9.0
+(i,9.0)
::STMT
MATRIX:parsertemp460644
FLOAT:float790,2715_D
LITERAL_FLOAT:2.0
/(*(parsertemp460644,sqrt(/(float790,2715_D))),sqrt(2.0))
::STMT
LITERAL_FLOAT:9.999999999
9.999999999
::STMT
MATRIX:_sbcvar11,43_r,43_c,43_E
LITERAL_FLOAT:2.0,1000.0
sum(/(^(-(_sbcvar11,43_E),2.0),/(%*%(43_r,43_c),1000.0)))
::STMT
MATRIX:Xd,Xw
FLOAT:step_sz
+(Xw,*(step_sz,Xd))
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr
FLOAT:parsertemp171116
*(parsertemp171116,+(is_zero_y_corr,is_one_y_corr))
::STMT
MATRIX:_sbcvar332,parsertemp42290
FLOAT:float884,meanX
LITERAL_FLOAT:9999.0
t(*(/(_sbcvar332,9999.0),-(+(parsertemp42290,float884),meanX)))
::STMT
FLOAT:KM_offset
LITERAL_FLOAT:7.0
+(KM_offset,7.0)
::STMT
MATRIX:R,3_ss,dsep
/(+(R,dsep),3_ss)
::STMT
MATRIX:Y,parsertemp2796,Xw
LITERAL_FLOAT:0.0,1.0
*(>(-(1.0,*(Y,Xw)),0.0),-(1.0,*(Y,+(Xw,parsertemp2796))))
::STMT
FLOAT:i
LITERAL_FLOAT:12.0
+(i,12.0)
::STMT
FLOAT:i
LITERAL_FLOAT:192.0
+(192.0,i)
::STMT
FLOAT:i
LITERAL_FLOAT:11.0
+(i,11.0)
::STMT
MATRIX:parsertemp500607,X,y,parsertemp500610
*(-(%*%(X,*(parsertemp500607,parsertemp500610)),y),-(%*%(X,*(parsertemp500607,parsertemp500610)),y))
::STMT
MATRIX:parsertemp436669,prec_chol,X,parsertemp436673
FLOAT:int93,int32,int745
LITERAL_FLOAT:2.0
INT:parsertemp436666,int445
+(-(*(rand(int445,parsertemp436666,int32,int93),t(parsertemp436669)),*(2.0,%*%(X,parsertemp436673))),%*%(^(X,2.0),t(^(prec_chol,int745))))
::STMT
FLOAT:502_strideh,502_padh,502_Hin
LITERAL_FLOAT:1.0,2.0
-(*(502_strideh,-(502_Hin,1.0)),*(2.0,502_padh))
::STMT
FLOAT:k
LITERAL_FLOAT:4.0
+(k,4.0)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.0,1.0
-(1.0,==(y_corr,0.0))
::STMT
MATRIX:ss
FLOAT:130_n,130_alpha
LITERAL_FLOAT:1.0
*(-(1.0,130_alpha),-(/(130_n,ss),1.0))
::STMT
MATRIX:parsertemp44080,obj,parsertemp44076,wnew
FLOAT:C
LITERAL_FLOAT:0.5
-(obj,+(*(0.5,%*%(parsertemp44076,wnew)),*(C,sum(parsertemp44080))))
::STMT
MATRIX:classCounts
FLOAT:numRows
/(classCounts,numRows)
::STMT
MATRIX:parsertemp500604,w,parsertemp500601
FLOAT:alpha,tau
*(parsertemp500604,-(abs(-(w,parsertemp500601)),/(tau,alpha)))
::STMT
FLOAT:KM_offset
LITERAL_FLOAT:6.0
+(KM_offset,6.0)
::STMT
MATRIX:mW2,dW2
FLOAT:193_lr,parsertemp147034,193_beta1,int779,193_t
LITERAL_FLOAT:1.0
*(/(*(193_lr,sqrt(parsertemp147034)),-(1.0,^(193_beta1,193_t))),+(*(193_beta1,mW2),*(-(int779,193_beta1),dW2)))
::STMT
MATRIX:parsertemp40482,X2,l
/(nrow(X2),t(colSums(==(parsertemp40482,l))))
::STMT
MATRIX:parsertemp429910
LITERAL_FLOAT:300.0,2.0
*(300.0,^(/(t(parsertemp429910),300.0),2.0))
::STMT
FLOAT:w_i
LITERAL_FLOAT:5.0
+(w_i,5.0)
::STMT
MATRIX:parsertemp171246,Y
FLOAT:int23
LITERAL_FLOAT:1.0
-(Y,*(Y,/(1.0,-(parsertemp171246,int23))))
::STMT
FLOAT:run_index
LITERAL_FLOAT:48.0
*(48.0,run_index)
::STMT
MATRIX:weightMatrix
FLOAT:threshold
LITERAL_FLOAT:0.0
&(<(weightMatrix,threshold),>(weightMatrix,0.0))
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int21,int125,int667,int938
LITERAL_FLOAT:3.42951E11,2.0,3.37275E9
/(^(+(/(posSampleVariances,int21),/(negSampleVariances,int938)),2.0),+(/(^(posSampleVariances,int667),3.42951E11),/(^(negSampleVariances,int125),3.37275E9)))
::STMT
MATRIX:p_CG
FLOAT:parsertemp285794,parsertemp285796
LITERAL_FLOAT:-1.0
/(-(*(cast.FLOAT(p_CG),-1.0),sqrt(-(parsertemp285794,parsertemp285796))),cast.FLOAT(%*%(t(p_CG),p_CG)))
::STMT
FLOAT:norm_Grad_initial
LITERAL_FLOAT:1.0E-4
*(1.0E-4,norm_Grad_initial)
::STMT
MATRIX:parsertemp498247,m_iter_err_sum
FLOAT:i_process_item
LITERAL_FLOAT:0.0,2.0
^(/(-(0.0,-(parsertemp498247,m_iter_err_sum)),i_process_item),2.0)
::STMT
FLOAT:int200,parsertemp285740,p_CG,parsertemp285763,pp_CG
*(parsertemp285763,/(-(*(p_CG,int200),sqrt(parsertemp285740)),pp_CG))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(750.0,1.0)))
::STMT
MATRIX:P12,map
FLOAT:level
LITERAL_FLOAT:0.0
==(rowSums(!=(%*%(map,P12),0.0)),level)
::STMT
MATRIX:W
FLOAT:m2,int91
LITERAL_FLOAT:1.0,2.0,3.0
*(*(*(3.0,^(m2,int91)),^(sum(W),2.0)),-(sum(round(W)),1.0))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.128920512778062
*(0.128920512778062,W2_rand)
::STMT
MATRIX:p,V
LITERAL_FLOAT:1.0E-8
%*%(t(p),+(%*%(t(V),%*%(V,p)),*(1.0E-8,p)))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
^(max(X),2.0)
::STMT
MATRIX:parsertemp31190,parsertemp31197
FLOAT:parsertemp31191,parsertemp31198
LITERAL_FLOAT:1500.0,7000.0
sqrt(+(/(/(parsertemp31190,parsertemp31191),7000.0),/(/(parsertemp31197,parsertemp31198),1500.0)))
::STMT
LITERAL_FLOAT:0.007
0.007
::STMT
MATRIX:y_hat,b,R
*(-(-(b,%*%(R,y_hat)),y_hat),-(-(b,%*%(R,y_hat)),y_hat))
::STMT
MATRIX:ytest
FLOAT:sum_y_test,n
LITERAL_FLOAT:2.0
-(sum(^(ytest,2.0)),*(nrow(ytest),^(/(sum_y_test,n),2.0)))
::STMT
MATRIX:s,w
FLOAT:step_sz
*(+(w,*(step_sz,s)),+(w,*(step_sz,s)))
::STMT
MATRIX:dW,parsertemp459256
FLOAT:lr
LITERAL_FLOAT:5.0E-4
*(lr,+(dW,*(5.0E-4,parsertemp459256)))
::STMT
FLOAT:parsertemp40812,m2,int31,mu
/(sqrt(*(/(int31,parsertemp40812),m2)),mu)
::STMT
FLOAT:_sbcvar1783
LITERAL_FLOAT:8.0
-(8.0,_sbcvar1783)
::STMT
MATRIX:ss,se
FLOAT:parsertemp122358,int182
LITERAL_FLOAT:1.0,0.95
*(0.95,-(/(/(se,ss),/(parsertemp122358,int182)),1.0))
::STMT
MATRIX:select,X_exp_Xb_rev_agg,D_r_rev,Xd_exp_Xb_rev_agg
LITERAL_FLOAT:2.0
/(*(X_exp_Xb_rev_agg,%*%(select,Xd_exp_Xb_rev_agg)),^(D_r_rev,2.0))
::STMT
MATRIX:Y_counts,parsertemp560508,parsertemp560522,ent1_vec
/(-(sum(rowSums(parsertemp560508)),sum(*(Y_counts,ent1_vec))),sqrt(sum(*(Y_counts,parsertemp560522))))
::STMT
LITERAL_FLOAT:1.0,2000.0
-(2000.0,1.0)
::STMT
FLOAT:lambda,beta
LITERAL_FLOAT:0.0
sqrt(*(+(0.0,*(lambda,beta)),+(0.0,*(lambda,beta))))
::STMT
MATRIX:g_Y,w
LITERAL_FLOAT:2.0
/(^(g_Y,2.0),w)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
INT:int47,int606
%*%(X,rand(int606,int47,0.0,0.0))
::STMT
MATRIX:A
abs(-(A,t(A)))
::STMT
MATRIX:Y
sum(==(Y,max(Y)))
::STMT
MATRIX:determinants
FLOAT:nFeats
LITERAL_FLOAT:3.141592653589793,2.0
*(^(*(2.0,3.141592653589793),nFeats),determinants)
::STMT
LITERAL_FLOAT:44.73253849269008
44.73253849269008
::STMT
MATRIX:L,m
FLOAT:sum
/(-(m,sum),cast.FLOAT(L))
::STMT
MATRIX:parsertemp260755,Xd
FLOAT:dd,step_sz,wd
*(-(+(wd,*(step_sz,dd)),sum(*(parsertemp260755,Xd))),-(+(wd,*(step_sz,dd)),sum(*(parsertemp260755,Xd))))
::STMT
MATRIX:ss
LITERAL_FLOAT:40.0
/(40.0,ss)
::STMT
MATRIX:prec_chol,mu
FLOAT:int750
LITERAL_FLOAT:2.0
t(*(rowSums(^(mu,int750)),^(prec_chol,2.0)))
::STMT
MATRIX:means,Y_counts,ones_ctg
LITERAL_FLOAT:1.0
<(*(means,%*%(Y_counts,t(ones_ctg))),1.0)
::STMT
FLOAT:int18
LITERAL_FLOAT:0.0
INT:int193,m
abs(rand(m,int193,0.0,int18))
::STMT
MATRIX:probs,scores,unnorm_probs,dprobs
-(*(dprobs,/(exp(scores),rowSums(unnorm_probs))),*(/(exp(scores),rowSums(unnorm_probs)),rowSums(*(dprobs,probs))))
::STMT
LITERAL_FLOAT:3.0,2000.0
-(2000.0,3.0)
::STMT
FLOAT:parsertemp230731
LITERAL_FLOAT:2.0
+(parsertemp230731,2.0)
::STMT
MATRIX:labels
LITERAL_FLOAT:1.0
+(labels,-(1.0,min(labels)))
::STMT
MATRIX:tmp,leftIdx
LITERAL_FLOAT:0.0
>(%*%(tmp,%*%(t(tmp),leftIdx)),0.0)
::STMT
MATRIX:t_gp,parsertemp560875,linear_terms,parsertemp560867
FLOAT:int721,float396
LITERAL_FLOAT:1.0,2.0,0.254829592
*(*(/(1.0,+(float396,parsertemp560867)),+(0.254829592,*(t_gp,parsertemp560875))),-(*(2.0,>=(linear_terms,int721)),1.0))
::STMT
FLOAT:parsertemp191177,strideh,Hin,Hf
LITERAL_FLOAT:1.0
+(/(-(+(Hin,parsertemp191177),Hf),strideh),1.0)
::STMT
MATRIX:parsertemp539203
FLOAT:int975
LITERAL_FLOAT:2.0,0.6666666666666666
max(^(/(*(parsertemp539203,int975),2.0),0.6666666666666666))
::STMT
MATRIX:pred,y
LITERAL_FLOAT:1.0,-1.0,1.0E-10
*(*(/(1.0,nrow(y)),*(y,-1.0)),/(1.0,+(pred,1.0E-10)))
::STMT
FLOAT:KM_offset
LITERAL_FLOAT:3.0
+(KM_offset,3.0)
::STMT
MATRIX:parsertemp146972,parsertemp146970,W1,191_v
FLOAT:parsertemp146984,parsertemp146982,191_epsilon
-(W1,/(*(/(parsertemp146982,parsertemp146984),+(parsertemp146970,parsertemp146972)),+(sqrt(191_v),191_epsilon)))
::STMT
MATRIX:R,dssp,dsep
/(+(R,dsep),+(R,dssp))
::STMT
MATRIX:e,X2
LITERAL_FLOAT:0.0
==(t(%*%(t(e),X2)),0.0)
::STMT
LITERAL_FLOAT:1.0E-6
INT:int996,int118
diag(rand(int996,int118,1.0E-6,1.0E-6))
::STMT
FLOAT:parsertemp410218,parsertemp410219,N
LITERAL_FLOAT:-1.0
exp(/(*(-(parsertemp410218,parsertemp410219),-1.0),N))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0
+(i,1.0)
::STMT
MATRIX:y_prob,elt
FLOAT:int410
LITERAL_FLOAT:1.0,1.0E7
*(-(1.0,==(+(int410,elt),1.0E7)),-(1.0,y_prob))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0E-7
INT:int802,m
+(%*%(t(X),X),diag(rand(m,int802,1.0E-7,1.0E-7)))
::STMT
FLOAT:m2
LITERAL_FLOAT:44.73253849269008,1.0005
/(sqrt(*(1.0005,m2)),44.73253849269008)
::STMT
LITERAL_FLOAT:2.0,2000.0
-(2000.0,2.0)
::STMT
LITERAL_FLOAT:3.42951E11
3.42951E11
::STMT
MATRIX:means,Y_counts,ones_ctg
LITERAL_FLOAT:5.0
<(*(means,%*%(Y_counts,t(ones_ctg))),5.0)
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.1651445647689541
*(0.1651445647689541,W2_rand)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0,1.0
INT:int447,m
%*%(X,rand(m,int447,0.0,1.0))
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0,1.0
!=(+(Y,1.0),0.0)
::STMT
MATRIX:parsertemp379565,m_iter_err_sum
FLOAT:i_process_item
LITERAL_FLOAT:-1.0,2.0
^(/(*(-(parsertemp379565,m_iter_err_sum),-1.0),i_process_item),2.0)
::STMT
MATRIX:252_X
FLOAT:252_X,float360
LITERAL_FLOAT:1.0,4.5
*(/(-(4.5,cast.FLOAT(252_X)),-(cast.FLOAT(252_X),cast.FLOAT(252_X))),-(1.0,/(-(float360,252_X),-(252_X,252_X))))
::STMT
MATRIX:parsertemp1517,parsertemp1515
FLOAT:int869,n
LITERAL_FLOAT:0.0,1.0
-(1.0,<=(/(-(parsertemp1515,parsertemp1517),-(n,int869)),0.0))
::STMT
FLOAT:_sbcvar1847
LITERAL_FLOAT:11.0
-(11.0,_sbcvar1847)
::STMT
FLOAT:i
LITERAL_FLOAT:1048.0
+(i,1048.0)
::STMT
MATRIX:WM
FLOAT:parsertemp31268
LITERAL_FLOAT:1.0
*(-(sum(WM),1.0),/(*(parsertemp31268,sum(WM)),-(sum(WM),1.0)))
::STMT
FLOAT:i
LITERAL_FLOAT:1024.0
+(i,1024.0)
::STMT
MATRIX:p_CG,z
FLOAT:rr_CG,pq_CG
+(z,*(/(rr_CG,pq_CG),p_CG))
::STMT
MATRIX:ot2
FLOAT:int897
LITERAL_FLOAT:1500.0,100.0
/(*(sum(>(ot2,int897)),100.0),1500.0)
::STMT
MATRIX:X
FLOAT:int17
LITERAL_FLOAT:0.0
INT:m,int172
%*%(X,rand(m,int172,0.0,int17))
::STMT
MATRIX:lambda,B_new
LITERAL_FLOAT:2.0
sum(*(lambda,^(B_new,2.0)))
::STMT
MATRIX:W
LITERAL_FLOAT:3.0,5.0
*(+(sum(round(W)),5.0),-(sum(round(W)),3.0))
::STMT
MATRIX:parsertemp171326,is_lt_pos,parsertemp171330,Y,parsertemp171329
FLOAT:one_over_sqrt_two_pi,float268
*(one_over_sqrt_two_pi,+(-(Y,*(parsertemp171326,is_lt_pos)),*(*(parsertemp171329,parsertemp171330),-(is_lt_pos,float268))))
::STMT
MATRIX:r,parsertemp44063,grad
LITERAL_FLOAT:-0.5
*(-0.5,-(cast.FLOAT(%*%(parsertemp44063,grad)),cast.FLOAT(%*%(parsertemp44063,r))))
::STMT
MATRIX:p,e,u
FLOAT:alpha
LITERAL_FLOAT:1.0
*(-(1.0,alpha),%*%(%*%(e,u),p))
::STMT
MATRIX:p_CG
FLOAT:rr_CG,pq_CG
*(/(rr_CG,pq_CG),p_CG)
::STMT
LITERAL_FLOAT:-0.6931471805599453
-0.6931471805599453
::STMT
LITERAL_FLOAT:0.6931471805599453
0.6931471805599453
::STMT
LITERAL_FLOAT:1.0E-7
INT:int329,m
diag(rand(m,int329,1.0E-7,1.0E-7))
::STMT
MATRIX:r,parsertemp1936,parsertemp1937
FLOAT:parsertemp1941,norm_r2
*(+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))),+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))))
::STMT
MATRIX:X,Centering,ScaleFactor
FLOAT:N
/(colSums(/(-(X,Centering),ScaleFactor)),N)
::STMT
MATRIX:classFeatureCounts
FLOAT:numFeatures,laplaceCorrection
/(+(classFeatureCounts,laplaceCorrection),+(rowSums(classFeatureCounts),*(numFeatures,laplaceCorrection)))
::STMT
FLOAT:std
LITERAL_FLOAT:0.0,1.0
INT:int654,int49
*(cast.FLOAT(rand(int49,int654,0.0,1.0)),std)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
+(max(X),1.0)
::STMT
MATRIX:xs
LITERAL_FLOAT:4.5
sum(>=(xs,4.5))
::STMT
MATRIX:parsertemp13624,_sbcvar11
FLOAT:int284
LITERAL_FLOAT:2.0,1000.0
/(^(-(_sbcvar11,/(parsertemp13624,int284)),2.0),/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0))
::STMT
MATRIX:R
LITERAL_FLOAT:1.0
INT:parsertemp503363,int581
+(R,diag(rand(parsertemp503363,int581,1.0,1.0)))
::STMT
LITERAL_FLOAT:2.22E-16
2.22E-16
::STMT
MATRIX:svUpBnd,R
<=(R,cast.FLOAT(svUpBnd))
::STMT
MATRIX:vW1,dW1
FLOAT:2727_mu,2727_lr
LITERAL_FLOAT:1.0
*(+(1.0,2727_mu),-(*(2727_mu,vW1),*(2727_lr,dW1)))
::STMT
MATRIX:Y,predicted_Y
LITERAL_FLOAT:0.0
/(sum(==(-(predicted_Y,Y),0.0)),nrow(Y))
::STMT
LITERAL_FLOAT:0.025253813613805267
0.025253813613805267
::STMT
MATRIX:q,r
FLOAT:p,norm_r2
t(+(r,*(/(norm_r2,p),+(q,q))))
::STMT
MATRIX:codebook
FLOAT:j
LITERAL_FLOAT:1.0
+(1.0,*(-(j,1.0),ncol(codebook)))
::STMT
FLOAT:_sbcvar1831
LITERAL_FLOAT:10.0
-(10.0,_sbcvar1831)
::STMT
FLOAT:sd_Y,sd_X
-(sqrt(sd_Y),sqrt(sd_X))
::STMT
MATRIX:distT
LITERAL_FLOAT:0.0
!=(distT,0.0)
::STMT
FLOAT:a,b
LITERAL_FLOAT:2.0
*(2.0,*(a,b))
::STMT
MATRIX:_sbcvar1006
LITERAL_FLOAT:0.0
>(t(_sbcvar1006),0.0)
::STMT
MATRIX:parsertemp31933,X2,parsertemp31935
t(colSums(==(%*%(X2,parsertemp31935),t(parsertemp31933))))
::STMT
LITERAL_FLOAT:999.0
999.0
::STMT
FLOAT:Hin
LITERAL_FLOAT:184.0
+(Hin,184.0)
::STMT
MATRIX:leaf_ids
FLOAT:boundary_left,step_size
!(<(leaf_ids,+(boundary_left,step_size)))
::STMT
MATRIX:C,Xm,parsertemp265701,XtZ
FLOAT:ZtZ_sum
-(%*%(%*%(Xm,%*%(C,parsertemp265701)),t(/(XtZ,ZtZ_sum))),Xm)
::STMT
FLOAT:i
LITERAL_FLOAT:64.0
+(i,64.0)
::STMT
MATRIX:filled_matrix,aligned
t(%*%(t(filled_matrix),aligned))
::STMT
MATRIX:m_active_flag_tmp
LITERAL_FLOAT:1.0
!=(m_active_flag_tmp,1.0)
::STMT
LITERAL_FLOAT:1.01
1.01
::STMT
MATRIX:p,r,parsertemp1934,parsertemp1935,parsertemp1940
FLOAT:norm_r2,eps
+(r,*(/(norm_r2,cast.FLOAT(parsertemp1940)),+(%*%(parsertemp1934,parsertemp1935),*(eps,p))))
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
-(1.0,/(-(x,X),-(X,X)))
::STMT
FLOAT:parsertemp98,int764,var,m4,parsertemp99,int59,parsertemp93,parsertemp94,wt,parsertemp105,parsertemp104
LITERAL_FLOAT:4.0
/(-(*(*(parsertemp93,parsertemp94),m4),*(*(parsertemp98,parsertemp99),-(wt,int59))),*(*(*(parsertemp104,parsertemp105),-(wt,int764)),^(sqrt(var),4.0)))
::STMT
MATRIX:resp,mean,X,weight
LITERAL_FLOAT:2.0
-(/(%*%(t(resp),*(X,X)),t(weight)),*(2.0,^(mean,2.0)))
::STMT
LITERAL_FLOAT:3.141592653589793,2.0
*(2.0,3.141592653589793)
::STMT
MATRIX:X
LITERAL_FLOAT:10.0
!=(X,10.0)
::STMT
MATRIX:X,ScaleFactor
FLOAT:N
%*%(t(/(colSums(X),N)),/(colSums(/(X,ScaleFactor)),N))
::STMT
FLOAT:beg
LITERAL_FLOAT:512.0
+(beg,512.0)
::STMT
MATRIX:border,parsertemp386449,neighbors,parsertemp386460
FLOAT:int891,int557
LITERAL_FLOAT:0.0
>(+(*(>(parsertemp386449,int557),==(parsertemp386460,int891)),t(*(neighbors,border))),0.0)
::STMT
MATRIX:parsertemp31188,parsertemp31186
FLOAT:int184
LITERAL_FLOAT:1.0,2.0,7000.0
^(/(-(colSums(parsertemp31186),*(int184,parsertemp31188)),-(7000.0,1.0)),2.0)
::STMT
MATRIX:X,Y
+(abs(X),abs(Y))
::STMT
MATRIX:mean,weight
%*%(*(t(mean),weight),mean)
::STMT
MATRIX:R,parsertemp40219,parsertemp40216
FLOAT:numRows,level
/(numRows,-(+(R,rowSums(parsertemp40216)),rowSums(==(parsertemp40219,level))))
::STMT
FLOAT:beg
LITERAL_FLOAT:256.0
+(beg,256.0)
::STMT
FLOAT:i
LITERAL_FLOAT:253.0
+(i,253.0)
::STMT
MATRIX:os,y,o
FLOAT:int917
LITERAL_FLOAT:1.0
+(1.0,exp(*(-(int917,y),+(o,os))))
::STMT
MATRIX:X,tS
FLOAT:l
==(%*%(X,tS),l)
::STMT
LITERAL_FLOAT:2.0,83.0
/(83.0,2.0)
::STMT
MATRIX:parsertemp171348,is_too_small,parsertemp171346,parsertemp171344,parsertemp171353,Y,the_exp,parsertemp171349
FLOAT:int124,int429
/(-(*(rowSums(Y),exp(parsertemp171344)),Y),+(/(*(parsertemp171348,parsertemp171349),+(the_exp,is_too_small)),*(==(parsertemp171346,int429),-(int124,parsertemp171353))))
::STMT
FLOAT:i
LITERAL_FLOAT:3000.0
-(3000.0,i)
::STMT
MATRIX:parsertemp400664,parsertemp400661,W3_rand
LITERAL_FLOAT:0.2656844656620286
t(%*%(*(0.2656844656620286,W3_rand),t(/(parsertemp400661,parsertemp400664))))
::STMT
MATRIX:240_elt,240_ones_ctg
/(240_elt,%*%(rowSums(240_elt),t(240_ones_ctg)))
::STMT
MATRIX:Bxu,Bxd
+(Bxd,Bxu)
::STMT
FLOAT:42_m2X
LITERAL_FLOAT:1.001001001001001
*(42_m2X,1.001001001001001)
::STMT
MATRIX:parsertemp43634
FLOAT:float614,int863,int687,float282,float925,float13
INT:int241,int486,int281,int506
sum(*(+(rand(int281,int486,float282,float614),*(int863,parsertemp43634)),+(rand(int506,int241,float925,float13),*(int687,parsertemp43634))))
::STMT
MATRIX:221_present_domain_vals_mat,parsertemp27770
sqrt(%*%(221_present_domain_vals_mat,parsertemp27770))
::STMT
MATRIX:s
LITERAL_FLOAT:1.0,2.0
*(1.0,sum(^(s,2.0)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
exp(-(0.0,linear_terms))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0
-(0.0,exp(finite_linear_terms))
::STMT
FLOAT:i
LITERAL_FLOAT:16.0,1.0
+(*(-(i,1.0),16.0),1.0)
::STMT
MATRIX:Y,parsertemp221025
FLOAT:int526
LITERAL_FLOAT:1.0
sum(*(/(1.0,+(Y,int526)),+(diag(parsertemp221025),1.0)))
::STMT
MATRIX:logisticnew
LITERAL_FLOAT:1.0
*(logisticnew,-(1.0,logisticnew))
::STMT
MATRIX:parsertemp437238,parsertemp437237,mean,weight,parsertemp437242,avgMean
FLOAT:int92,reg_covar
+(+(-(/(parsertemp437237,parsertemp437238),*(int92,avgMean)),/(*(mean,parsertemp437242),t(weight))),reg_covar)
::STMT
MATRIX:simplex
LITERAL_FLOAT:2.0,4.0
*(2.0,/(-(rowSums(simplex),simplex),4.0))
::STMT
MATRIX:posSamples,posSampleMeans
LITERAL_FLOAT:2.0,100.0
-(colSums(^(posSamples,2.0)),*(100.0,^(posSampleMeans,2.0)))
::STMT
MATRIX:X2,85_s
FLOAT:alpha,int392
LITERAL_FLOAT:1.0
*(-(1.0,alpha),-(*(/(int392,85_s),nrow(X2)),1.0))
::STMT
MATRIX:shift_X,beta_unscaled
cast.FLOAT(%*%(t(shift_X),beta_unscaled))
::STMT
MATRIX:Y
FLOAT:num_categories
LITERAL_FLOAT:-1.0
+(*(Y,-1.0),num_categories)
::STMT
LITERAL_FLOAT:24.0,1.0
*(24.0,1.0)
::STMT
MATRIX:Nc
/(Nc,sum(Nc))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int540,int910,int823,int161
+(sum(rand(int161,int823,0.0,1.0)),sum(rand(int910,int540,0.0,1.0)))
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:10000.0
/(10000.0,cast.FLOAT(%*%(t(w_X),z_LS)))
::STMT
MATRIX:Y_counts
FLOAT:num_features
LITERAL_FLOAT:1.0
-(-(sum(Y_counts),num_features),1.0)
::STMT
LITERAL_FLOAT:1.0E-9,10.0
-(10.0,1.0E-9)
::STMT
MATRIX:parsertemp570396,classVars
FLOAT:varSmoothing
*(*(diag(parsertemp570396),max(classVars)),varSmoothing)
::STMT
MATRIX:parsertemp460643
LITERAL_FLOAT:0.025253813613805267
*(parsertemp460643,0.025253813613805267)
::STMT
LITERAL_FLOAT:1.0,2.0,4.0,2000.0
*(4.0,-(^(2000.0,2.0),1.0))
::STMT
MATRIX:Bx,Yd,Yu
/(-(Yu,Yd),*(Bx,Bx))
::STMT
MATRIX:252_X
LITERAL_FLOAT:1.0,4.5
-(1.0,/(-(4.5,cast.FLOAT(252_X)),-(cast.FLOAT(252_X),cast.FLOAT(252_X))))
::STMT
LITERAL_FLOAT:0.35
0.35
::STMT
FLOAT:parsertemp40916,int333,m2
LITERAL_FLOAT:2001.0
/(sqrt(*(/(int333,parsertemp40916),m2)),sqrt(2001.0))
::STMT
MATRIX:P,scale_X,X,Y
%*%(diag(scale_X),%*%(t(X),-(P,Y)))
::STMT
MATRIX:s,w
LITERAL_FLOAT:100.0
*(100.0,cast.FLOAT(%*%(t(w),s)))
::STMT
FLOAT:o_init
LITERAL_FLOAT:-2.0,50.0
exp(/(*(-2.0,o_init),50.0))
::STMT
MATRIX:G,authorities
/(%*%(t(G),%*%(G,authorities)),max(%*%(t(G),%*%(G,authorities))))
::STMT
MATRIX:is_natural_parameter_log_zero,Y
*(is_natural_parameter_log_zero,abs(Y))
::STMT
FLOAT:43_q
LITERAL_FLOAT:1.0,1000.0
*(1000.0,-(43_q,1.0))
::STMT
FLOAT:m2X,W
LITERAL_FLOAT:1.0
*(m2X,/(W,-(W,1.0)))
::STMT
MATRIX:r,Hd
FLOAT:c
t(+(r,*(c,Hd)))
::STMT
MATRIX:TKC
/(cast.FLOAT(TKC),cast.FLOAT(TKC))
::STMT
LITERAL_FLOAT:0.5,-0.5
INT:rank,m
rand(m,rank,-0.5,0.5)
::STMT
MATRIX:parsertemp382917,U,W
t(%*%(t(U),*(W,%*%(U,parsertemp382917))))
::STMT
LITERAL_FLOAT:1.0E8
1.0E8
::STMT
FLOAT:int384,i,Hin,Win
LITERAL_FLOAT:1.0
+(*(*(-(i,int384),Hin),Win),1.0)
::STMT
MATRIX:X,weight
/(weight,nrow(X))
::STMT
MATRIX:a,b,t,parsertemp32856,Y,parsertemp32827,parsertemp32824
FLOAT:int228,int23
+(+(*(-(int228,t),Y),*(/(parsertemp32824,parsertemp32827),Y)),*(*(/(parsertemp32824,parsertemp32827),-(int23,t)),+(*(a,parsertemp32856),*(b,t))))
::STMT
MATRIX:parsertemp30951,G,authorities,hubs
-(/(%*%(t(G),%*%(G,authorities)),max(%*%(parsertemp30951,hubs))),authorities)
::STMT
FLOAT:_sbcvar1735
LITERAL_FLOAT:12.0
-(12.0,_sbcvar1735)
::STMT
FLOAT:i,num_centroids
LITERAL_FLOAT:2.0
+(*(num_centroids,2.0),i)
::STMT
MATRIX:parsertemp150470,LT,parsertemp149320,parsertemp150469
/(exp(-(LT,%*%(parsertemp149320,parsertemp150469))),%*%(rowSums(exp(LT)),parsertemp150470))
::STMT
MATRIX:w,out
FLOAT:reg
LITERAL_FLOAT:2.0,0.5
+(*(0.5,sum(*(out,out))),*(/(reg,2.0),sum(*(w,w))))
::STMT
MATRIX:H_inv
sqrt(diag(H_inv))
::STMT
MATRIX:parsertemp220853,W,sum_Pi,beta
FLOAT:logU
-(+(parsertemp220853,*(beta,/(W,sum_Pi))),logU)
::STMT
MATRIX:meanDiff,parsertemp570372,parsertemp570375
LITERAL_FLOAT:-1.0,1.0,2.0
-(*(/(-1.0,2.0),parsertemp570372),*(/(1.0,2.0),%*%(%*%(meanDiff,parsertemp570375),t(meanDiff))))
::STMT
MATRIX:W,parsertemp411198,H,parsertemp411200
LITERAL_FLOAT:1.0E-8
+(%*%(W,/(*(H,parsertemp411198),t(parsertemp411200))),1.0E-8)
::STMT
FLOAT:parsertemp190487,parsertemp190486,FN,TN,FP,TP
/(-(*(TP,TN),*(FP,FN)),sqrt(*(*(parsertemp190486,parsertemp190487),+(TN,FN))))
::STMT
MATRIX:vW1,parsertemp146961,dout1
FLOAT:191_beta2
LITERAL_FLOAT:1.0,2.0
+(*(191_beta2,vW1),*(-(1.0,191_beta2),^(%*%(parsertemp146961,dout1),2.0)))
::STMT
MATRIX:r,parsertemp1945
FLOAT:norm_r2
LITERAL_FLOAT:2.0
/(sum(^(+(r,parsertemp1945),2.0)),norm_r2)
::STMT
MATRIX:WM
LITERAL_FLOAT:1.0
/(sum(WM),-(sum(WM),1.0))
::STMT
MATRIX:output_values,initial_prediction
LITERAL_FLOAT:0.3
+(initial_prediction,*(0.3,sum(output_values)))
::STMT
FLOAT:so_exact,so_linear_approx
LITERAL_FLOAT:-0.5
/(*(-0.5,so_linear_approx),-(so_exact,so_linear_approx))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
rowSums(^(X,2.0))
::STMT
MATRIX:p,z
LITERAL_FLOAT:-1.0
*(sum(*(p,z)),-1.0)
::STMT
MATRIX:LT,Y,parsertemp149320,parsertemp150469
sum(*(Y,-(LT,%*%(parsertemp149320,parsertemp150469))))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0,2.0
-(0.0,^(finite_linear_terms,2.0))
::STMT
LITERAL_FLOAT:40.0,20.0
*(20.0,40.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0,1.0,2.0
-(*(2.0,>=(linear_terms,0.0)),1.0)
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(-(sum(round(W)),1.0),-(sum(round(W)),2.0))
::STMT
MATRIX:initial_prediction
INT:int744,parsertemp186173
rand(parsertemp186173,int744,cast.FLOAT(initial_prediction),cast.FLOAT(initial_prediction))
::STMT
MATRIX:s,w
sum(*(w,s))
::STMT
MATRIX:252_X
LITERAL_FLOAT:4.5
-(4.5,cast.FLOAT(252_X))
::STMT
LITERAL_FLOAT:1.0,2.0,2003.0
*(-(2003.0,2.0),+(2003.0,1.0))
::STMT
MATRIX:scale_lambda
LITERAL_FLOAT:0.001
diag(*(scale_lambda,0.001))
::STMT
MATRIX:out1,187_dX,parsertemp146955
FLOAT:int533
LITERAL_FLOAT:2.0
^(colSums(*(>(out1,int533),*(parsertemp146955,187_dX))),2.0)
::STMT
MATRIX:R
LITERAL_FLOAT:0.0,4.0
&(>=(R,4.0),>(R,0.0))
::STMT
MATRIX:precisions,X,parsertemp436695,bc_matrix,parsertemp436691
LITERAL_FLOAT:2.0
-(*(bc_matrix,t(*(parsertemp436691,precisions))),*(2.0,%*%(X,t(parsertemp436695))))
::STMT
MATRIX:grad
LITERAL_FLOAT:0.0,2.0
^(-(0.0,grad),2.0)
::STMT
MATRIX:id
==(id,t(id))
::STMT
FLOAT:link_power
LITERAL_FLOAT:1.0
-(/(1.0,link_power),1.0)
::STMT
FLOAT:link_power
LITERAL_FLOAT:-1.0,1.0
-(/(-1.0,link_power),1.0)
::STMT
MATRIX:parsertemp10743,V,parsertemp10742,H,parsertemp10739,parsertemp10738
FLOAT:Eps
%*%(*(H,/(%*%(parsertemp10738,V),+(parsertemp10742,Eps))),t(*(H,/(parsertemp10739,parsertemp10743))))
::STMT
MATRIX:W
FLOAT:m2
LITERAL_FLOAT:1.0
/(*(m2,sum(round(W))),-(sum(round(W)),1.0))
::STMT
MATRIX:parsertemp44076,wnew,parsertemp44079
LITERAL_FLOAT:-1.0,2.0,0.5
+(*(0.5,cast.FLOAT(%*%(parsertemp44076,wnew))),*(2.0,*(-1.0,sum(parsertemp44079))))
::STMT
LITERAL_FLOAT:1.0,2.0,2001.0
*(-(2001.0,2.0),+(2001.0,1.0))
::STMT
MATRIX:A,foffb
LITERAL_FLOAT:0.0
*(!=(A,0.0),+(A,foffb))
::STMT
MATRIX:parsertemp397841,parsertemp397838,W4_rand
LITERAL_FLOAT:0.0873148795050037
t(%*%(*(0.0873148795050037,W4_rand),t(/(parsertemp397838,parsertemp397841))))
::STMT
MATRIX:parsertemp220900,parsertemp220899
LITERAL_FLOAT:300.0,0.0,2.0
^(-(0.0,*(300.0,-(parsertemp220899,parsertemp220900))),2.0)
::STMT
MATRIX:lambda,g,beta
LITERAL_FLOAT:0.0
-(0.0,+(g,*(lambda,beta)))
::STMT
MATRIX:parsertemp76118
LITERAL_FLOAT:0.5,4460.0
round(+(0.5,/(parsertemp76118,4460.0)))
::STMT
MATRIX:knn_index
FLOAT:iter,i
+(*(iter,ncol(knn_index)),i)
::STMT
MATRIX:output,output1
LITERAL_FLOAT:0.1
sum(>=(abs(-(output,output1)),0.1))
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
FLOAT:int472
LITERAL_FLOAT:1.0
/(*(*(^(n_risk_stratum,int472),*(n_risk,n_event_stratum)),-(n_risk_stratum,n_event_stratum)),*(n_risk_stratum,-(n_risk_stratum,1.0)))
::STMT
MATRIX:X
FLOAT:parsertemp165083
LITERAL_FLOAT:2.0
+(*(2.0,ncol(X)),*(nrow(X),parsertemp165083))
::STMT
FLOAT:float538,int243,42_m2X
LITERAL_FLOAT:1000.0
sqrt(*(42_m2X,/(1000.0,-(int243,float538))))
::STMT
MATRIX:C,Xm,parsertemp265706,parsertemp265702,parsertemp265701
FLOAT:ss
+(%*%(t(%*%(Xm,parsertemp265702)),%*%(Xm,%*%(C,parsertemp265701))),*(parsertemp265706,ss))
::STMT
FLOAT:parsertemp115814,sum_sq_y_test,n,ss_res
LITERAL_FLOAT:1.0
-(1.0,/(ss_res,-(sum_sq_y_test,*(n,parsertemp115814))))
::STMT
MATRIX:parsertemp560507,Y
sum(rowSums(*(Y,parsertemp560507)))
::STMT
FLOAT:parsertemp382948,parsertemp382956,loss_init,parsertemp382953
LITERAL_FLOAT:0.5,5.0E-7
-(loss_init,+(*(0.5,parsertemp382948),*(5.0E-7,+(parsertemp382953,parsertemp382956))))
::STMT
MATRIX:p_CG
FLOAT:parsertemp285739,parsertemp285737,pp_CG
LITERAL_FLOAT:-1.0
/(+(*(cast.FLOAT(p_CG),-1.0),sqrt(-(parsertemp285737,parsertemp285739))),pp_CG)
::STMT
MATRIX:p,q,A
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),%*%(t(A),%*%(A,p)))
::STMT
MATRIX:X
FLOAT:n
/(t(colSums(X)),n)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0,0.231641888
/(1.0,+(1.0,*(abs(finite_linear_terms),0.231641888)))
::STMT
MATRIX:parsertemp2832
min(round(parsertemp2832))
::STMT
MATRIX:parsertemp11277
FLOAT:block_size
LITERAL_FLOAT:1.0
+(1.0,*(block_size,parsertemp11277))
::STMT
MATRIX:objvals
LITERAL_FLOAT:1.5000000000000002E-8
*(1.5000000000000002E-8,cast.FLOAT(objvals))
::STMT
FLOAT:std,float481,float926
LITERAL_FLOAT:2.0
INT:int300,int902
^(*(cast.FLOAT(rand(int300,int902,float481,float926)),std),2.0)
::STMT
MATRIX:R,parsertemp40216
FLOAT:numRows
LITERAL_FLOAT:1.0
-(/(numRows,+(R,rowSums(parsertemp40216))),1.0)
::STMT
MATRIX:parsertemp147200,X_train
LITERAL_FLOAT:2.0
*(parsertemp147200,sqrt(/(2.0,ncol(X_train))))
::STMT
LITERAL_FLOAT:1.0,2.0,2003.0
-(^(2003.0,2.0),1.0)
::STMT
MATRIX:categorical,X_sys,freq,mask
LITERAL_FLOAT:0.0
+(*(X_sys,==(mask,0.0)),*(>(categorical,0.0),freq))
::STMT
MATRIX:id
diag(diag(==(id,t(id))))
::STMT
LITERAL_FLOAT:1.0,2.0,2000.0
*(-(2000.0,2.0),+(2000.0,1.0))
::STMT
MATRIX:parsertemp77570
LITERAL_FLOAT:0.5,2358.0
round(+(0.5,/(parsertemp77570,2358.0)))
::STMT
MATRIX:parsertemp379566,m_iter_err_sum,m_err
FLOAT:int404,i_process_item
LITERAL_FLOAT:2.0
*(*(2.0,/(*(parsertemp379566,int404),i_process_item)),+(colSums(m_err),m_iter_err_sum))
::STMT
FLOAT:m2,mu
LITERAL_FLOAT:1.0005002501250626
/(sqrt(*(1.0005002501250626,m2)),mu)
::STMT
MATRIX:r_CG,g_reg,z
LITERAL_FLOAT:0.5
*(0.5,*(cast.FLOAT(z),+(cast.FLOAT(r_CG),cast.FLOAT(g_reg))))
::STMT
LITERAL_FLOAT:0.231641888
0.231641888
::STMT
MATRIX:W
FLOAT:int553,m3,var,wt,int628
LITERAL_FLOAT:2.0,3.0
/(*(^(sum(W),2.0),m3),*(*(-(wt,int553),-(wt,int628)),^(sqrt(var),3.0)))
::STMT
MATRIX:p,r
FLOAT:norm_r2
*(/(sum(*(r,r)),norm_r2),p)
::STMT
MATRIX:parsertemp116094,parsertemp116097
LITERAL_FLOAT:0.0,32.0
sum(|(<(t(parsertemp116094),32.0),==(t(parsertemp116097),0.0)))
::STMT
FLOAT:link_power
LITERAL_FLOAT:1.0,2.0
-(/(1.0,link_power),2.0)
::STMT
MATRIX:A,scale_X
%*%(diag(scale_X),A)
::STMT
FLOAT:sv,rad,v2
/(-(rad,sv),v2)
::STMT
MATRIX:B2,ytest,Xtest
t(-(ytest,%*%(Xtest,B2)))
::STMT
MATRIX:V
min(V)
::STMT
MATRIX:diff_nominal,diff,mask
FLOAT:num_std_median
LITERAL_FLOAT:0.0
+(*(!=(diff_nominal,0.0),num_std_median),*(diff,==(mask,0.0)))
::STMT
MATRIX:s,parsertemp44016,d
*(%*%(t(-(s,parsertemp44016)),d),%*%(t(-(s,parsertemp44016)),d))
::STMT
MATRIX:col
FLOAT:min_val,bin_width
LITERAL_FLOAT:0.5
-(/(-(col,min_val),bin_width),0.5)
::STMT
LITERAL_FLOAT:0.7
0.7
::STMT
MATRIX:Y_counts,means,Y
%*%(Y_counts,/(colSums(-(Y,means)),sum(Y_counts)))
::STMT
FLOAT:p,P
LITERAL_FLOAT:1.0
+(+(1.0,p),P)
::STMT
FLOAT:int494,parsertemp115813,sum_sq_y_test,n,ss_res
/(ss_res,-(sum_sq_y_test,*(n,^(parsertemp115813,int494))))
::STMT
FLOAT:a,c
LITERAL_FLOAT:4.0
*(*(4.0,a),c)
::STMT
LITERAL_FLOAT:0.95
0.95
::STMT
MATRIX:parsertemp409058,parsertemp409054,ctab
LITERAL_FLOAT:0.6
*(parsertemp409058,>(/(parsertemp409054,rowSums(ctab)),0.6))
::STMT
MATRIX:cov
LITERAL_FLOAT:1.0
/(1.0,sqrt(cov))
::STMT
FLOAT:m2
LITERAL_FLOAT:2.0
^(m2,2.0)
::STMT
FLOAT:parsertemp459295
LITERAL_FLOAT:1.0,128.0
+(+(parsertemp459295,1.0),128.0)
::STMT
MATRIX:parsertemp472305,_funvar2708,Iright,_funvar2706,_funvar2707
FLOAT:numI
-(-(cast.FLOAT(_funvar2706),*(/(parsertemp472305,numI),_funvar2707)),*(/(rowSums(Iright),numI),_funvar2708))
::STMT
MATRIX:parsertemp170251,lt_pos_neg
FLOAT:int953
LITERAL_FLOAT:2.0,0.5
*(-(0.5,lt_pos_neg),exp(/(*(parsertemp170251,int953),2.0)))
::STMT
MATRIX:Xd,out
FLOAT:int515
sum(*(*(Xd,>(out,int515)),Xd))
::STMT
MATRIX:parsertemp500439,y
LITERAL_FLOAT:0.5
*(0.5,sum(*(-(parsertemp500439,y),-(parsertemp500439,y))))
::STMT
MATRIX:oldE
LITERAL_FLOAT:1.0
/(sum(oldE),1.0)
::STMT
MATRIX:csgaps,csmask
*(csgaps,>(csgaps,csmask))
::STMT
MATRIX:X_cluster_local,X_comp,X_sim
|(X_cluster_local,*(X_comp,X_sim))
::STMT
MATRIX:2364_2360_Y_prime,W2,W3,2364_2359_Y,parsertemp389610
FLOAT:int704
LITERAL_FLOAT:1.0
%*%(*(-(1.0,^(2364_2359_Y,int704)),%*%(*(2364_2360_Y_prime,parsertemp389610),W3)),W2)
::STMT
LITERAL_FLOAT:1.0E-8
1.0E-8
::STMT
MATRIX:Y,parsertemp2773,Xw
LITERAL_FLOAT:0.0,1.0
>(-(1.0,*(Y,+(Xw,parsertemp2773))),0.0)
::STMT
MATRIX:W,H
LITERAL_FLOAT:1.0E-8
+(%*%(W,H),1.0E-8)
::STMT
MATRIX:A,b
LITERAL_FLOAT:-1.0,2.0
^(%*%(*(t(A),-1.0),b),2.0)
::STMT
MATRIX:C,C_old
LITERAL_FLOAT:2.0
sum(^(-(C,C_old),2.0))
::STMT
MATRIX:P,lambda,X,Y,B_new
+(%*%(t(X),-(P,Y)),*(lambda,B_new))
::STMT
MATRIX:Xtest_dists
LITERAL_FLOAT:0.0,1.0
rowSums(*(<=(Xtest_dists,1.0),<(0.0,Xtest_dists)))
::STMT
LITERAL_FLOAT:16.0,15.0
*(15.0,16.0)
::STMT
MATRIX:parsertemp414376,parsertemp414378
LITERAL_FLOAT:0.0,1.0,199.0
-(1.0,<=(/(-(parsertemp414376,parsertemp414378),199.0),0.0))
::STMT
LITERAL_FLOAT:0.05473123640475826
0.05473123640475826
::STMT
FLOAT:parsertemp164939
LITERAL_FLOAT:100.0
*(100.0,parsertemp164939)
::STMT
MATRIX:r,parsertemp1936,parsertemp1937
FLOAT:parsertemp1941,norm_r2
LITERAL_FLOAT:-1.0
*(+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))),-1.0)
::STMT
MATRIX:_sbcvar1716
LITERAL_FLOAT:0.8
*(_sbcvar1716,0.8)
::STMT
MATRIX:A
rowSums(abs(A))
::STMT
MATRIX:parsertemp30951,G,authorities,hubs
-(/(%*%(t(G),%*%(G,authorities)),max(%*%(parsertemp30951,hubs))),authorities)
::STMT
MATRIX:negSampleMeans,negSamples
FLOAT:int960,int292
LITERAL_FLOAT:1.0,1500.0
/(-(colSums(^(negSamples,int960)),*(1500.0,^(negSampleMeans,int292))),-(1500.0,1.0))
::STMT
MATRIX:X,Y
FLOAT:x
*(/(-(x,X),-(X,X)),Y)
::STMT
LITERAL_FLOAT:1.0,10000.0,0.8
+(*(10000.0,0.8),1.0)
::STMT
MATRIX:Hdiff,betamax,beta
FLOAT:int762,int537
LITERAL_FLOAT:1.0E20
==(+(*(>=(Hdiff,int537),betamax),*(<(Hdiff,int762),beta)),1.0E20)
::STMT
MATRIX:addedE
LITERAL_FLOAT:20.0
/(sum(addedE),20.0)
::STMT
MATRIX:parsertemp570372
LITERAL_FLOAT:-1.0,2.0
*(/(-1.0,2.0),parsertemp570372)
::STMT
MATRIX:parsertemp43634
FLOAT:int332
LITERAL_FLOAT:0.0,2.0
sum(^(+(0.0,*(int332,parsertemp43634)),2.0))
::STMT
MATRIX:dotMissing,parsertemp553021,dotM2
FLOAT:int159
t(sqrt(-(+(dotM2,dotMissing),*(int159,parsertemp553021))))
::STMT
MATRIX:parsertemp436043
LITERAL_FLOAT:1.0
INT:int684,n_col
%*%(parsertemp436043,rand(int684,n_col,1.0,1.0))
::STMT
MATRIX:features,beta_unscaled
FLOAT:intercept,parsertemp176418
LITERAL_FLOAT:3.0
-(sqrt(parsertemp176418),*(3.0,+(%*%(features,beta_unscaled),intercept)))
::STMT
MATRIX:X,I
LITERAL_FLOAT:1.0
-(/(nrow(X),t(colSums(I))),1.0)
::STMT
MATRIX:parsertemp506990
LITERAL_FLOAT:0.7
<(parsertemp506990,0.7)
::STMT
MATRIX:252_K
LITERAL_FLOAT:0.0
-(0.0,cast.FLOAT(252_K))
::STMT
MATRIX:addedE
LITERAL_FLOAT:40.0
/(sum(addedE),40.0)
::STMT
LITERAL_FLOAT:8.674675786448736
8.674675786448736
::STMT
MATRIX:e,X,tS
FLOAT:l
%*%(t(e),==(%*%(X,tS),l))
::STMT
MATRIX:_sbcvar332
LITERAL_FLOAT:9999.0
/(_sbcvar332,9999.0)
::STMT
MATRIX:TK
LITERAL_FLOAT:0.0
+(TK,==(TK,0.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0,1.0
-(exp(*(linear_terms,-1.0)),1.0)
::STMT
MATRIX:parsertemp31908,X
FLOAT:l
/(nrow(X),t(colSums(==(parsertemp31908,l))))
::STMT
MATRIX:p,Z
cast.FLOAT(%*%(t(p),%*%(Z,p)))
::STMT
MATRIX:W
FLOAT:m2,int169
LITERAL_FLOAT:1.0,2.0,3.0
*(*(*(3.0,^(m2,int169)),^(sum(W),2.0)),-(sum(round(W)),1.0))
::STMT
MATRIX:parsertemp43619
LITERAL_FLOAT:1.0
-(/(1.0,+(1.0,exp(parsertemp43619))),1.0)
::STMT
MATRIX:minD,parsertemp222602,parsertemp222599
FLOAT:int967
rowSums(<=(+(*(int967,parsertemp222599),t(parsertemp222602)),minD))
::STMT
FLOAT:num_hidden1,m
LITERAL_FLOAT:6.0
/(sqrt(6.0),sqrt(+(m,num_hidden1)))
::STMT
FLOAT:pad_size,Hin
LITERAL_FLOAT:1.0
-(Hin,-(pad_size,1.0))
::STMT
MATRIX:R,parsertemp500360,parsertemp500307,parsertemp500359
FLOAT:int52
+(%*%(rowSums(^(R,int52)),parsertemp500359),%*%(parsertemp500360,t(rowSums(parsertemp500307))))
::STMT
MATRIX:RDMean,parsertemp265748
LITERAL_FLOAT:2.0
-(parsertemp265748,^(RDMean,2.0))
::STMT
FLOAT:float503,float111
LITERAL_FLOAT:1.0
INT:int154,int585
/(1.0,+(1.0,exp(rand(int585,int154,float503,float111))))
::STMT
MATRIX:parsertemp460642
LITERAL_FLOAT:0.05
*(parsertemp460642,0.05)
::STMT
MATRIX:Y,missing_mask_Y
LITERAL_FLOAT:0.0,1.0
+(*(missing_mask_Y,+(max(Y),1.0)),*(Y,==(missing_mask_Y,0.0)))
::STMT
LITERAL_FLOAT:1.0,1000.0
-(1000.0,1.0)
::STMT
MATRIX:vW2,dW2
FLOAT:193_beta2
LITERAL_FLOAT:1.0,2.0
+(*(193_beta2,vW2),*(-(1.0,193_beta2),^(dW2,2.0)))
::STMT
MATRIX:F
%*%(rowSums(F),colSums(F))
::STMT
MATRIX:parsertemp146940,184_dtemp,mb3
FLOAT:beta1
LITERAL_FLOAT:1.0
+(*(beta1,mb3),*(-(1.0,beta1),colSums(-(184_dtemp,parsertemp146940))))
::STMT
MATRIX:S,V
LITERAL_FLOAT:2.0
^(sum(*(S,V)),2.0)
::STMT
MATRIX:tmp,X
+(%*%(t(X),X),diag(tmp))
::STMT
MATRIX:P,gradients,Theta
FLOAT:alpha
*(alpha,%*%(t(gradients),%*%(P,Theta)))
::STMT
MATRIX:parsertemp389212
LITERAL_FLOAT:1058.0
/(parsertemp389212,1058.0)
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:0.0,1.0
^(linear_terms,-(/(0.0,link_power),1.0))
::STMT
FLOAT:parsertemp22485,parsertemp22452,parsertemp22453
LITERAL_FLOAT:2.0
+(parsertemp22485,*(2.0,sqrt(+(parsertemp22452,parsertemp22453))))
::STMT
MATRIX:parsertemp10964,C
==(parsertemp10964,C)
::STMT
MATRIX:parsertemp146931,184_dtemp,parsertemp146929,184_unnorm_probs,parsertemp146936,W3
%*%(-(*(*(parsertemp146929,parsertemp146931),/(184_unnorm_probs,parsertemp146936)),*(/(184_unnorm_probs,parsertemp146936),rowSums(184_dtemp))),t(W3))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:2.0
^(linear_terms,-(/(2.0,link_power),2.0))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:0.0,2.0
^(linear_terms,-(/(0.0,link_power),2.0))
::STMT
FLOAT:s_rows,h
LITERAL_FLOAT:2.0
/(-(s_rows,h),2.0)
::STMT
FLOAT:i
LITERAL_FLOAT:314.0
+(314.0,i)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
/(1.0,+(1.0,exp(linear_terms)))
::STMT
LITERAL_FLOAT:1.0,100.0
INT:int212,int982
rand(int212,int982,1.0,100.0)
::STMT
MATRIX:parsertemp181045
FLOAT:window_size,q,parsertemp181038
LITERAL_FLOAT:1.0
-(1.0,/(-(q,*(window_size,parsertemp181038)),*(window_size,cast.FLOAT(parsertemp181045))))
::STMT
MATRIX:col_nonzeros,parsertemp383019,parsertemp383016,row_nonzeros
FLOAT:reg
*(reg,+(sum(*(parsertemp383016,row_nonzeros)),sum(*(parsertemp383019,col_nonzeros))))
::STMT
MATRIX:output1,dataset
LITERAL_FLOAT:0.16
sum(>=(abs(-(output1,dataset)),0.16))
::STMT
LITERAL_FLOAT:1.0,2.0,7000.0
*(^(7000.0,2.0),-(7000.0,1.0))
::STMT
MATRIX:P,scale_X,shift_X,X,Y,Grad
+(%*%(diag(scale_X),%*%(t(X),-(P,Y))),%*%(shift_X,Grad))
::STMT
MATRIX:g_new,s,g_old
*(/(sum(*(g_new,g_new)),sum(*(g_old,g_old))),s)
::STMT
MATRIX:centroid_placer,All_Centroids,X_samples
+(All_Centroids,%*%(centroid_placer,%*%(centroid_placer,X_samples)))
::STMT
MATRIX:C,tmp,XtZ
FLOAT:ZtZ_sum
trace(*(tmp,%*%(t(C),/(XtZ,ZtZ_sum))))
::STMT
MATRIX:ytest
FLOAT:mean_y_test,int501,int192
LITERAL_FLOAT:1.0
/(-(sum(^(ytest,int501)),*($1:nrow(ytest),^(mean_y_test,int192))),-($1,1.0))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005,44.75488800120049
/(sqrt(*(1.0004995004995005,m2)),44.75488800120049)
::STMT
LITERAL_FLOAT:0.5107539184552492
0.5107539184552492
::STMT
FLOAT:Woutc20,Houtc20,F1
LITERAL_FLOAT:1.0
+(*(*(F1,Houtc20),Woutc20),1.0)
::STMT
LITERAL_FLOAT:1.0005
1.0005
::STMT
MATRIX:e_r_rev_agg,Xi_agg_rev_agg,X_agg
LITERAL_FLOAT:2.0
/(*(X_agg,Xi_agg_rev_agg),^(e_r_rev_agg,2.0))
::STMT
LITERAL_FLOAT:12.0,4.0
*(12.0,4.0)
::STMT
MATRIX:z
FLOAT:trust_delta_sq
-(sum(*(z,z)),trust_delta_sq)
::STMT
LITERAL_FLOAT:1.0E-12
INT:int210,int691
rand(int691,int210,1.0E-12,1.0E-12)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
-(0.0,cast.MATRIX(sum(X)))
::STMT
MATRIX:parsertemp443530,parsertemp443534,resp,parsertemp443533,X
FLOAT:float582
LITERAL_FLOAT:2.22E-16
%*%(*(t(/(parsertemp443533,parsertemp443534)),+(colSums(resp),2.22E-16)),/(%*%(t(resp),X),t(+(parsertemp443530,float582))))
::STMT
FLOAT:i,j
LITERAL_FLOAT:1.0,10.0
+(*(-(i,1.0),10.0),j)
::STMT
FLOAT:norm_r2_LS,p_LS,parsertemp170552,lambda_LS
/(norm_r2_LS,*(cast.FLOAT(p_LS),+(*(parsertemp170552,p_LS),*(lambda_LS,p_LS))))
::STMT
FLOAT:q
LITERAL_FLOAT:1.0,10000.0
*(10000.0,-(q,1.0))
::STMT
LITERAL_FLOAT:12.0,8.0
*(12.0,8.0)
::STMT
MATRIX:parsertemp472359,I
LITERAL_FLOAT:0.0
*(I,==(*(t(parsertemp472359),I),0.0))
::STMT
MATRIX:Y
sum(==(Y,min(Y)))
::STMT
FLOAT:var_lag,xq_lag,arch_coef,var_coef,a0
INT:int818,int723
rand(int818,int723,+(+(a0,*(arch_coef,xq_lag)),*(var_coef,var_lag)),+(+(a0,*(arch_coef,xq_lag)),*(var_coef,var_lag)))
::STMT
MATRIX:means,parsertemp560530
LITERAL_FLOAT:1.0
/(sum(<(*(means,parsertemp560530),1.0)),*(nrow(means),ncol(means)))
::STMT
MATRIX:classCounts
LITERAL_FLOAT:10000.0
/(classCounts,10000.0)
::STMT
MATRIX:ones,classFeatureCounts
LITERAL_FLOAT:1.0,750.0
%*%(+(rowSums(classFeatureCounts),*(750.0,1.0)),ones)
::STMT
MATRIX:Y_prob
LITERAL_FLOAT:0.0,1.0
*(Y_prob,-(1.0,<=(Y_prob,0.0)))
::STMT
LITERAL_FLOAT:12.0
*(12.0,12.0)
::STMT
MATRIX:P,R,I,L
LITERAL_FLOAT:0.0
*(==(%*%(P,I),0.0),%*%(%*%(P,L),R))
::STMT
MATRIX:E
LITERAL_FLOAT:2.0,0.5
*(0.5,sum(^(E,2.0)))
::STMT
LITERAL_FLOAT:12.0,40.0
*(12.0,40.0)
::STMT
MATRIX:P,X,Y
LITERAL_FLOAT:2.0
^(%*%(t(X),-(P,Y)),2.0)
::STMT
MATRIX:r,parsertemp1936,parsertemp1937
FLOAT:parsertemp1941,norm_r2
*(+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))),+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:2.0
/(^(linear_terms,/(2.0,link_power)),2.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
/(linear_terms,-(1.0,var_power))
::STMT
MATRIX:Y_prob,Y
-(*(Y,Y_prob),*(Y,Y_prob))
::STMT
MATRIX:P
LITERAL_FLOAT:1.0,100.0
INT:int801,int859
%*%(P,rand(int859,int801,1.0,100.0))
::STMT
FLOAT:502_strideh,502_padh,int986,502_Hin,502_Hf
LITERAL_FLOAT:2.0
+(-(*(502_strideh,-(502_Hin,int986)),*(2.0,502_padh)),502_Hf)
::STMT
MATRIX:parsertemp195899
FLOAT:center
LITERAL_FLOAT:1.0
t(-(1.0,abs(-(parsertemp195899,center))))
::STMT
MATRIX:parsertemp539203
FLOAT:int999
LITERAL_FLOAT:2.0,0.6666666666666666
min(^(/(*(parsertemp539203,int999),2.0),0.6666666666666666))
::STMT
MATRIX:parsertemp32833,parsertemp32842,X,Y,parsertemp32827,parsertemp32824,K,parsertemp32839
FLOAT:x
LITERAL_FLOAT:1.0
+(*(-(*(K,parsertemp32833),-(Y,Y)),-(1.0,/(parsertemp32824,parsertemp32827))),*(+(*(parsertemp32839,parsertemp32842),-(Y,Y)),/(-(x,X),-(X,X))))
::STMT
MATRIX:X,Y,out
%*%(t(X),*(out,Y))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,33.0
+(*(-(i,1.0),33.0),1.0)
::STMT
MATRIX:lambda,parsertemp149248,V,X,P_1K,parsertemp149251
+(%*%(t(X),-(*(P_1K,parsertemp149248),*(P_1K,parsertemp149251))),*(lambda,V))
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:0.5
/(0.5,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:X,Y,K
-(*(cast.FLOAT(K),-(cast.FLOAT(X),cast.FLOAT(X))),-(cast.FLOAT(Y),cast.FLOAT(Y)))
::STMT
LITERAL_FLOAT:110.0,3000.0
*(3000.0,110.0)
::STMT
MATRIX:s
FLOAT:int741,alpha,n
LITERAL_FLOAT:1.0
*(-(1.0,alpha),-(*(/(int741,s),n),1.0))
::STMT
LITERAL_FLOAT:3.0,5.0,2000.0
*(+(2000.0,5.0),-(2000.0,3.0))
::STMT
MATRIX:the_exp
FLOAT:int91,int490
LITERAL_FLOAT:1.0,1.0E7
*(-(1.0,==(+(int91,the_exp),1.0E7)),-(1.0,exp(-(int490,the_exp))))
::STMT
FLOAT:parsertemp557354,parsertemp557356,prob_true
/(*(prob_true,parsertemp557354),parsertemp557356)
::STMT
MATRIX:parsertemp42288,_sbcvar332,parsertemp42289
FLOAT:meanX
LITERAL_FLOAT:9999.0,0.5
*(/(_sbcvar332,9999.0),-(+(-(parsertemp42288,parsertemp42289),0.5),meanX))
::STMT
MATRIX:_sbcvar11
LITERAL_FLOAT:1000.0
/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0)
::STMT
MATRIX:parsertemp436682
FLOAT:d
t(*(d,parsertemp436682))
::STMT
MATRIX:parsertemp31023,parsertemp31025
LITERAL_FLOAT:2.0,99.0,990000.0
/(^(/(-(parsertemp31023,parsertemp31025),99.0),2.0),990000.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,32.0
+(*(-(i,1.0),32.0),1.0)
::STMT
FLOAT:alpha_LS,r_LS,norm_r2_LS,p_LS,int933
LITERAL_FLOAT:0.0
+(-(0.0,+(r_LS,*(alpha_LS,p_LS))),*(/(^(r_LS,int933),norm_r2_LS),cast.FLOAT(p_LS)))
::STMT
MATRIX:resp,mean,X
*(mean,%*%(t(resp),X))
::STMT
MATRIX:mW2,dW2
FLOAT:193_beta1
LITERAL_FLOAT:1.0
+(*(193_beta1,mW2),*(-(1.0,193_beta1),dW2))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,12.0
+(-(12.0,idx),1.0)
::STMT
MATRIX:_sbcvar1716
LITERAL_FLOAT:30.0
+(30.0,nrow(_sbcvar1716))
::STMT
FLOAT:sig,q,mu,int505
LITERAL_FLOAT:1.0,4.0
-(1.0,/(-(q,*(int505,mu)),*(4.0,*(sig,sig))))
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int950,int417
LITERAL_FLOAT:6999.0,7000.0
/(-(colSums(^(posSamples,int950)),*(7000.0,^(posSampleMeans,int417))),6999.0)
::STMT
MATRIX:dout,X
LITERAL_FLOAT:0.0
*(>(X,0.0),dout)
::STMT
MATRIX:features,beta_unscaled
FLOAT:intercept
+(%*%(features,beta_unscaled),intercept)
::STMT
MATRIX:X_batch,mW1,parsertemp146957,187_dX
FLOAT:beta1
LITERAL_FLOAT:1.0
+(*(beta1,mW1),*(-(1.0,beta1),%*%(t(X_batch),*(parsertemp146957,187_dX))))
::STMT
FLOAT:parsertemp40813,m2,mu
LITERAL_FLOAT:5.0
-(mu,*(5.0,sqrt(*(parsertemp40813,m2))))
::STMT
MATRIX:Y,linear_terms
-(Y,exp(linear_terms))
::STMT
LITERAL_FLOAT:61.0,4.0
/(61.0,4.0)
::STMT
MATRIX:qLow,length
<(length,qLow)
::STMT
MATRIX:inactive_set,w
FLOAT:int224
sum(abs(-(inactive_set,!=(w,int224))))
::STMT
MATRIX:W1_rand,stds,parsertemp393478
LITERAL_FLOAT:0.07261134713572442
t(%*%(*(0.07261134713572442,W1_rand),t(/(parsertemp393478,stds))))
::STMT
LITERAL_FLOAT:1.0004995004995005
1.0004995004995005
::STMT
LITERAL_FLOAT:12.0,2.0
*(12.0,2.0)
::STMT
MATRIX:parsertemp496901
FLOAT:std
cast.MATRIX(*(cast.FLOAT(parsertemp496901),std))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0,2003.0
*(/(2003.0,-(2003.0,1.0)),m2)
::STMT
MATRIX:Y,parsertemp2796,Xw
LITERAL_FLOAT:0.0,1.0
*(>(-(1.0,*(Y,Xw)),0.0),-(1.0,*(Y,+(Xw,parsertemp2796))))
::STMT
LITERAL_FLOAT:3.4011973816621555
3.4011973816621555
::STMT
MATRIX:parsertemp396420,W4_rand,parsertemp396423
LITERAL_FLOAT:0.08681986202598489
t(%*%(*(0.08681986202598489,W4_rand),t(/(parsertemp396420,parsertemp396423))))
::STMT
LITERAL_FLOAT:Infinity
INT:int207,parsertemp163324
rand(parsertemp163324,int207,Infinity,Infinity)
::STMT
LITERAL_FLOAT:1.0
INT:int223,int713
rand(int223,int713,1.0,1.0)
::STMT
LITERAL_FLOAT:-1.0
INT:int121,n
rand(n,int121,-1.0,-1.0)
::STMT
LITERAL_FLOAT:-1.0,1.0
INT:num_hidden1,m
rand(num_hidden1,m,-1.0,1.0)
::STMT
MATRIX:parsertemp16858
LITERAL_FLOAT:1.0E-6
*(<(sqrt(rowSums(parsertemp16858)),1.0E-6),1.0E-6)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,3.0,32.0
+(*(-(i,1.0),32.0),3.0)
::STMT
MATRIX:parsertemp129018
LITERAL_FLOAT:2.0
*(max(parsertemp129018),2.0)
::STMT
LITERAL_FLOAT:2.0,64.0
/(64.0,2.0)
::STMT
MATRIX:p,parsertemp477949,parsertemp477948
FLOAT:norm_r2
/(norm_r2,sum(*(p,%*%(parsertemp477948,parsertemp477949))))
::STMT
MATRIX:residual_matrix
FLOAT:273_lambda
LITERAL_FLOAT:2.0
/(^(sum(residual_matrix),2.0),+(nrow(residual_matrix),273_lambda))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,-1.0
+(1.0,exp(*(X,-1.0)))
::STMT
MATRIX:prediction,target
LITERAL_FLOAT:1.0
/(*(/(1.0,nrow(target)),-(prediction,target)),*(prediction,-(1.0,prediction)))
::STMT
MATRIX:parsertemp44107,parsertemp44109,wnew
LITERAL_FLOAT:2.0
^(+(wnew,*(2.0,%*%(parsertemp44107,parsertemp44109))),2.0)
::STMT
LITERAL_FLOAT:1.0,2.0
INT:int199,parsertemp282730
rand(parsertemp282730,int199,1.0,2.0)
::STMT
MATRIX:R,parsertemp40216,parsertemp40215,parsertemp40225
FLOAT:level
/(+(R,rowSums(*(parsertemp40216,parsertemp40225))),+(R,rowSums(==(parsertemp40215,level))))
::STMT
MATRIX:r,d
FLOAT:r2
*(/(cast.FLOAT(%*%(r,r)),r2),d)
::STMT
MATRIX:parsertemp130418
LITERAL_FLOAT:4.0
*(max(parsertemp130418),4.0)
::STMT
MATRIX:lambda,scale_X,gXY,beta
FLOAT:int164
t(+(*(scale_X,-(int164,gXY)),*(lambda,beta)))
::STMT
MATRIX:ss,se
FLOAT:130_eAvg,130_alpha
LITERAL_FLOAT:1.0
*(130_alpha,-(/(/(se,ss),130_eAvg),1.0))
::STMT
MATRIX:D,parsertemp570375,classMeans
%*%(%*%(-(D,classMeans),parsertemp570375),t(-(D,classMeans)))
::STMT
FLOAT:nc
LITERAL_FLOAT:1.0,10.0
*(+(10.0,1.0),-(nc,1.0))
::STMT
LITERAL_FLOAT:3.0,5.0,2003.0
*(+(2003.0,5.0),-(2003.0,3.0))
::STMT
FLOAT:FN,FP,TN,TP
*(*(*(+(TP,FP),+(TP,FN)),+(TN,FP)),+(TN,FN))
::STMT
LITERAL_FLOAT:64.0,8.0
/(64.0,8.0)
::STMT
MATRIX:parsertemp170238
FLOAT:float74
LITERAL_FLOAT:1.0,1.061405429
*(/(1.0,+(1.0,*(parsertemp170238,float74))),1.061405429)
::STMT
MATRIX:W,H
LITERAL_FLOAT:1.0E-8
+(%*%(%*%(t(W),W),H),1.0E-8)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
+(rowSums(classFeatureCounts),*(750.0,1.0))
::STMT
MATRIX:X,outlierFilter
LITERAL_FLOAT:0.0
*(==(outlierFilter,0.0),X)
::STMT
MATRIX:Y,linear_terms
FLOAT:link_power
LITERAL_FLOAT:1.0
-(Y,^(linear_terms,/(1.0,link_power)))
::STMT
LITERAL_FLOAT:4.0,64.0
/(64.0,4.0)
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.0005
sqrt(*(m2X,1.0005))
::STMT
MATRIX:parsertemp460644
LITERAL_FLOAT:0.0625,1.4142135623730951
/(*(parsertemp460644,0.0625),1.4142135623730951)
::STMT
MATRIX:_sbcvar415,X2
LITERAL_FLOAT:0.050000000000000044,1.0
*(0.050000000000000044,-(/(nrow(X2),_sbcvar415),1.0))
::STMT
MATRIX:lambda,scale_X,p_CG,w,X,parsertemp285715
+(*(lambda,p_CG),%*%(diag(scale_X),%*%(t(X),*(w,parsertemp285715))))
::STMT
MATRIX:X
FLOAT:2917_N,2917_split
LITERAL_FLOAT:1.0
+(-(nrow(X),round(*(2917_N,2917_split))),1.0)
::STMT
MATRIX:C,X
FLOAT:int301
LITERAL_FLOAT:-2.0
+(*(-2.0,%*%(X,t(C))),t(rowSums(^(C,int301))))
::STMT
MATRIX:Y_counts,Y,avg_tot_Y
LITERAL_FLOAT:2.0
colSums(^(-(Y,%*%(Y_counts,avg_tot_Y)),2.0))
::STMT
MATRIX:parsertemp555766,target
LITERAL_FLOAT:1.0
*(-(1.0,target),parsertemp555766)
::STMT
MATRIX:samples_vs_runs_map,centroid_placer,X_samples
LITERAL_FLOAT:2.0
%*%(samples_vs_runs_map,rowSums(^(%*%(centroid_placer,X_samples),2.0)))
::STMT
MATRIX:parsertemp285718,p_CG,shift_X,parsertemp285720,temp_CG
sum(*(p_CG,+(+(parsertemp285718,parsertemp285720),%*%(shift_X,temp_CG))))
::STMT
LITERAL_FLOAT:3.0,5.0,2001.0
*(+(2001.0,5.0),-(2001.0,3.0))
::STMT
MATRIX:parsertemp386457,parsertemp386448,parsertemp386451,parsertemp386453,withinEps
FLOAT:int257,int227
LITERAL_FLOAT:0.0
*(*(>(*(parsertemp386448,withinEps),0.0),&(==(parsertemp386451,int257),>(parsertemp386453,int227))),parsertemp386457)
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,6.0
*(*(6.0,sum(round(W))),-(sum(round(W)),1.0))
::STMT
MATRIX:var_X_cols,parsertemp1522
FLOAT:int590
LITERAL_FLOAT:1.0
/(1.0,sqrt(+(*(var_X_cols,parsertemp1522),<=(var_X_cols,int590))))
::STMT
LITERAL_FLOAT:1.0,2003.0
/(2003.0,-(2003.0,1.0))
::STMT
MATRIX:mu
cast.FLOAT(*(mu,mu))
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int131,int672
LITERAL_FLOAT:1.0,2000.0
/(-(colSums(^(posSamples,int672)),*(2000.0,^(posSampleMeans,int131))),-(2000.0,1.0))
::STMT
MATRIX:parsertemp43993,d,Hd,parsertemp44001
*(cast.FLOAT(/(sum(parsertemp43993),%*%(parsertemp44001,Hd))),d)
::STMT
MATRIX:parsertemp399256,W4_rand,parsertemp399259
LITERAL_FLOAT:0.08725945907447251
t(%*%(*(0.08725945907447251,W4_rand),t(/(parsertemp399256,parsertemp399259))))
::STMT
MATRIX:d,X,logisticD
*(logisticD,%*%(X,d))
::STMT
MATRIX:P,I,X2
LITERAL_FLOAT:0.0
!=(*(t(%*%(X2,P)),I),0.0)
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp171113
FLOAT:parsertemp171116
-(parsertemp171113,*(parsertemp171116,+(is_zero_y_corr,is_one_y_corr)))
::STMT
MATRIX:b,X
*(X,exp(%*%(X,b)))
::STMT
MATRIX:W4_rand
LITERAL_FLOAT:0.08725945907447251
*(0.08725945907447251,W4_rand)
::STMT
FLOAT:i,n
LITERAL_FLOAT:-1.0,3.0
*(n,^(3.0,*(i,-1.0)))
::STMT
MATRIX:2700_X,2700_W,2726_dpred,parsertemp459177,2699_probs
LITERAL_FLOAT:5.0E-4
+(%*%(t(2700_X),-(*(2726_dpred,2699_probs),*(2699_probs,parsertemp459177))),*(5.0E-4,2700_W))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int840,int752,int382,int905
+(%*%(rand(int382,int905,0.0,1.0),rand(int840,int752,0.0,1.0)),0.0)
::STMT
MATRIX:ts
LITERAL_FLOAT:4.0
-(length(ts),4.0)
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:1.0
*(^(exp(linear_terms),1.0),-(Y,exp(linear_terms)))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:-1.0
*(^(exp(linear_terms),-1.0),-(Y,exp(linear_terms)))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.5107539184552492
*(0.5107539184552492,W2_rand)
::STMT
MATRIX:r
LITERAL_FLOAT:0.0,9.999999999999998E-15
*(-(0.0,cast.FLOAT(%*%(r,r))),9.999999999999998E-15)
::STMT
FLOAT:p,i
LITERAL_FLOAT:1.0
-(+(p,1.0),i)
::STMT
LITERAL_FLOAT:1.0,6.0,2000.0
*(*(6.0,2000.0),-(2000.0,1.0))
::STMT
MATRIX:s,g_old
FLOAT:step_sz
*(step_sz,cast.FLOAT(%*%(t(s),g_old)))
::STMT
MATRIX:lambda,parsertemp171604,beta,parsertemp171603
LITERAL_FLOAT:2.0
sum(^(+(+(parsertemp171603,parsertemp171604),*(lambda,beta)),2.0))
::STMT
FLOAT:parsertemp40812,m2,int666
LITERAL_FLOAT:5.0
*(5.0,sqrt(*(/(int666,parsertemp40812),m2)))
::STMT
MATRIX:output,outputR,leading_NA
+(*(outputR,leading_NA),output)
::STMT
MATRIX:scale_X,parsertemp274081
FLOAT:N
LITERAL_FLOAT:0.0
*(-(0.0,/(t(parsertemp274081),N)),scale_X)
::STMT
MATRIX:parsertemp389187,parsertemp389190
FLOAT:int284,int38
LITERAL_FLOAT:1.0,2.0
-(1.0,^(/(-(parsertemp389187,int284),+(parsertemp389190,int38)),2.0))
::STMT
MATRIX:p,q,parsertemp1939
FLOAT:norm_r2
*(/(norm_r2,cast.FLOAT(%*%(parsertemp1939,q))),p)
::STMT
MATRIX:X
LITERAL_FLOAT:-1.0,2.0
^(*(t(colSums(X)),-1.0),2.0)
::STMT
MATRIX:key_unique,key
t(==(key_unique,t(key)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,42.0
+(*(-(i,1.0),42.0),1.0)
::STMT
MATRIX:P
+(P,t(P))
::STMT
MATRIX:ss
FLOAT:130_n
/(130_n,ss)
::STMT
MATRIX:Xm,Z,parsertemp265713
cast.FLOAT(%*%(colSums(%*%(Z,parsertemp265713)),rowSums(t(Xm))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(-(sum(round(W)),1.0),-(sum(round(W)),2.0))
::STMT
MATRIX:out3,parsertemp146931,parsertemp146929,184_unnorm_probs,parsertemp146936,184_scores,parsertemp146933
*(/(exp(-(out3,parsertemp146933)),rowSums(exp(184_scores))),rowSums(*(*(parsertemp146929,parsertemp146931),/(184_unnorm_probs,parsertemp146936))))
::STMT
MATRIX:p_LS,parsertemp170552
FLOAT:lambda_LS
sum(*(p_LS,+(%*%(parsertemp170552,p_LS),*(lambda_LS,p_LS))))
::STMT
FLOAT:ss3,ss2,int486,ssPrev,Fn,m,n
/(/(-(+(Fn,ss2),*(int486,ss3)),*(n,m)),ssPrev)
::STMT
FLOAT:a,b,c
LITERAL_FLOAT:2.0,4.0
-(^(b,2.0),*(*(4.0,a),c))
::STMT
MATRIX:parsertemp16858,parsertemp16867,parsertemp16865,77_X_row_norm
FLOAT:float257,float144
LITERAL_FLOAT:1.0E-6
%*%(+(sqrt(rowSums(parsertemp16858)),*(<(77_X_row_norm,float144),1.0E-6)),t(+(sqrt(parsertemp16865),*(parsertemp16867,float257))))
::STMT
MATRIX:WM
sum(WM)
::STMT
MATRIX:X
FLOAT:parsertemp78,parsertemp80
/(-(X,parsertemp78),sqrt(parsertemp80))
::STMT
MATRIX:Train,2342_m_colmin
LITERAL_FLOAT:2.0
*(2.0,-(Train,2342_m_colmin))
::STMT
MATRIX:E,O
*(sum(-(O,E)),sum(-(O,E)))
::STMT
MATRIX:D,parsertemp10958
%*%(D,t(parsertemp10958))
::STMT
FLOAT:run_index
LITERAL_FLOAT:96.0
*(96.0,run_index)
::STMT
FLOAT:padh,int343,parsertemp195863,strideh,out_padh,Hf
+(+(-(*(strideh,parsertemp195863),*(int343,padh)),Hf),out_padh)
::STMT
MATRIX:P,Z,ZERODIAG,parsertemp220891
FLOAT:int1,parsertemp220894
rowSums(*(-(P,/(Z,parsertemp220894)),*(/(int1,parsertemp220891),ZERODIAG)))
::STMT
MATRIX:parsertemp386457,parsertemp386459,parsertemp386449,parsertemp386452,parsertemp386454
FLOAT:int981
-(*(*(>(parsertemp386449,int981),&(parsertemp386452,parsertemp386454)),parsertemp386457),parsertemp386459)
::STMT
MATRIX:p_CG,z
*(cast.FLOAT(%*%(t(p_CG),z)),cast.FLOAT(%*%(t(p_CG),z)))
::STMT
MATRIX:Q1,X,IQR
FLOAT:k
<(X,-(Q1,*(k,IQR)))
::STMT
MATRIX:Q3,X,IQR
FLOAT:k
>(X,+(Q3,*(k,IQR)))
::STMT
MATRIX:ubScores,fSizes,parsertemp31451
FLOAT:int463,minsc,level,int864
&(&(fSizes,&(>(ubScores,minsc),>(ubScores,int463))),==(rowSums(!=(parsertemp31451,int864)),level))
::STMT
LITERAL_FLOAT:53.0,8.0
/(53.0,8.0)
::STMT
MATRIX:pearson_residual_sq
LITERAL_FLOAT:900.0
/(sum(pearson_residual_sq),900.0)
::STMT
MATRIX:W
FLOAT:int267,wt,int283
LITERAL_FLOAT:1.0,3.0,6.0
/(*(*(6.0,sum(W)),-(sum(W),1.0)),*(*(-(wt,int283),+(wt,int267)),+(sum(W),3.0)))
::STMT
MATRIX:linear_terms
FLOAT:var_power,link_power
LITERAL_FLOAT:2.0
^(linear_terms,/(-(2.0,var_power),link_power))
::STMT
FLOAT:m2X,W,float189
sqrt(*(m2X,/(W,-(W,float189))))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:2.0
/(exp(*(linear_terms,2.0)),2.0)
::STMT
LITERAL_FLOAT:7.996E9
7.996E9
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
INT:int259,int839
%*%(+(rowSums(classFeatureCounts),*(500.0,1.0)),rand(int839,int259,1.0,1.0))
::STMT
FLOAT:522_strideh,parsertemp193444,522_Hin
LITERAL_FLOAT:1.0
+(/(-(+(522_Hin,parsertemp193444),1.0),522_strideh),1.0)
::STMT
MATRIX:R,dssp,parsertemp40220
FLOAT:numRows
LITERAL_FLOAT:1.0
-(/(numRows,-(+(R,dssp),rowSums(parsertemp40220))),1.0)
::STMT
MATRIX:parsertemp171377,Y_prob,Y,parsertemp171381
FLOAT:float771
LITERAL_FLOAT:2.0
/(^(rowSums(Y),2.0),*(*(*(parsertemp171377,Y_prob),Y_prob),^(*(parsertemp171381,float771),2.0)))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0E7
+(1.0E7,exp(finite_linear_terms))
::STMT
MATRIX:pt_gp,Y,linear_terms,the_gauss_exp
FLOAT:int79,int185
LITERAL_FLOAT:0.5
+(-(Y,*(rowSums(Y),>=(linear_terms,int185))),*(*(*(the_gauss_exp,pt_gp),rowSums(Y)),-(>=(linear_terms,int79),0.5)))
::STMT
MATRIX:parsertemp1516,parsertemp1514
FLOAT:n
LITERAL_FLOAT:0.0,1.0
<=(/(-(t(parsertemp1514),*(n,parsertemp1516)),-(n,1.0)),0.0)
::STMT
MATRIX:err,ncCnts,maxsc,cCnts
FLOAT:int684,int597,float897,minSup
sum(&(&(>=(cCnts,minSup),>(err,int684)),|(>(ncCnts,int597),>(maxsc,float897))))
::STMT
FLOAT:i1
LITERAL_FLOAT:1.0,2.0
+(1.0,*(i1,2.0))
::STMT
LITERAL_FLOAT:-1.453152027
-1.453152027
::STMT
MATRIX:s
LITERAL_FLOAT:2.0
+(s,2.0)
::STMT
FLOAT:i,cols,n
LITERAL_FLOAT:1.0
+(-(n,-(+(i,cols),1.0)),1.0)
::STMT
MATRIX:means,parsertemp560511,parsertemp560515
FLOAT:int468
LITERAL_FLOAT:2.0
-(rowSums(*(means,^(parsertemp560515,int468))),^(rowSums(*(means,parsertemp560511)),2.0))
::STMT
MATRIX:X
FLOAT:m2X
LITERAL_FLOAT:1.0
*(m2X,/(nrow(X),-(nrow(X),1.0)))
::STMT
MATRIX:parsertemp222331
FLOAT:sample_block_size
LITERAL_FLOAT:0.5
+(0.5,/(parsertemp222331,sample_block_size))
::STMT
MATRIX:parsertemp387405,Ks,Kss
abs(-(cast.FLOAT(Kss),cast.FLOAT(%*%(parsertemp387405,Ks))))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
+(ncol(X),1.0)
::STMT
MATRIX:imputed_Y
LITERAL_FLOAT:NaN
+(imputed_Y,NaN)
::STMT
MATRIX:X_batch,parsertemp389604,parsertemp389600,parsertemp389601
FLOAT:int708,int998
LITERAL_FLOAT:1.0,2.0
*(-(/(-(parsertemp389600,int708),+(parsertemp389600,int998)),X_batch),-(1.0,^(/(parsertemp389601,parsertemp389604),2.0)))
::STMT
MATRIX:parsertemp146961,dout1,mW1
FLOAT:191_t,191_lr,191_beta1,parsertemp146980,int721
LITERAL_FLOAT:1.0
*(/(*(191_lr,sqrt(parsertemp146980)),-(1.0,^(191_beta1,191_t))),+(*(191_beta1,mW1),*(-(int721,191_beta1),%*%(parsertemp146961,dout1))))
::STMT
MATRIX:q_CG,z
FLOAT:parsertemp170094,pp_CG,pq_CG
LITERAL_FLOAT:0.5
+(*(*(0.5,/(parsertemp170094,pp_CG)),pq_CG),*(cast.FLOAT(z),cast.FLOAT(q_CG)))
::STMT
MATRIX:Y
FLOAT:minv
sum(==(Y,minv))
::STMT
FLOAT:i
LITERAL_FLOAT:100.0
*(i,100.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
+(ncol(X),0.0)
::STMT
MATRIX:Hdiff,betamax,beta
FLOAT:int175,int467
LITERAL_FLOAT:1.0E20
!=(+(*(>=(Hdiff,int467),betamax),*(<(Hdiff,int175),beta)),1.0E20)
::STMT
MATRIX:B
FLOAT:ncolX
-(ncolX,nrow(B))
::STMT
MATRIX:surv,se_surv
FLOAT:z_alpha_2
LITERAL_FLOAT:-1.0
/(*(*(z_alpha_2,-1.0),se_surv),surv)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
<(X,1.0)
::STMT
MATRIX:parsertemp170239
FLOAT:float481
LITERAL_FLOAT:1.0,1.061405429,-1.453152027
+(-1.453152027,*(/(1.0,+(float481,parsertemp170239)),1.061405429))
::STMT
MATRIX:R,parsertemp503780
%*%(t(+(R,diag(parsertemp503780))),+(R,diag(parsertemp503780)))
::STMT
FLOAT:var_power
LITERAL_FLOAT:2.0
-(2.0,var_power)
::STMT
FLOAT:featureCorrection
LITERAL_FLOAT:0.0
-(0.0,featureCorrection)
::STMT
MATRIX:parsertemp500606,parsertemp500607,parsertemp500604,w,parsertemp500610
FLOAT:int952
%*%(t(-(*(parsertemp500607,parsertemp500610),w)),-(*(*(parsertemp500604,parsertemp500606),>(parsertemp500606,int952)),w))
::STMT
MATRIX:parsertemp472316,parsertemp472314,ig
FLOAT:min_leaf
rev(*(&(>=(parsertemp472314,min_leaf),>=(parsertemp472316,min_leaf)),ig))
::STMT
MATRIX:parsertemp31026,parsertemp31033
FLOAT:parsertemp31034,parsertemp31027
LITERAL_FLOAT:150.0,100.0
sqrt(+(/(/(parsertemp31026,parsertemp31027),100.0),/(/(parsertemp31033,parsertemp31034),150.0)))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626
sqrt(*(1.0005002501250626,m2))
::STMT
MATRIX:is_natural_parameter_log_zero,Y
FLOAT:int849
LITERAL_FLOAT:0.0,1.0
/(*(>(Y,0.0),is_natural_parameter_log_zero),-(1.0,*(>(Y,int849),is_natural_parameter_log_zero)))
::STMT
MATRIX:P,parsertemp222624,X
/(%*%(t(/(P,parsertemp222624)),X),t(colSums(/(P,parsertemp222624))))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005,5.0
*(5.0,sqrt(*(1.0004995004995005,m2)))
::STMT
MATRIX:Xd,out
FLOAT:int853
sum(*(*(Xd,>(out,int853)),Xd))
::STMT
MATRIX:id
diag(==(id,t(id)))
::STMT
MATRIX:z
FLOAT:trust_delta_sq
-(*(cast.FLOAT(z),cast.FLOAT(z)),trust_delta_sq)
::STMT
MATRIX:X,Y,out,parsertemp2798
FLOAT:int662,int861
%*%(t(X),*(*(>(out,int861),-(int662,parsertemp2798)),Y))
::STMT
MATRIX:d,exp_Xb,X
*(X,*(%*%(X,d),exp_Xb))
::STMT
MATRIX:output_values
FLOAT:log_odds
LITERAL_FLOAT:0.3
+(log_odds,*(0.3,cast.FLOAT(output_values)))
::STMT
MATRIX:_sbcvar78
LITERAL_FLOAT:10000.0
/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0)
::STMT
MATRIX:parsertemp403509,W4_rand
FLOAT:int45,int391
LITERAL_FLOAT:0.086386842558136
%*%(*(0.086386842558136,W4_rand),t(/(-(parsertemp403509,int391),+(parsertemp403509,int45))))
::STMT
MATRIX:X,parsertemp32827,Y,parsertemp32824
FLOAT:x
LITERAL_FLOAT:1.0
+(*(-(1.0,/(parsertemp32824,parsertemp32827)),Y),*(/(-(x,X),-(X,X)),Y))
::STMT
MATRIX:W,X
+(%*%(X,W),W)
::STMT
MATRIX:lambda,parsertemp170067,parsertemp170065,p_CG,shift_X,parsertemp170060,temp_CG
+(+(*(cast.FLOAT(lambda),cast.FLOAT(p_CG)),*(cast.FLOAT(parsertemp170060),cast.FLOAT(temp_CG))),*(cast.FLOAT(shift_X),cast.FLOAT(%*%(parsertemp170065,parsertemp170067))))
::STMT
MATRIX:parsertemp115858,X,parsertemp115860
FLOAT:n
LITERAL_FLOAT:0.0,1.0
<=(/(-(t(parsertemp115858),*(n,parsertemp115860)),-(nrow(X),1.0)),0.0)
::STMT
MATRIX:I,y2
/(%*%(I,y2),sum(I))
::STMT
MATRIX:termination_bitmap,parsertemp441285,tmp
==(*(parsertemp441285,termination_bitmap),min(tmp))
::STMT
MATRIX:the_exp,linear_terms,Y
FLOAT:int894
*(*(exp(-(int894,the_exp)),exp(linear_terms)),rowSums(Y))
::STMT
MATRIX:_sbcvar1156
FLOAT:num_records
LITERAL_FLOAT:1.0
*(+(num_records,1.0),-(1.0,_sbcvar1156))
::STMT
MATRIX:parsertemp383010,U,X,X_nonzero_ind
LITERAL_FLOAT:2.0
*(X_nonzero_ind,^(-(X,%*%(U,parsertemp383010)),2.0))
::STMT
MATRIX:G,authorities
max(%*%(t(G),%*%(G,authorities)))
::STMT
FLOAT:i
LITERAL_FLOAT:42.0
+(42.0,i)
::STMT
FLOAT:parsertemp13703
LITERAL_FLOAT:1000.0
*(parsertemp13703,1000.0)
::STMT
MATRIX:D,beta
LITERAL_FLOAT:-1.0
*(*(D,-1.0),beta)
::STMT
LITERAL_FLOAT:1.0E-15
1.0E-15
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
/(/(1.0,linear_terms),-(1.0,var_power))
::STMT
FLOAT:parsertemp380175,interval,i_process_item
LITERAL_FLOAT:1.0
+(-(i_process_item,+(*(parsertemp380175,interval),1.0)),1.0)
::STMT
MATRIX:X2
FLOAT:parsertemp31772
-(ncol(X2),parsertemp31772)
::STMT
MATRIX:parsertemp132035,left,parsertemp132041,right
==(%*%(parsertemp132035,left),%*%(parsertemp132041,right))
::STMT
FLOAT:int252,a,b,c,x
+(+(*(a,^(x,int252)),*(b,x)),c)
::STMT
MATRIX:parsertemp40482,totalE,l
/(t(%*%(t(totalE),==(parsertemp40482,l))),t(colSums(==(parsertemp40482,l))))
::STMT
MATRIX:X_Train,X_Test
FLOAT:float605,float128,float454,float355
INT:int571,int543,int998,int370
-(+(sum(rand(int571,int370,float454,float128)),sum(rand(int998,int543,float605,float355))),+(sum(X_Train),sum(X_Test)))
::STMT
FLOAT:s_err_vars,s_err_mean
LITERAL_FLOAT:-0.001
/(-(-0.001,s_err_mean),s_err_vars)
::STMT
FLOAT:qmle_val,_funvar2930
LITERAL_FLOAT:1.0E-5
/(-(_funvar2930,qmle_val),1.0E-5)
::STMT
MATRIX:W
FLOAT:m2
LITERAL_FLOAT:2.0,3.0
*(*(3.0,^(m2,2.0)),^(sum(round(W)),2.0))
::STMT
MATRIX:parsertemp31338,_sbcvar264
FLOAT:parsertemp31331,float537
LITERAL_FLOAT:9999.0,1.0
-(1.0,/(sum(*(parsertemp31338,_sbcvar264)),*(9999.0,/(parsertemp31331,float537))))
::STMT
MATRIX:s,parsertemp44016
FLOAT:delta2
-(delta2,cast.FLOAT(%*%(t(s),-(s,parsertemp44016))))
::STMT
LITERAL_FLOAT:6.0,2000.0
*(6.0,2000.0)
::STMT
MATRIX:parsertemp467657,Xd,parsertemp467661
FLOAT:dd,step_sz,wd
/(-(+(wd,*(step_sz,dd)),sum(*(parsertemp467657,Xd))),+(dd,sum(*(parsertemp467661,Xd))))
::STMT
MATRIX:Y_counts,parsertemp560606,Y
LITERAL_FLOAT:1.0,2.0
/(colSums(^(-(Y,parsertemp560606),2.0)),-(sum(Y_counts),1.0))
::STMT
MATRIX:W
LITERAL_FLOAT:3.0
+(sum(round(W)),3.0)
::STMT
MATRIX:K1
cast.FLOAT(K1)
::STMT
MATRIX:proposer_pointers
LITERAL_FLOAT:1.0
+(cast.FLOAT(proposer_pointers),1.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0E7
==(+(1.0E7,exp(finite_linear_terms)),1.0E7)
::STMT
MATRIX:W
LITERAL_FLOAT:1.0
+(sum(round(W)),1.0)
::STMT
MATRIX:parsertemp31277
FLOAT:parsertemp31279,varY
LITERAL_FLOAT:1.0
sqrt(-(1.0,/(sum(parsertemp31277),*(parsertemp31279,varY))))
::STMT
MATRIX:2792_NID
LITERAL_FLOAT:1.0,2.0
+(*(2.0,2792_NID),1.0)
::STMT
MATRIX:p,parsertemp116065,lambda,shift_X
sum(*(p,+(+(parsertemp116065,shift_X),*(lambda,p))))
::STMT
FLOAT:191_beta2,191_t,int124
LITERAL_FLOAT:1.0
sqrt(-(1.0,^(191_beta2,+(191_t,int124))))
::STMT
MATRIX:S
LITERAL_FLOAT:2.0,479.0
/(^(diag(S),2.0),479.0)
::STMT
FLOAT:parsertemp164939,n
LITERAL_FLOAT:2.0
+(2.0,*(n,parsertemp164939))
::STMT
MATRIX:leaf_ids,out
FLOAT:boundary_right,boundary_left,step_size
-(+(out,&(>=(leaf_ids,boundary_left),<(leaf_ids,boundary_right))),&(!(<(leaf_ids,boundary_right)),<(leaf_ids,+(boundary_right,step_size))))
::STMT
FLOAT:int313,int889
LITERAL_FLOAT:0.0
INT:int69,int17
*(rand(int69,int17,int889,int313),0.0)
::STMT
MATRIX:X
FLOAT:x
cast.FLOAT(-(x,X))
::STMT
MATRIX:w,yt,Xt
LITERAL_FLOAT:0.0
sum(>(*(yt,%*%(Xt,w)),0.0))
::STMT
MATRIX:ytest,yhat
/(sum(-(ytest,yhat)),nrow(ytest))
::STMT
MATRIX:W,X,H
LITERAL_FLOAT:1.0E-8
/(X,+(%*%(W,H),1.0E-8))
::STMT
FLOAT:index
LITERAL_FLOAT:2.0
*(index,2.0)
::STMT
MATRIX:parsertemp399243,parsertemp399246,W3_rand
LITERAL_FLOAT:0.6546536707079771
t(%*%(*(0.6546536707079771,W3_rand),t(/(parsertemp399243,parsertemp399246))))
::STMT
MATRIX:X,Centering
LITERAL_FLOAT:1.0,2.0
/(colSums(^(-(X,Centering),2.0)),-(nrow(X),1.0))
::STMT
MATRIX:X2p,maxsc
LITERAL_FLOAT:0.0
|(>(t(colSums(X2p)),0.0),>(maxsc,0.0))
::STMT
LITERAL_FLOAT:1.0,0.7
-(1.0,0.7)
::STMT
MATRIX:_sbcvar92,parsertemp27718,parsertemp27720,220_E
FLOAT:220_W,float561
LITERAL_FLOAT:2.0
sum(/(^(-(_sbcvar92,220_E),2.0),+(*(parsertemp27720,float561),/(parsertemp27718,220_W))))
::STMT
MATRIX:X_batch,dout1
FLOAT:191_beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,191_beta2),^(%*%(t(X_batch),dout1),2.0))
::STMT
MATRIX:fP
FLOAT:max_values
/(^($1:ncol(fP),max_values),$1)
::STMT
FLOAT:g
LITERAL_FLOAT:1.0,2.0
*(-(g,1.0),2.0)
::STMT
MATRIX:p,q,r,parsertemp1597,lambda
FLOAT:norm_r2
+(r,*(/(norm_r2,sum(parsertemp1597)),+(q,*(lambda,p))))
::STMT
MATRIX:parsertemp389212,parsertemp389214
FLOAT:n
*(-(/(colSums(parsertemp389214),n),*(/(parsertemp389212,n),/(parsertemp389212,n))),n)
::STMT
MATRIX:y_hat,b,R
LITERAL_FLOAT:2.0
^(-(-(b,%*%(R,y_hat)),y_hat),2.0)
::STMT
FLOAT:sample_block_size
LITERAL_FLOAT:3.0
*(sample_block_size,3.0)
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp317435
FLOAT:float284
LITERAL_FLOAT:1.0
-(+(parsertemp317435,/(is_one_y_corr,-(float284,is_one_y_corr))),/(is_zero_y_corr,-(1.0,is_zero_y_corr)))
::STMT
MATRIX:parsertemp220853,parsertemp220854,Hneg,beta,betamin,Hpos
LITERAL_FLOAT:0.0,3.4011973816621555
*(<(-(+(parsertemp220853,parsertemp220854),3.4011973816621555),0.0),+(beta,+(*(Hneg,betamin),*(Hpos,beta))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,7.0
+(*(-(i,1.0),7.0),1.0)
::STMT
FLOAT:check_max,check_min
-(check_max,check_min)
::STMT
FLOAT:mantissa
LITERAL_FLOAT:-1.0
*(mantissa,-1.0)
::STMT
FLOAT:m_orig
LITERAL_FLOAT:1.0
*(m_orig,1.0)
::STMT
MATRIX:X,Y
LITERAL_FLOAT:1.0E-10
+(+(abs(X),abs(Y)),1.0E-10)
::STMT
MATRIX:p,lambda,X
%*%(t(p),+(%*%(t(X),%*%(X,p)),*(lambda,p)))
::STMT
MATRIX:R,parsertemp40215
FLOAT:numRows,level
/(numRows,+(R,rowSums(==(parsertemp40215,level))))
::STMT
MATRIX:p,Z
FLOAT:norm_r2
/(norm_r2,cast.FLOAT(%*%(t(p),%*%(Z,p))))
::STMT
FLOAT:odds
LITERAL_FLOAT:1.0
/(odds,-(1.0,odds))
::STMT
MATRIX:parsertemp131906,parsertemp132092,outBucket
==(outBucket,%*%(parsertemp132092,t(parsertemp131906)))
::STMT
MATRIX:V,y
LITERAL_FLOAT:-1.0
*(*(%*%(t(V),y),-1.0),*(%*%(t(V),y),-1.0))
::STMT
MATRIX:p_CG
FLOAT:parsertemp254766,int972,parsertemp254749,int767,z
*(parsertemp254766,/(+(*(z,int972),sqrt(parsertemp254749)),sum(^(p_CG,int767))))
::STMT
MATRIX:parsertemp122290,X2
LITERAL_FLOAT:0.0,4.0
&(>=(t(colSums(X2)),4.0),>(t(%*%(parsertemp122290,X2)),0.0))
::STMT
FLOAT:i
LITERAL_FLOAT:8.0
*(i,8.0)
::STMT
MATRIX:Y,parsertemp221025
LITERAL_FLOAT:1.0
*(/(1.0,+(Y,1.0)),+(diag(parsertemp221025),1.0))
::STMT
MATRIX:sample_rec_ids
FLOAT:num_records
LITERAL_FLOAT:1.0
-(1.0,<=(sample_rec_ids,num_records))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,7.0
*(-(i,1.0),7.0)
::STMT
FLOAT:i
LITERAL_FLOAT:7.0
*(i,7.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:2.0
/(linear_terms,-(2.0,var_power))
::STMT
MATRIX:parsertemp171084,parsertemp171083,parsertemp171091
FLOAT:float122
LITERAL_FLOAT:-2.0,1.432788
*(sqrt(*(-2.0,parsertemp171083)),+(1.432788,*(sqrt(parsertemp171084),+(float122,parsertemp171091))))
::STMT
MATRIX:neighbors
LITERAL_FLOAT:0.0
<(0.0,-(neighbors,diag(diag(neighbors))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,8.0
*(-(i,1.0),8.0)
::STMT
LITERAL_FLOAT:2.302585092994046
2.302585092994046
::STMT
MATRIX:y_corr
LITERAL_FLOAT:3.141592653589793,0.5
*(-(y_corr,0.5),3.141592653589793)
::STMT
MATRIX:m
FLOAT:sum
sqrt(-(m,sum))
::STMT
MATRIX:z
LITERAL_FLOAT:2.0
^(cast.FLOAT(z),2.0)
::STMT
FLOAT:i
LITERAL_FLOAT:12.0
*(i,12.0)
::STMT
MATRIX:y_batch
LITERAL_FLOAT:0.0,1.0
*(/(1.0,nrow(y_batch)),-(0.0,y_batch))
::STMT
FLOAT:num_records
LITERAL_FLOAT:10.0
*(num_records,10.0)
::STMT
MATRIX:parsertemp43631,parsertemp43633
LITERAL_FLOAT:0.0,2.0
INT:int81,int873,int500,int493
*(+(rand(int493,int500,0.0,0.0),*(2.0,%*%(parsertemp43631,parsertemp43633))),+(rand(int81,int873,0.0,0.0),*(2.0,%*%(parsertemp43631,parsertemp43633))))
::STMT
LITERAL_FLOAT:0.1651445647689541
0.1651445647689541
::STMT
FLOAT:p_CG,parsertemp170088,z,pp_CG,parsertemp170090
LITERAL_FLOAT:-1.0
/(+(*(*(z,p_CG),-1.0),sqrt(-(parsertemp170088,parsertemp170090))),pp_CG)
::STMT
FLOAT:index
LITERAL_FLOAT:4.0
*(index,4.0)
::STMT
FLOAT:FN,TN,FP,TP
-(*(TP,TN),*(FP,FN))
::STMT
MATRIX:R,S,parsertemp382932,HS
FLOAT:norm_R2,alpha
+(-(R,*(alpha,HS)),*(/(sum(parsertemp382932),norm_R2),S))
::STMT
MATRIX:P1,P2,S
+(%*%(P1,S),%*%(P2,S))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
<(linear_terms,0.0)
::STMT
MATRIX:S,V
FLOAT:norm_R2,parsertemp149264
LITERAL_FLOAT:2.0
^(+(S,*(/(norm_R2,parsertemp149264),V)),2.0)
::STMT
MATRIX:scale_lambda
LITERAL_FLOAT:1.0E-7
*(scale_lambda,1.0E-7)
::STMT
MATRIX:r
FLOAT:norm_r2_initial,int736
sqrt(/(sum(^(r,int736)),norm_r2_initial))
::STMT
MATRIX:U,V,X
LITERAL_FLOAT:2.0
^(-(X,%*%(U,t(V))),2.0)
::STMT
LITERAL_FLOAT:0.0,1.0,2.0
INT:int48,parsertemp282730
>(rand(parsertemp282730,int48,1.0,2.0),0.0)
::STMT
FLOAT:int710,n
LITERAL_FLOAT:1.0,2.0,0.6
*(-(+(-(n,int710),1.0),2.0),0.6)
::STMT
FLOAT:x_to_truncate
abs(x_to_truncate)
::STMT
MATRIX:R,dssp,dsep
FLOAT:4_eAvg
/(/(+(R,dsep),+(R,dssp)),4_eAvg)
::STMT
FLOAT:i
LITERAL_FLOAT:32.0
*(i,32.0)
::STMT
MATRIX:_sbcvar2306
max(t(_sbcvar2306))
::STMT
MATRIX:class_counts
LITERAL_FLOAT:50000.0
/(class_counts,50000.0)
::STMT
FLOAT:i
LITERAL_FLOAT:33.0
*(i,33.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,33.0
*(-(i,1.0),33.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,32.0
*(-(i,1.0),32.0)
::STMT
MATRIX:p_CG
FLOAT:trust_delta_sq,int862,int622,z
-(*(*(cast.FLOAT(z),sum(p_CG)),*(cast.FLOAT(z),sum(p_CG))),*(sum(^(p_CG,int622)),-(^(z,int862),trust_delta_sq)))
::STMT
FLOAT:k
LITERAL_FLOAT:40.0
*(k,40.0)
::STMT
FLOAT:var_power,link_power
LITERAL_FLOAT:1.0
-(/(-(1.0,var_power),link_power),1.0)
::STMT
MATRIX:simplex
FLOAT:num_func_invoc
LITERAL_FLOAT:1.0
-(+(num_func_invoc,ncol(simplex)),1.0)
::STMT
MATRIX:a,b,t,parsertemp32856,Y,parsertemp32827,parsertemp32824
FLOAT:int277,int378
+(+(*(-(int378,t),Y),*(/(parsertemp32824,parsertemp32827),Y)),*(*(/(parsertemp32824,parsertemp32827),-(int277,t)),+(*(a,parsertemp32856),*(b,t))))
::STMT
FLOAT:i
LITERAL_FLOAT:42.0
*(i,42.0)
::STMT
MATRIX:W
LITERAL_FLOAT:2.0
^(sum(round(W)),2.0)
::STMT
FLOAT:i
LITERAL_FLOAT:16.0
*(i,16.0)
::STMT
FLOAT:df,int687
LITERAL_FLOAT:4.890349128221754
+(int687,*(df,4.890349128221754))
::STMT
MATRIX:parsertemp500608,parsertemp500604,parsertemp500605,X
FLOAT:lambda
LITERAL_FLOAT:0.0
%*%(X,*(*(parsertemp500604,-(parsertemp500605,lambda)),>(-(parsertemp500608,lambda),0.0)))
::STMT
MATRIX:parsertemp459793,parsertemp459795
FLOAT:val_loss
LITERAL_FLOAT:50.0
+(val_loss,/(sum(*(parsertemp459793,parsertemp459795)),50.0))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0
+(classFeatureCounts,1.0)
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:1.6583123951777
/(1.6583123951777,max(sqrt(rowSums_X_sq)))
::STMT
FLOAT:i
LITERAL_FLOAT:16.0,1.0
*(-(i,1.0),16.0)
::STMT
MATRIX:Q,parsertemp500360
FLOAT:int245
%*%(parsertemp500360,t(rowSums(^(Q,int245))))
::STMT
MATRIX:X
LITERAL_FLOAT:7.0
<(X,7.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,11.0
*(-(i,1.0),11.0)
::STMT
MATRIX:prediction,target
sum(rowSums(abs(-(prediction,target))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,10.0
*(-(i,1.0),10.0)
::STMT
MATRIX:CMeans,CFreqs
FLOAT:my
LITERAL_FLOAT:2.0
*(CFreqs,^(-(CMeans,my),2.0))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,12.0
*(-(i,1.0),12.0)
::STMT
MATRIX:qLow,length,qUp
|(<(length,qLow),>(length,qUp))
::STMT
MATRIX:G,authorities
/(%*%(G,authorities),max(%*%(G,authorities)))
::STMT
MATRIX:linear_terms
FLOAT:var_power,float356
LITERAL_FLOAT:2.0
/(exp(*(linear_terms,-(float356,var_power))),-(2.0,var_power))
::STMT
FLOAT:log_ten,parsertemp169812
LITERAL_FLOAT:0.5
-(/(parsertemp169812,log_ten),0.5)
::STMT
MATRIX:parsertemp220853,parsertemp220854,betamin
LITERAL_FLOAT:0.0,3.4011973816621555
*(<(-(+(parsertemp220853,parsertemp220854),3.4011973816621555),0.0),betamin)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,128.0
*(-(i,1.0),128.0)
::STMT
MATRIX:R,S,parsertemp40214
FLOAT:level
+(R,rowSums(==(%*%(S,parsertemp40214),level)))
::STMT
MATRIX:Y,predicted_Y
LITERAL_FLOAT:0.0
==(-(predicted_Y,Y),0.0)
::STMT
MATRIX:parsertemp31046,parsertemp31051,parsertemp31042,parsertemp31043
FLOAT:parsertemp31049,parsertemp31054
LITERAL_FLOAT:2.0
round(/(^(+(parsertemp31042,parsertemp31043),2.0),+(/(parsertemp31046,parsertemp31049),/(parsertemp31051,parsertemp31054))))
::STMT
MATRIX:is_one_y_corr,parsertemp317435
LITERAL_FLOAT:1.0
+(parsertemp317435,/(is_one_y_corr,-(1.0,is_one_y_corr)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,100.0
*(-(i,1.0),100.0)
::STMT
MATRIX:Q,R,parsertemp500308,parsertemp500300
FLOAT:int213,int786,int864,int854
LITERAL_FLOAT:2.0
INT:int279,parsertemp500306,int987,parsertemp500303
-(+(%*%(rowSums(parsertemp500300),rand(int279,parsertemp500303,int854,int213)),%*%(rand(parsertemp500306,int987,int864,int786),t(parsertemp500308))),*(2.0,%*%(R,t(Q))))
::STMT
FLOAT:s,parsertemp454319
LITERAL_FLOAT:3.0
*(parsertemp454319,^(3.0,s))
::STMT
MATRIX:parsertemp553013,M2,parsertemp553121,parsertemp553122
+(%*%(rowSums(*(M2,M2)),parsertemp553121),t(%*%(rowSums(parsertemp553013),parsertemp553122)))
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0,24.0
-(+(nrow(Y),0.0),24.0)
::STMT
MATRIX:neighbors,corePts,withinEps
LITERAL_FLOAT:0.0
>(*(*(neighbors,corePts),withinEps),0.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,61.0
*(-(i,1.0),61.0)
::STMT
MATRIX:log_prob,log_det_chol
FLOAT:parsertemp436710,float252
LITERAL_FLOAT:-0.5
+(*(-0.5,+(*(parsertemp436710,float252),log_prob)),log_det_chol)
::STMT
MATRIX:linear_terms
FLOAT:int709
LITERAL_FLOAT:1.0
/(1.0,-(exp(-(int709,linear_terms)),1.0))
::STMT
MATRIX:w,parsertemp43626
FLOAT:int89
LITERAL_FLOAT:2.0,0.5
+(*(0.5,%*%(t(w),w)),*(2.0,sum(*(parsertemp43626,int89))))
::STMT
MATRIX:sq_sums,mu
LITERAL_FLOAT:2.0,4.0
-(/(sq_sums,4.0),^(cast.FLOAT(mu),2.0))
::STMT
MATRIX:parsertemp171314,t_gp,parsertemp171318,parsertemp171306
FLOAT:float174,int607
LITERAL_FLOAT:1.0,2.0,0.254829592
*(exp(/(-(int607,parsertemp171318),2.0)),*(/(1.0,+(float174,parsertemp171306)),+(0.254829592,*(t_gp,parsertemp171314))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,64.0
*(-(i,1.0),64.0)
::STMT
MATRIX:neighbors,corePts,withinEps
LITERAL_FLOAT:0.0,1.0
*(>(*(*(neighbors,corePts),withinEps),0.0),&(==(t(corePts),0.0),>(colSums(neighbors),1.0)))
::STMT
MATRIX:parsertemp220853,Ws,beta
LITERAL_FLOAT:0.0,3.4011973816621555
<(-(+(parsertemp220853,*(beta,Ws)),3.4011973816621555),0.0)
::STMT
MATRIX:r,parsertemp500439,y
LITERAL_FLOAT:0.5
*(0.5,cast.FLOAT(%*%(t(r),-(parsertemp500439,y))))
::STMT
MATRIX:parsertemp1510
FLOAT:n
LITERAL_FLOAT:2.0
*(n,^(/(t(parsertemp1510),n),2.0))
::STMT
MATRIX:parsertemp31910,parsertemp31913
FLOAT:eAvg
LITERAL_FLOAT:1.0
-(/(/(t(parsertemp31913),t(parsertemp31910)),eAvg),1.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,42.0
*(-(i,1.0),42.0)
::STMT
MATRIX:shift_X,w,ssX_p_CG,X
*(cast.FLOAT(shift_X),%*%(t(X),*(w,%*%(X,ssX_p_CG))))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),50.0))
::STMT
MATRIX:X
FLOAT:parsertemp78,parsertemp80
LITERAL_FLOAT:3.0
^(/(-(X,parsertemp78),sqrt(parsertemp80)),3.0)
::STMT
MATRIX:W,H,X,parsertemp410975
FLOAT:eps
*(H,%*%(t(W),/(X,+(parsertemp410975,eps))))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
/(1.0,cast.FLOAT(A))
::STMT
FLOAT:i
LITERAL_FLOAT:133.0
*(133.0,i)
::STMT
FLOAT:parsertemp40812,m2,int416
LITERAL_FLOAT:2000.0
/(sqrt(*(/(int416,parsertemp40812),m2)),sqrt(2000.0))
::STMT
MATRIX:parsertemp410978,W,X,H,parsertemp410980
FLOAT:eps
%*%(/(X,+(%*%(W,H),eps)),t(/(*(H,parsertemp410978),t(parsertemp410980))))
::STMT
MATRIX:U,row_nonzeros
LITERAL_FLOAT:1.0E-6
*(*(1.0E-6,U),row_nonzeros)
::STMT
MATRIX:A,B,C,D,X
==(%*%(<=(%*%(X,A),B),C),D)
::STMT
FLOAT:i
LITERAL_FLOAT:3.0
-(3.0,i)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:105.0,1.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),105.0))
::STMT
FLOAT:Hin
LITERAL_FLOAT:2.0
/(/(Hin,2.0),2.0)
::STMT
MATRIX:parsertemp24102
LITERAL_FLOAT:1.0
-(1.0,<(+(round(parsertemp24102),1.0),1.0))
::STMT
MATRIX:parsertemp150470,parsertemp149323,LT
%*%(rowSums(exp(-(LT,parsertemp149323))),parsertemp150470)
::STMT
MATRIX:tpr,fpr
LITERAL_FLOAT:2.0
/(*(-(fpr,fpr),+(tpr,tpr)),2.0)
::STMT
FLOAT:float878,m2,int725
LITERAL_FLOAT:2001.0
sqrt(*(/(2001.0,-(int725,float878)),m2))
::STMT
MATRIX:p_CG,z
FLOAT:trust_delta_sq
LITERAL_FLOAT:2.0
*(sum(^(p_CG,2.0)),-(*(cast.FLOAT(z),cast.FLOAT(z)),trust_delta_sq))
::STMT
MATRIX:simplex
-(rowSums(simplex),simplex)
::STMT
FLOAT:m2,wt,float618
LITERAL_FLOAT:5.0
*(5.0,sqrt(/(*(m2,wt),-(wt,float618))))
::STMT
MATRIX:parsertemp383172,X_nonzero_ind
FLOAT:parsertemp383177,reg,parsertemp383180,loss_init
-(loss_init,+(sum(*(X_nonzero_ind,parsertemp383172)),*(reg,+(parsertemp383177,parsertemp383180))))
::STMT
MATRIX:C,parsertemp11064
LITERAL_FLOAT:10000.0
/(sum(==(parsertemp11064,C)),10000.0)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),500.0))
::STMT
LITERAL_FLOAT:2.7182818284
2.7182818284
::STMT
FLOAT:217_a22,int533,parsertemp22450,parsertemp22451,parsertemp22485
/(parsertemp22485,sqrt(+(+(parsertemp22450,parsertemp22451),/(int533,217_a22))))
::STMT
MATRIX:Grad
FLOAT:int907
LITERAL_FLOAT:2.0
sqrt(sum(^(*(Grad,int907),2.0)))
::STMT
MATRIX:parsertemp553017,M2,parsertemp553121,parsertemp553020,parsertemp553009
LITERAL_FLOAT:2.0
sqrt(-(+(%*%(parsertemp553009,parsertemp553121),t(parsertemp553017)),*(2.0,%*%(M2,parsertemp553020))))
::STMT
MATRIX:parsertemp500609,parsertemp500606,parsertemp500604
FLOAT:int192
sum(abs(*(*(parsertemp500604,parsertemp500606),>(parsertemp500609,int192))))
::STMT
MATRIX:R,dssp,dsep,dssm,dsem
/(-(+(R,dsep),dsem),-(+(R,dssp),dssm))
::STMT
MATRIX:parsertemp131907,offset,parsertemp131910,parsertemp132092,rightHist,mask,outBucket
LITERAL_FLOAT:1.0
/(-(-(offset,%*%(mask,parsertemp131910)),1.0),%*%(==(outBucket,%*%(parsertemp132092,parsertemp131907)),rightHist))
::STMT
MATRIX:r,Hd
FLOAT:c
LITERAL_FLOAT:-1.0
*(+(r,*(c,Hd)),-1.0)
::STMT
MATRIX:X
FLOAT:parsertemp496694,a0
LITERAL_FLOAT:2.0
+(parsertemp496694,/(^(cast.FLOAT(X),2.0),a0))
::STMT
MATRIX:parsertemp379560,m_iter_err_sum,m_err
LITERAL_FLOAT:-1.0
*(-(t(+(parsertemp379560,m_iter_err_sum)),+(colSums(m_err),m_iter_err_sum)),-1.0)
::STMT
FLOAT:parsertemp13703
LITERAL_FLOAT:999.0,1000.0
/(*(parsertemp13703,1000.0),999.0)
::STMT
MATRIX:W
FLOAT:parsertemp112,int190,parsertemp91
LITERAL_FLOAT:2.0,3.0,4.0,5.0
/(*(*(4.0,-(parsertemp112,int190)),^(sqrt(parsertemp91),2.0)),*(+(sum(W),5.0),-(sum(W),3.0)))
::STMT
MATRIX:parsertemp379566
FLOAT:int699,i_process_item
LITERAL_FLOAT:2.0
*(^(/(*(parsertemp379566,int699),i_process_item),2.0),i_process_item)
::STMT
MATRIX:Xm,Z,parsertemp265732
/(sum(-(%*%(Z,parsertemp265732),Xm)),sum(Xm))
::STMT
MATRIX:parsertemp396406,W3_rand
FLOAT:int564,int269
LITERAL_FLOAT:0.16823164622761327
%*%(*(0.16823164622761327,W3_rand),t(/(-(parsertemp396406,int564),+(parsertemp396406,int269))))
::STMT
MATRIX:D,ZERODIAG,beta
FLOAT:int694
*(exp(*(-(int694,D),beta)),ZERODIAG)
::STMT
LITERAL_FLOAT:3352500.0
3352500.0
::STMT
MATRIX:parsertemp171366,p_one_m_one
LITERAL_FLOAT:3.141592653589793,0.5
+(0.5,/(%*%(parsertemp171366,p_one_m_one),3.141592653589793))
::STMT
FLOAT:K
LITERAL_FLOAT:151.0
*(151.0,K)
::STMT
MATRIX:r,c,E,F
FLOAT:int785
LITERAL_FLOAT:1.0E-4
-(F,+(*(==(E,int785),1.0E-4),/(%*%(r,c),sum(F))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),1.0),-(sum(W),2.0)),-(sum(round(W)),3.0))
::STMT
MATRIX:os,y,o
LITERAL_FLOAT:0.0
*(-(0.0,y),+(o,os))
::STMT
MATRIX:B1
FLOAT:nc
LITERAL_FLOAT:1.0
/(nrow(B1),-(nc,1.0))
::STMT
MATRIX:cumLens
FLOAT:i
LITERAL_FLOAT:1.0
/(-(i,1.0),cumLens)
::STMT
MATRIX:W,H,parsertemp411100,parsertemp411104,parsertemp411105
%*%(W,%*%(*(H,/(parsertemp411100,parsertemp411104)),t(*(H,parsertemp411105))))
::STMT
MATRIX:p,z
FLOAT:pp,parsertemp169870,pz
LITERAL_FLOAT:-1.0
-(*(sum(*(p,z)),-1.0),sqrt(-(*(pz,pz),*(pp,parsertemp169870))))
::STMT
MATRIX:parsertemp185168,parsertemp185169,parsertemp185166,parsertemp185165
>(-(parsertemp185165,parsertemp185166),-(parsertemp185168,parsertemp185169))
::STMT
MATRIX:d_r,parsertemp409781
sum(*(rev(d_r),parsertemp409781))
::STMT
FLOAT:norm_grad_initial
LITERAL_FLOAT:0.001
*(0.001,norm_grad_initial)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
/(/(1.0,^(linear_terms,2.0)),2.0)
::STMT
MATRIX:r_CG,g_reg,z
*(cast.FLOAT(z),+(cast.FLOAT(r_CG),cast.FLOAT(g_reg)))
::STMT
MATRIX:selCols,selCols2
-(sum(selCols),sum(selCols2))
::STMT
MATRIX:_sbcvar92,220_r,220_c,220_E
FLOAT:int65
LITERAL_FLOAT:1.0E-4
-(_sbcvar92,+(*(==(220_E,int65),1.0E-4),/(%*%(220_r,220_c),sum(_sbcvar92))))
::STMT
MATRIX:parsertemp16875
FLOAT:epsilon
*(<(sqrt(rowSums(parsertemp16875)),epsilon),epsilon)
::STMT
MATRIX:s
LITERAL_FLOAT:2.0
^(s,2.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-0.0
^(linear_terms,-0.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-2.0
^(linear_terms,-2.0)
::STMT
MATRIX:t_gp,pt_gp,parsertemp171320,Y,the_gauss_exp,parsertemp171316
FLOAT:one_over_sqrt_two_pi,int5
LITERAL_FLOAT:2.0,0.25
/(*(*(exp(parsertemp171320),^(one_over_sqrt_two_pi,int5)),rowSums(Y)),*(*(0.25,*(t_gp,parsertemp171316)),-(2.0,*(the_gauss_exp,pt_gp))))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
t(colSums(^(X,2.0)))
::STMT
MATRIX:p,r,Z
FLOAT:norm_r2,parsertemp503396
LITERAL_FLOAT:0.0
-(0.0,+(r,*(/(norm_r2,parsertemp503396),%*%(Z,p))))
::STMT
MATRIX:resp,X,weight
/(%*%(t(resp),*(X,X)),t(weight))
::STMT
MATRIX:parsertemp472180,I,yhat
LITERAL_FLOAT:2.0
rowSums(^(*(I,-(yhat,parsertemp472180)),2.0))
::STMT
MATRIX:p,parsertemp285529,g
FLOAT:pp,pq,int710,pz,parsertemp285543,parsertemp285521
*(+(+(*(parsertemp285543,pq),sum(parsertemp285529)),sum(*(g,p))),/(-(*(pz,int710),sqrt(parsertemp285521)),pp))
::STMT
MATRIX:parsertemp220902,parsertemp220903
FLOAT:tol
LITERAL_FLOAT:2.0
*(sum(^(-(parsertemp220902,parsertemp220903),2.0)),tol)
::STMT
FLOAT:ssPrev,parsertemp265725,parsertemp265724
LITERAL_FLOAT:1.0,4000.0
-(1.0,/(/(-(parsertemp265724,parsertemp265725),4000.0),ssPrev))
::STMT
LITERAL_FLOAT:0.0,1.0,2.0
INT:D,M
*(rand(D,M,0.0,1.0),sqrt(/(2.0,D)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
^(linear_terms,-1.0)
::STMT
MATRIX:e_r_rev_agg,select,d_r_rev,X_rev_agg
colSums(/(*(%*%(select,X_rev_agg),d_r_rev),e_r_rev_agg))
::STMT
MATRIX:Y
FLOAT:num_categories
LITERAL_FLOAT:0.0,-1.0
*(+(*(Y,-1.0),num_categories),<=(Y,0.0))
::STMT
MATRIX:X
FLOAT:x
/(-(x,X),-(X,X))
::STMT
MATRIX:G,authorities,hubs
-(/(%*%(G,authorities),max(%*%(G,authorities))),hubs)
::STMT
MATRIX:W1_rand,stds,parsertemp396314
LITERAL_FLOAT:0.07808688094430302
t(%*%(*(0.07808688094430302,W1_rand),t(/(parsertemp396314,stds))))
::STMT
MATRIX:dist
FLOAT:i
LITERAL_FLOAT:1.0
-(+(i,cast.FLOAT(dist)),1.0)
::STMT
MATRIX:residual_matrix
FLOAT:273_lambda
+(nrow(residual_matrix),273_lambda)
::STMT
MATRIX:diff_nominal,diff,_sbcvar1151
FLOAT:num_std_median
LITERAL_FLOAT:0.0
+(*(!=(diff_nominal,0.0),num_std_median),*(diff,_sbcvar1151))
::STMT
MATRIX:Xd,parsertemp2775
FLOAT:int811
LITERAL_FLOAT:0.0
*(*(Xd,>(-(int811,parsertemp2775),0.0)),Xd)
::STMT
MATRIX:Y_counts,means,parsertemp560511
*(Y_counts,rowSums(*(means,parsertemp560511)))
::STMT
MATRIX:col,parsertemp24101,parsertemp24103
FLOAT:int720,num_bins,float276,int627
LITERAL_FLOAT:1.0
*(-(-(1.0,<(col,int720)),>(+(parsertemp24103,int627),num_bins)),+(round(-(parsertemp24101,float276)),1.0))
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
LITERAL_FLOAT:1.0
/(*(*(n_risk,n_event_stratum),-(n_risk_stratum,n_event_stratum)),*(n_risk_stratum,-(n_risk_stratum,1.0)))
::STMT
MATRIX:Y
FLOAT:num_categories,int206
LITERAL_FLOAT:0.0
+(Y,*(+(*(Y,int206),num_categories),<=(Y,0.0)))
::STMT
MATRIX:parsertemp409723,R
LITERAL_FLOAT:1.0
-(+(cast.FLOAT(parsertemp409723),cast.FLOAT(R)),1.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:2.0
exp(*(linear_terms,-(2.0,var_power)))
::STMT
MATRIX:parsertemp195898
FLOAT:int22,parsertemp195894,factor_up
abs(-(/(parsertemp195898,factor_up),/(/(parsertemp195894,int22),factor_up)))
::STMT
FLOAT:index
LITERAL_FLOAT:2.0,3.0,4.0
+(+(*(index,4.0),2.0),3.0)
::STMT
MATRIX:x,y
LITERAL_FLOAT:2.0
cast.FLOAT(/(+(x,y),2.0))
::STMT
MATRIX:w,out
LITERAL_FLOAT:1.0,0.5
*(1.0,+(*(0.5,cast.FLOAT(out)),*(1.0,cast.FLOAT(w))))
::STMT
MATRIX:V,W,H,parsertemp10738
LITERAL_FLOAT:1.0E-8
/(%*%(t(W),V),+(%*%(%*%(parsertemp10738,W),H),1.0E-8))
::STMT
LITERAL_FLOAT:1.0
+(1.0,1.0)
::STMT
FLOAT:link_power
LITERAL_FLOAT:1.0
/(1.0,link_power)
::STMT
FLOAT:link_power
LITERAL_FLOAT:-1.0
/(-1.0,link_power)
::STMT
MATRIX:y
FLOAT:beta
LITERAL_FLOAT:2.0
sum(^(-(beta,y),2.0))
::STMT
MATRIX:dout,parsertemp555660,parsertemp555659
FLOAT:int582,int684
LITERAL_FLOAT:1.0
*(*(/(1.0,+(int582,parsertemp555659)),-(1.0,/(int684,parsertemp555660))),dout)
::STMT
MATRIX:p,e,u,G
FLOAT:alpha
LITERAL_FLOAT:1.0
+(*(alpha,%*%(G,p)),*(-(1.0,alpha),%*%(%*%(e,u),p)))
::STMT
MATRIX:X
FLOAT:val
<=(X,val)
::STMT
MATRIX:prob,pred,test_Y
FLOAT:threshold
+(*(pred,>(prob,threshold)),*(test_Y,<=(prob,threshold)))
::STMT
MATRIX:parsertemp79022
LITERAL_FLOAT:0.5,1270.0
+(0.5,/(parsertemp79022,1270.0))
::STMT
MATRIX:X
FLOAT:397_C
*(nrow(X),/(ncol(X),397_C))
::STMT
MATRIX:output_values
FLOAT:log_odds
LITERAL_FLOAT:0.3,2.7182818284
^(2.7182818284,+(log_odds,*(0.3,cast.FLOAT(output_values))))
::STMT
LITERAL_FLOAT:0.0,1.0
+(1.0,0.0)
::STMT
MATRIX:X2p
LITERAL_FLOAT:0.0
>(t(colSums(X2p)),0.0)
::STMT
MATRIX:p,parsertemp169865,z
FLOAT:pp,trust_delta_sq
-(*(sum(*(p,z)),sum(*(p,z))),*(pp,-(sum(parsertemp169865),trust_delta_sq)))
::STMT
MATRIX:s,d,alpha_deno
FLOAT:norm_r2
+(s,*(cast.FLOAT(/(norm_r2,alpha_deno)),d))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int434,int699,int424,int815
%*%(rand(int434,int699,0.0,1.0),rand(int424,int815,0.0,1.0))
::STMT
MATRIX:p,p2
LITERAL_FLOAT:1.0E8
sum(>(abs(-(p2,p)),1.0E8))
::STMT
MATRIX:parsertemp171090,is_one_y_corr,t,parsertemp171099,parsertemp171096
FLOAT:int352,float868
LITERAL_FLOAT:1.0
+(*(+(*(t,int352),/(parsertemp171090,parsertemp171096)),-(1.0,*(float868,parsertemp171099))),/(is_one_y_corr,-(1.0,is_one_y_corr)))
::STMT
MATRIX:parsertemp387409,Ks,Kss
abs(cast.FLOAT(-(Kss,%*%(parsertemp387409,Ks))))
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0,1.0
-(+(nrow(Y),0.0),1.0)
::STMT
MATRIX:parsertemp170247,t_gp,parsertemp170252,lt_pos_neg,parsertemp170239
FLOAT:float539,float739
LITERAL_FLOAT:1.0,0.5,0.254829592
*(*(-(0.5,lt_pos_neg),exp(/(parsertemp170252,float739))),*(/(1.0,+(float539,parsertemp170239)),+(0.254829592,*(t_gp,parsertemp170247))))
::STMT
MATRIX:T_1,parsertemp410245,event,parsertemp410248
FLOAT:float847,int506
LITERAL_FLOAT:0.6666666666666666
/(^(/(-(int506,parsertemp410245),*(float847,parsertemp410248)),0.6666666666666666),/(-(max(T_1),min(T_1)),sum(event)))
::STMT
MATRIX:classes
LITERAL_FLOAT:0.19999999999999996
*(cast.FLOAT(classes),0.19999999999999996)
::STMT
FLOAT:ytest,int816
LITERAL_FLOAT:1.0,2.0
-(^(cast.FLOAT(ytest),2.0),*(1.0,^(/(ytest,int816),2.0)))
::STMT
LITERAL_FLOAT:2.0,7000.0
^(7000.0,2.0)
::STMT
MATRIX:r,scale_X,shift_X,y,parsertemp116003
FLOAT:int428
+(*(scale_X,%*%(-(int428,parsertemp116003),y)),*(cast.FLOAT(r),shift_X))
::STMT
MATRIX:d,X,logisticD
LITERAL_FLOAT:2.0
*(2.0,%*%(t(X),*(logisticD,%*%(X,d))))
::STMT
MATRIX:tmp_Xw,Y,Xd
LITERAL_FLOAT:0.0,1.0
*(Xd,>(-(1.0,*(Y,tmp_Xw)),0.0))
::STMT
MATRIX:W,H
LITERAL_FLOAT:1.0E-8
+(%*%(%*%(t(W),W),H),1.0E-8)
::STMT
MATRIX:upd_W1
LITERAL_FLOAT:0.95
*(0.95,upd_W1)
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(-(sum(round(W)),2.0),+(sum(round(W)),1.0))
::STMT
MATRIX:parsertemp222418,parsertemp222424
FLOAT:sample_block_size
LITERAL_FLOAT:1.0
+(*(sample_block_size,parsertemp222424),+(t(colSums(parsertemp222418)),1.0))
::STMT
MATRIX:parsertemp254737
FLOAT:parsertemp254766,2124_sq_root_d,float33,parsertemp254751
+(float33,*(parsertemp254766,/(+(parsertemp254751,2124_sq_root_d),sum(parsertemp254737))))
::STMT
MATRIX:parsertemp389328,parsertemp389331
LITERAL_FLOAT:1.0
t(/(-(exp(parsertemp389328),1.0),+(exp(parsertemp389331),1.0)))
::STMT
MATRIX:M
-(M,max(M))
::STMT
MATRIX:img_in1,img_in2
FLOAT:weight
LITERAL_FLOAT:1.0
+(*(-(1.0,weight),img_in1),*(weight,img_in2))
::STMT
MATRIX:parsertemp43993,os,d,X,alpha_deno
+(os,*(/(sum(parsertemp43993),cast.FLOAT(alpha_deno)),%*%(X,d)))
::STMT
FLOAT:n,norm
LITERAL_FLOAT:-2.0
*(*(-2.0,norm),n)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
*($1:ncol(X),+($1,1.0))
::STMT
MATRIX:parsertemp265709,tmp,parsertemp265718,parsertemp265714
FLOAT:Xm
LITERAL_FLOAT:2.0
-(+(Xm,trace(*(tmp,parsertemp265714))),*(2.0,cast.FLOAT(%*%(parsertemp265718,parsertemp265709))))
::STMT
MATRIX:minD,D,parsertemp222603,parsertemp222600
colSums(/(<=(+(parsertemp222600,parsertemp222603),minD),rowSums(<=(D,minD))))
::STMT
FLOAT:i
LITERAL_FLOAT:48.0
+(48.0,i)
::STMT
MATRIX:log_prob,X
FLOAT:parsertemp436712
+(*(ncol(X),parsertemp436712),log_prob)
::STMT
MATRIX:176_mask,W2,175_out
FLOAT:p
%*%(/(*(175_out,176_mask),p),W2)
::STMT
MATRIX:r,parsertemp1936,parsertemp1937
FLOAT:parsertemp1941,norm_r2
LITERAL_FLOAT:2.0
^(+(r,*(/(norm_r2,parsertemp1941),+(parsertemp1936,parsertemp1937))),2.0)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:2.0,0.5
*(2.0,>(y_corr,0.5))
::STMT
FLOAT:m2,float572,wt
LITERAL_FLOAT:4.0
^(sqrt(/(*(m2,wt),-(wt,float572))),4.0)
::STMT
MATRIX:C,Xm,parsertemp265707,parsertemp265705,parsertemp265713
+(sum(*(Xm,Xm)),trace(*(+(parsertemp265705,parsertemp265707),%*%(parsertemp265713,C))))
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:2000.0
/(2000.0,cast.FLOAT(%*%(t(w_X),z_LS)))
::STMT
FLOAT:float15,m2,wt
LITERAL_FLOAT:3.0
^(sqrt(/(*(m2,wt),-(wt,float15))),3.0)
::STMT
MATRIX:n_risk_stratum
LITERAL_FLOAT:1.0
*(n_risk_stratum,-(n_risk_stratum,1.0))
::STMT
MATRIX:parsertemp498242,m_iter_err_sum,m_err
LITERAL_FLOAT:0.0
-(0.0,-(t(+(parsertemp498242,m_iter_err_sum)),+(colSums(m_err),m_iter_err_sum)))
::STMT
MATRIX:col,more_than_ub,parsertemp24107,parsertemp24102,parsertemp24103
FLOAT:int33,num_bins
LITERAL_FLOAT:1.0
+(+(*(-(parsertemp24107,more_than_ub),+(parsertemp24103,int33)),*(>(col,num_bins),num_bins)),<(+(round(parsertemp24102),1.0),1.0))
::STMT
MATRIX:R,S,Grad
LITERAL_FLOAT:-0.5
*(-0.5,-(sum(*(S,Grad)),sum(*(S,R))))
::STMT
MATRIX:sample_rec_ids
FLOAT:num_records
*(sample_rec_ids,<=(sample_rec_ids,num_records))
::STMT
MATRIX:X
LITERAL_FLOAT:8.0
==(X,8.0)
::STMT
LITERAL_FLOAT:990000.0
990000.0
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,11.0
+(*(-(i,1.0),11.0),11.0)
::STMT
MATRIX:lambda,parsertemp171475
FLOAT:new_log_l
LITERAL_FLOAT:0.5
-(new_log_l,*(0.5,sum(*(lambda,parsertemp171475))))
::STMT
MATRIX:parsertemp31112,parsertemp31114,parsertemp31105,parsertemp31107
FLOAT:int146,int788,int637,int150
LITERAL_FLOAT:1500.0,2000.0
+(/(/(-(parsertemp31105,parsertemp31107),-(int150,int637)),2000.0),/(/(-(parsertemp31112,parsertemp31114),-(int788,int146)),1500.0))
::STMT
MATRIX:Xi,X_rev_2
*(X_rev_2,rev(Xi))
::STMT
FLOAT:var_lag,xq_lag,arch_coef,var_coef,a0
+(+(a0,*(arch_coef,xq_lag)),*(var_coef,var_lag))
::STMT
MATRIX:minD,parsertemp72030,parsertemp72033,parsertemp72034,parsertemp72031
FLOAT:int588
/(<=(+(*(int588,parsertemp72030),t(parsertemp72033)),minD),rowSums(<=(+(parsertemp72031,parsertemp72034),minD)))
::STMT
MATRIX:G
!=(rowSums(G),t(colSums(G)))
::STMT
MATRIX:e,X,tS
FLOAT:l
*(==(%*%(X,tS),l),e)
::STMT
FLOAT:cmLabels
LITERAL_FLOAT:1.0,10000.0
*(cmLabels,/(10000.0,-(10000.0,1.0)))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.0,1.0
/(==(y_corr,0.0),-(1.0,==(y_corr,0.0)))
::STMT
LITERAL_FLOAT:3.37275E9
3.37275E9
::STMT
FLOAT:i
LITERAL_FLOAT:96.0
+(96.0,i)
::STMT
MATRIX:p_CG
FLOAT:parsertemp170089,z,pp_CG
LITERAL_FLOAT:-1.0
+(*(*(cast.FLOAT(z),sum(p_CG)),-1.0),sqrt(-(*(z,z),*(pp_CG,parsertemp170089))))
::STMT
MATRIX:V
t(V)
::STMT
MATRIX:ssX_p_CG,shift_X,p_CG
+(ssX_p_CG,cast.FLOAT(%*%(t(shift_X),p_CG)))
::STMT
MATRIX:U,V,X,parsertemp382841,row_nonzeros
FLOAT:int259
LITERAL_FLOAT:1.0E-6
+(%*%(*(!=(X,int259),-(parsertemp382841,X)),V),*(*(1.0E-6,U),row_nonzeros))
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,11.0
-(n,-(+(i,11.0),1.0))
::STMT
LITERAL_FLOAT:1.061405429
1.061405429
::STMT
MATRIX:X
LITERAL_FLOAT:1.0E-6
*(1.0E-6,nrow(X))
::STMT
MATRIX:m_active_flag_tmp,m_active_flag
LITERAL_FLOAT:1.0
sum(-(>=(+(m_active_flag,m_active_flag_tmp),1.0),1.0))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,12.0
+(*(-(i,1.0),12.0),1.0)
::STMT
LITERAL_FLOAT:0.10938070012761454
0.10938070012761454
::STMT
MATRIX:prevTK2,totalE,X2
%*%(t(totalE),==(%*%(X2,t(prevTK2)),t(rowSums(prevTK2))))
::STMT
FLOAT:X
LITERAL_FLOAT:50.0,1.0E-6
/(*(1.0E-6,X),50.0)
::STMT
MATRIX:os,d,X,alpha_deno
FLOAT:norm_r2
+(os,*(cast.FLOAT(/(norm_r2,alpha_deno)),%*%(X,d)))
::STMT
MATRIX:M2
LITERAL_FLOAT:0.0
!(!=(M2,0.0))
::STMT
MATRIX:S,parsertemp175056
exp(-(S,parsertemp175056))
::STMT
MATRIX:R
LITERAL_FLOAT:0.0
==(colSums(!=(R,0.0)),0.0)
::STMT
MATRIX:parsertemp472147,I,y2
%*%(/(%*%(I,y2),sum(I)),parsertemp472147)
::STMT
MATRIX:lambda,parsertemp149401,parsertemp149400,B_new
LITERAL_FLOAT:2.0
sum(^(+(%*%(parsertemp149400,parsertemp149401),*(lambda,B_new)),2.0))
::STMT
MATRIX:lambda
FLOAT:newbeta,new_log_l,int183
LITERAL_FLOAT:0.5
-(new_log_l,*(0.5,*(cast.FLOAT(lambda),^(newbeta,int183))))
::STMT
MATRIX:2846_Q,X
LITERAL_FLOAT:2.0
+(rowSums(^(X,2.0)),sum(^(2846_Q,2.0)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:Infinity
==(linear_terms,Infinity)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-Infinity
==(linear_terms,-Infinity)
::STMT
MATRIX:mask
LITERAL_FLOAT:1.0
==(mask,1.0)
::STMT
FLOAT:X
LITERAL_FLOAT:1.0E-6,100.0
/(*(1.0E-6,X),100.0)
::STMT
FLOAT:j
LITERAL_FLOAT:4.0
-(4.0,j)
::STMT
MATRIX:parsertemp195898
FLOAT:parsertemp195893,int52,factor_up
LITERAL_FLOAT:2.0
-(/(parsertemp195898,factor_up),/(/(-(parsertemp195893,int52),2.0),factor_up))
::STMT
MATRIX:T,parsertemp537734
LITERAL_FLOAT:0.0
sum(==(%*%(parsertemp537734,T),0.0))
::STMT
MATRIX:X
FLOAT:m2X,float920,W
sqrt(*(m2X,/(nrow(X),-(W,float920))))
::STMT
MATRIX:parsertemp385504
LITERAL_FLOAT:0.0,6.0
-(6.0,sum(!=(t(parsertemp385504),0.0)))
::STMT
MATRIX:w_X,z_LS,X
*(/(nrow(X),sum(*(w_X,z_LS))),z_LS)
::STMT
MATRIX:parsertemp31104,parsertemp31106
FLOAT:int975
LITERAL_FLOAT:1.0,2.0,2000.0
^(/(-(colSums(parsertemp31104),*(int975,parsertemp31106)),-(2000.0,1.0)),2.0)
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,12.0
-(n,-(+(i,12.0),1.0))
::STMT
MATRIX:parsertemp195899,parsertemp195900
FLOAT:center
LITERAL_FLOAT:1.0
%*%(-(1.0,abs(-(parsertemp195899,center))),t(-(1.0,abs(parsertemp195900))))
::STMT
MATRIX:p,parsertemp1597,beta_unscaled
FLOAT:norm_r2
+(beta_unscaled,*(/(norm_r2,sum(parsertemp1597)),p))
::STMT
MATRIX:parsertemp174552
LITERAL_FLOAT:0.0
==(parsertemp174552,0.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0,2.0
/(/(1.0,linear_terms),-(2.0,var_power))
::STMT
MATRIX:ss
LITERAL_FLOAT:20.0
/(20.0,ss)
::STMT
MATRIX:X,Y
FLOAT:eps
+(+(abs(X),abs(Y)),eps)
::STMT
MATRIX:parsertemp146974,mW1,190_dW,parsertemp146977
FLOAT:parsertemp146983,191_lr,parsertemp146981,int10,191_beta1,parsertemp146971,191_epsilon
/(*(/(*(191_lr,parsertemp146981),-(int10,parsertemp146983)),+(*(191_beta1,mW1),*(parsertemp146971,190_dW))),+(sqrt(+(parsertemp146974,parsertemp146977)),191_epsilon))
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0
+(0.0,*(cast.FLOAT(lambda),cast.FLOAT(beta)))
::STMT
MATRIX:parsertemp31030,parsertemp31032
FLOAT:int387,int994
LITERAL_FLOAT:1.0,2.0,150.0
/(^(/(-(parsertemp31030,parsertemp31032),-(int994,int387)),2.0),*(^(150.0,2.0),-(150.0,1.0)))
::STMT
MATRIX:C,Xm,parsertemp265701
%*%(t(%*%(Xm,%*%(C,parsertemp265701))),%*%(Xm,%*%(C,parsertemp265701)))
::STMT
MATRIX:g_reg,g,parsertemp285556
sqrt(cast.FLOAT(%*%(t(g_reg),+(g,parsertemp285556))))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:1.0
^(linear_terms,-(/(1.0,link_power),1.0))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:-1.0,1.0
^(linear_terms,-(/(-1.0,link_power),1.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0E7
+(exp(linear_terms),==(+(1.0E7,exp(linear_terms)),1.0E7))
::STMT
MATRIX:parsertemp10744,W,H
LITERAL_FLOAT:1.0E-8
+(%*%(W,%*%(*(H,parsertemp10744),t(H))),1.0E-8)
::STMT
FLOAT:int53
LITERAL_FLOAT:0.0
INT:int403,m
rand(m,int403,0.0,int53)
::STMT
MATRIX:Xi_X_rev_agg,e_r_rev_agg,select,Xi_agg_rev_agg,X_agg
LITERAL_FLOAT:2.0
-(/(%*%(select,Xi_X_rev_agg),e_r_rev_agg),/(*(X_agg,Xi_agg_rev_agg),^(e_r_rev_agg,2.0)))
::STMT
MATRIX:err,cCnts
FLOAT:minSup
LITERAL_FLOAT:0.0
sum(|(<(cCnts,minSup),==(err,0.0)))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005,4.0
^(sqrt(*(1.0004995004995005,m2)),4.0)
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:1.0,2.0
^(linear_terms,-(/(1.0,link_power),2.0))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005,3.0
^(sqrt(*(1.0004995004995005,m2)),3.0)
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp171113
FLOAT:parsertemp171116
LITERAL_FLOAT:1.0
+(-(parsertemp171113,*(parsertemp171116,+(is_zero_y_corr,is_one_y_corr))),/(is_one_y_corr,-(1.0,is_one_y_corr)))
::STMT
MATRIX:ZtZ,Xm,parsertemp265709,parsertemp265706,Z,parsertemp265702,XtZ
FLOAT:ss,ZtZ_sum
*(+(%*%(t(Z),%*%(Xm,parsertemp265702)),*(parsertemp265706,ss)),%*%(t(/(XtZ,ZtZ_sum)),/(%*%(parsertemp265709,Z),sum(ZtZ))))
::STMT
MATRIX:tmp
FLOAT:N
LITERAL_FLOAT:0.0,1.0
<=(/(tmp,-(N,1.0)),0.0)
::STMT
MATRIX:CFreqs1
LITERAL_FLOAT:0.0,1.0
diag(-(1.0,==(CFreqs1,0.0)))
::STMT
MATRIX:y_hat,X
sum(*(-(X,y_hat),-(X,y_hat)))
::STMT
MATRIX:parsertemp31024,parsertemp31022
FLOAT:int346
LITERAL_FLOAT:99.0,100.0
/(/(-(colSums(parsertemp31022),*(int346,parsertemp31024)),99.0),100.0)
::STMT
FLOAT:D
LITERAL_FLOAT:2.0
sqrt(/(2.0,D))
::STMT
MATRIX:lengths
abs(-(cast.FLOAT(lengths),cast.FLOAT(lengths)))
::STMT
MATRIX:X,Y
LITERAL_FLOAT:2.0
^(-(X,Y),2.0)
::STMT
MATRIX:resp,Y,parsertemp506189
==(+(resp,t(parsertemp506189)),Y)
::STMT
MATRIX:e_r_rev_agg,parsertemp409787,parsertemp409796
LITERAL_FLOAT:-1.0
+(*(t(colSums(parsertemp409787)),-1.0),t(colSums(/(parsertemp409796,e_r_rev_agg))))
::STMT
MATRIX:X,Centering,ScaleFactor
colSums(/(-(X,Centering),ScaleFactor))
::STMT
MATRIX:parsertemp402079,W3_rand,parsertemp402082
LITERAL_FLOAT:0.1092173494617922
t(%*%(*(0.1092173494617922,W3_rand),t(/(parsertemp402079,parsertemp402082))))
::STMT
MATRIX:parsertemp76118
LITERAL_FLOAT:4460.0
/(parsertemp76118,4460.0)
::STMT
MATRIX:W,Y,sumW
LITERAL_FLOAT:300.0,0.0
-(0.0,*(300.0,-(*(Y,sumW),%*%(W,Y))))
::STMT
MATRIX:grad
LITERAL_FLOAT:-1.0
sum(*(*(grad,-1.0),*(grad,-1.0)))
::STMT
MATRIX:Kss,parsertemp387410
sqrt(abs(cast.FLOAT(-(Kss,parsertemp387410))))
::STMT
MATRIX:img
FLOAT:Hf,Wf
*(*(nrow(img),Hf),Wf)
::STMT
MATRIX:z
sqrt(sum(*(z,z)))
::STMT
MATRIX:p,V
FLOAT:eps
+(%*%(t(V),%*%(V,p)),*(eps,p))
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int892,int522
LITERAL_FLOAT:1999.0,2000.0
/(-(colSums(^(posSamples,int892)),*(2000.0,^(posSampleMeans,int522))),1999.0)
::STMT
MATRIX:parsertemp2832
==(round(parsertemp2832),min(round(parsertemp2832)))
::STMT
MATRIX:parsertemp77570
LITERAL_FLOAT:2358.0
/(parsertemp77570,2358.0)
::STMT
FLOAT:factor_up,parsertemp195891,parsertemp195892
LITERAL_FLOAT:1.0,2.0
/(/(-(-(parsertemp195891,parsertemp195892),1.0),2.0),factor_up)
::STMT
MATRIX:439_Ranks,parsertemp42225
FLOAT:parsertemp42214,parsertemp42216,parsertemp42218,meanY,parsertemp42220
/(sum(*(t(parsertemp42225),-(439_Ranks,meanY))),*(sqrt(*(parsertemp42214,parsertemp42216)),sqrt(*(parsertemp42218,parsertemp42220))))
::STMT
FLOAT:ssPrev,parsertemp265725,parsertemp265724,m,n
LITERAL_FLOAT:1.0
-(1.0,/(/(-(parsertemp265724,parsertemp265725),*(n,m)),ssPrev))
::STMT
MATRIX:ytest,yhat
LITERAL_FLOAT:2.0
^(-(cast.FLOAT(ytest),cast.FLOAT(yhat)),2.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
-(0.0,exp(-(0.0,linear_terms)))
::STMT
MATRIX:parsertemp170240,parsertemp170238
FLOAT:float911,float541
LITERAL_FLOAT:1.0,1.061405429,-1.453152027
*(/(1.0,+(1.0,*(parsertemp170238,float541))),+(-1.453152027,*(/(float911,parsertemp170240),1.061405429)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,12.0
+(*(-(i,1.0),12.0),12.0)
::STMT
MATRIX:parsertemp389215,parsertemp389217
LITERAL_FLOAT:1057.0,1058.0
sqrt(/(*(-(parsertemp389215,parsertemp389217),1058.0),1057.0))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:2.0
/(exp(finite_linear_terms),2.0)
::STMT
MATRIX:A,CFreqs
-(nrow(A),nrow(CFreqs))
::STMT
MATRIX:parsertemp129186,parsertemp129185,key_unique,key
t(==(%*%(key_unique,parsertemp129185),%*%(parsertemp129186,t(key))))
::STMT
MATRIX:F
-(F,/(%*%(rowSums(F),colSums(F)),sum(F)))
::STMT
MATRIX:S,V,W
*(W,%*%(S,t(V)))
::STMT
MATRIX:parsertemp220853,Ws,beta
FLOAT:logU
LITERAL_FLOAT:0.0
>=(-(+(parsertemp220853,*(beta,Ws)),logU),0.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,12.0,8.0
+(*(-(i,1.0),12.0),8.0)
::STMT
MATRIX:grad
FLOAT:psi
*(psi,sqrt(sum(*(grad,grad))))
::STMT
MATRIX:r,parsertemp44063,grad
LITERAL_FLOAT:-0.5
*(-0.5,-(cast.FLOAT(%*%(parsertemp44063,grad)),cast.FLOAT(%*%(parsertemp44063,r))))
::STMT
MATRIX:W
LITERAL_FLOAT:3.0,5.0
*(+(sum(round(W)),5.0),-(sum(round(W)),3.0))
::STMT
MATRIX:p,q,lambda
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),+(q,*(lambda,p)))
::STMT
MATRIX:Q1,IQR
LITERAL_FLOAT:2.0
-(Q1,*(2.0,IQR))
::STMT
FLOAT:rho
LITERAL_FLOAT:10000.0
*(10000.0,rho)
::STMT
MATRIX:r,parsertemp44063,parsertemp44065,grad
LITERAL_FLOAT:-0.5
cast.FLOAT(*(-0.5,-(%*%(parsertemp44063,grad),%*%(parsertemp44065,r))))
::STMT
FLOAT:cols,parsertemp451837
LITERAL_FLOAT:1.0
+(+(*(parsertemp451837,cols),1.0),cols)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:-1.0
exp(*(exp(finite_linear_terms),-1.0))
::STMT
MATRIX:parsertemp115947,TK
*(rowSums(TK),parsertemp115947)
::STMT
MATRIX:scale_lambda,parsertemp150455
FLOAT:reg
*(%*%(scale_lambda,parsertemp150455),reg)
::STMT
MATRIX:inactive_set,w
LITERAL_FLOAT:0.0
-(inactive_set,!=(w,0.0))
::STMT
FLOAT:m2,mu,float907,wt
/(sqrt(/(*(m2,wt),-(wt,float907))),mu)
::STMT
MATRIX:valueCount,parsertemp552530,Y
FLOAT:int866,int933
INT:parsertemp552529,idx
*(==(+(rand(parsertemp552529,idx,int933,int866),t(parsertemp552530)),Y),valueCount)
::STMT
MATRIX:prediction,target
/(-(prediction,target),nrow(target))
::STMT
MATRIX:posSampleMeans
LITERAL_FLOAT:2.0,100.0
*(100.0,^(posSampleMeans,2.0))
::STMT
MATRIX:252_Y
FLOAT:252_X,float555
LITERAL_FLOAT:1.0
*(-(1.0,/(-(float555,252_X),-(252_X,252_X))),cast.FLOAT(252_Y))
::STMT
FLOAT:vicinity,a0
LITERAL_FLOAT:1.0
*(-(1.0,vicinity),a0)
::STMT
MATRIX:Y
-(nrow(Y),sum(Y))
::STMT
MATRIX:mu
FLOAT:window_size
*(window_size,cast.FLOAT(*(mu,mu)))
::STMT
MATRIX:parsertemp459193,2701_dX,vb3
FLOAT:lr,mu
-(*(mu,vb3),*(lr,colSums(*(parsertemp459193,2701_dX))))
::STMT
MATRIX:lambda,g,beta
LITERAL_FLOAT:0.0
-(0.0,+(g,*(cast.FLOAT(lambda),cast.FLOAT(beta))))
::STMT
MATRIX:parsertemp555752
FLOAT:int398
LITERAL_FLOAT:0.5
sum(*(0.5,rowSums(^(parsertemp555752,int398))))
::STMT
MATRIX:Xm,parsertemp265707,parsertemp265705,parsertemp265702
t(/(%*%(t(Xm),%*%(Xm,parsertemp265702)),sum(+(parsertemp265705,parsertemp265707))))
::STMT
MATRIX:parsertemp191275
FLOAT:397_C
*(397_C,t(parsertemp191275))
::STMT
MATRIX:ts
FLOAT:q
+(-(q,*(cast.FLOAT(ts),cast.FLOAT(ts))),*(cast.FLOAT(ts),cast.FLOAT(ts)))
::STMT
FLOAT:Z_logl
LITERAL_FLOAT:-1.0
*(abs(Z_logl),-1.0)
::STMT
MATRIX:classFeatureCounts
FLOAT:numFeatures,laplaceCorrection
+(rowSums(classFeatureCounts),*(numFeatures,laplaceCorrection))
::STMT
MATRIX:X
FLOAT:2917_split
round(*(nrow(X),2917_split))
::STMT
FLOAT:parsertemp557354,parsertemp557358,prob_true,prob_false
LITERAL_FLOAT:0.6931471805599453
+(/(*(prob_true,parsertemp557354),0.6931471805599453),/(*(prob_false,parsertemp557358),0.6931471805599453))
::STMT
MATRIX:mn,mx
LITERAL_FLOAT:1.0
+(-(mx,mn),1.0)
::STMT
MATRIX:parsertemp409803
FLOAT:D
LITERAL_FLOAT:0.5
/(*(0.5,sqrt(D)),max(sqrt(rowSums(parsertemp409803))))
::STMT
MATRIX:r,parsertemp1945
FLOAT:norm_r2
/(sum(*(+(r,parsertemp1945),+(r,parsertemp1945))),norm_r2)
::STMT
FLOAT:x1,x2
LITERAL_FLOAT:-1.0,2.0
*(-1.0,^(-(x1,x2),2.0))
::STMT
MATRIX:R,parsertemp40226
FLOAT:eAvg
/(/(+(R,rowSums(parsertemp40226)),R),eAvg)
::STMT
MATRIX:V
max(V)
::STMT
MATRIX:Y_prob,Y,linear_terms
FLOAT:int926
LITERAL_FLOAT:3.141592653589793,1.0
*(*(*(rowSums(Y),Y_prob),Y_prob),*(+(1.0,^(linear_terms,int926)),3.141592653589793))
::STMT
MATRIX:obj,objnew,gs
-(-(cast.FLOAT(objnew),cast.FLOAT(obj)),cast.FLOAT(gs))
::STMT
MATRIX:prob,pred,test_Y
FLOAT:threshold
LITERAL_FLOAT:0.0
+(*(pred,>(prob,threshold)),*(test_Y,==(>(prob,threshold),0.0)))
::STMT
FLOAT:K
LITERAL_FLOAT:300.0
*(300.0,K)
::STMT
FLOAT:acc
LITERAL_FLOAT:1.0,100.0
cast.MATRIX(-(1.0,/(acc,100.0)))
::STMT
MATRIX:u,minDist
!=(u,minDist)
::STMT
MATRIX:N_T,tmp,X
<=(rowSums(*(X,tmp)),%*%(tmp,t(N_T)))
::STMT
MATRIX:parsertemp32006,simplex
LITERAL_FLOAT:2.0,4.0
-(*(2.0,/(-(parsertemp32006,simplex),4.0)),simplex)
::STMT
MATRIX:s,parsertemp44005,d
FLOAT:parsertemp44004
cast.FLOAT(%*%(t(+(s,parsertemp44005)),+(s,*(parsertemp44004,d))))
::STMT
MATRIX:parsertemp171348,is_too_small,parsertemp171346,parsertemp171344,parsertemp171353,linear_terms,Y,the_exp,parsertemp171349
FLOAT:int369,int803
/(*(*(exp(parsertemp171344),exp(linear_terms)),rowSums(Y)),+(/(*(parsertemp171348,parsertemp171349),+(the_exp,is_too_small)),*(==(parsertemp171346,int803),-(int369,parsertemp171353))))
::STMT
MATRIX:betamax,parsertemp220870,Hpos,beta
FLOAT:INF,int237
LITERAL_FLOAT:2.0
+(*(*(*(int237,Hpos),==(betamax,INF)),beta),/(*(*(Hpos,parsertemp220870),+(beta,betamax)),2.0))
::STMT
MATRIX:_sbcvar1782
FLOAT:_sbcvar1783
LITERAL_FLOAT:8.0
/(_sbcvar1782,-(8.0,_sbcvar1783))
::STMT
MATRIX:y_hat
FLOAT:parsertemp176421,k
-(sqrt(parsertemp176421),*(k,y_hat))
::STMT
MATRIX:F
LITERAL_FLOAT:0.0
==(/(%*%(rowSums(F),colSums(F)),sum(F)),0.0)
::STMT
MATRIX:w,X,y
FLOAT:int485,int701
INT:int178,m
%*%(t(-(%*%(X,w),y)),-(%*%(X,rand(m,int178,int485,int701)),y))
::STMT
MATRIX:X
LITERAL_FLOAT:480.0
/(colSums(X),480.0)
::STMT
MATRIX:Yhat_prime,E
t(colSums(*(E,Yhat_prime)))
::STMT
MATRIX:t_gp,parsertemp171320,Y,linear_terms,parsertemp171316
LITERAL_FLOAT:0.0,0.5
*(*(*(exp(parsertemp171320),*(t_gp,parsertemp171316)),rowSums(Y)),-(>=(linear_terms,0.0),0.5))
::STMT
FLOAT:prob_true,prob_false
LITERAL_FLOAT:1.0,2.0
-(1.0,+(^(prob_true,2.0),^(prob_false,2.0)))
::STMT
LITERAL_FLOAT:1.0,100000.0
-(100000.0,1.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,8.0
+(*(-(i,1.0),8.0),1.0)
::STMT
MATRIX:2700_dX,parsertemp459190,2702_X
FLOAT:int389,lr
*(lr,colSums(*(>(2702_X,int389),*(parsertemp459190,2700_dX))))
::STMT
MATRIX:R,B,parsertemp503364
LITERAL_FLOAT:-1.0
*(%*%(t(+(R,parsertemp503364)),B),-1.0)
::STMT
MATRIX:parsertemp230374
t(t(parsertemp230374))
::STMT
MATRIX:parsertemp409216,parsertemp409212,ctab
LITERAL_FLOAT:0.45
*(parsertemp409216,>(/(parsertemp409212,rowSums(ctab)),0.45))
::STMT
MATRIX:out2,184_probs,183_dpred,parsertemp146939,W3
LITERAL_FLOAT:0.0
*(>(out2,0.0),%*%(-(*(183_dpred,184_probs),*(184_probs,parsertemp146939)),t(W3)))
::STMT
FLOAT:n_components,n_features
LITERAL_FLOAT:1.0
*(*(n_components,n_features),+(n_features,1.0))
::STMT
MATRIX:parsertemp472298,I
LITERAL_FLOAT:0.0
*(==(*(t(parsertemp472298),I),0.0),I)
::STMT
MATRIX:p,q,lambda
cast.FLOAT(%*%(t(p),+(q,*(lambda,p))))
::STMT
LITERAL_FLOAT:0.999
0.999
::STMT
MATRIX:X
FLOAT:x
/(cast.FLOAT(-(x,X)),-(cast.FLOAT(X),cast.FLOAT(X)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
-(1.0,^(linear_terms,2.0))
::STMT
MATRIX:output_values
LITERAL_FLOAT:0.3
*(0.3,cast.FLOAT(output_values))
::STMT
MATRIX:X,_sbcvar2948
cast.FLOAT(%*%(t(-(X,_sbcvar2948)),-(X,_sbcvar2948)))
::STMT
MATRIX:P,parsertemp220889,Z,ZERODIAG,parsertemp220891
FLOAT:int302,int765
LITERAL_FLOAT:4.0
-(*(P,4.0),/(*(/(int302,parsertemp220891),+(parsertemp220889,int765)),sum(*(Z,ZERODIAG))))
::STMT
FLOAT:nc
LITERAL_FLOAT:1.0,20.0
*(+(20.0,1.0),-(nc,1.0))
::STMT
MATRIX:_sbcvar78,parsertemp22266
FLOAT:int315
LITERAL_FLOAT:2.0,10000.0
/(^(-(_sbcvar78,/(parsertemp22266,int315)),2.0),/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0))
::STMT
MATRIX:negSampleMeans,negSamples
FLOAT:int318,int839
LITERAL_FLOAT:149.0,150.0
/(-(colSums(^(negSamples,int839)),*(150.0,^(negSampleMeans,int318))),149.0)
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
+(+(/(1.0,cast.FLOAT(A)),/(1.0,cast.FLOAT(A))),/(1.0,cast.FLOAT(A)))
::STMT
MATRIX:P,Q,parsertemp220896,Y,Z,ZERODIAG
-(*(Y,rowSums(*(parsertemp220896,Z))),%*%(*(-(P,Q),*(Z,ZERODIAG)),Y))
::STMT
FLOAT:int496,parsertemp98,var,m4,parsertemp99,int864,parsertemp93,parsertemp94,wt,parsertemp105,parsertemp104
LITERAL_FLOAT:4.0
/(-(*(*(parsertemp93,parsertemp94),m4),*(*(parsertemp98,parsertemp99),-(wt,int496))),*(*(*(parsertemp104,parsertemp105),-(wt,int864)),^(sqrt(var),4.0)))
::STMT
MATRIX:parsertemp24101
FLOAT:float99
LITERAL_FLOAT:1.0
<(+(round(-(parsertemp24101,float99)),1.0),1.0)
::STMT
MATRIX:parsertemp145796,y
LITERAL_FLOAT:-1.0
rowSums(*(*(y,-1.0),parsertemp145796))
::STMT
MATRIX:linear_terms
FLOAT:var_power,link_power,float123
LITERAL_FLOAT:1.0
/(^(linear_terms,/(-(float123,var_power),link_power)),-(1.0,var_power))
::STMT
FLOAT:_sbcvar1751
LITERAL_FLOAT:6.0
-(6.0,_sbcvar1751)
::STMT
MATRIX:out2,parsertemp146940,184_dtemp,W3
LITERAL_FLOAT:0.0
colSums(*(>(out2,0.0),%*%(-(184_dtemp,parsertemp146940),t(W3))))
::STMT
MATRIX:parsertemp555766,parsertemp555764,parsertemp555762,parsertemp555761,target
/(sum(-(*(parsertemp555761,parsertemp555762),*(parsertemp555764,parsertemp555766))),nrow(target))
::STMT
MATRIX:parsertemp437192,parsertemp437191,parsertemp437190,mean,parsertemp437236,X,weight,parsertemp437188
FLOAT:float202,int107
LITERAL_FLOAT:2.0
+(-(/(%*%(parsertemp437190,parsertemp437236),t(weight)),*(2.0,^(mean,int107))),/(*(/(parsertemp437191,parsertemp437192),%*%(parsertemp437190,X)),t(+(parsertemp437188,float202))))
::STMT
MATRIX:parsertemp220896,W,Y,Z
LITERAL_FLOAT:300.0
*(300.0,-(*(Y,rowSums(W)),%*%(*(parsertemp220896,Z),Y)))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
*(exp(*(exp(linear_terms),-1.0)),exp(linear_terms))
::STMT
MATRIX:s
FLOAT:n
LITERAL_FLOAT:1.0
*(/(1.0,s),n)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:3.141592653589793,1.0,2.0
*(+(1.0,^(linear_terms,2.0)),3.141592653589793)
::STMT
MATRIX:CVars,CFreqs
LITERAL_FLOAT:1.0
*(-(CFreqs,1.0),CVars)
::STMT
MATRIX:s,parsertemp44016,d
*(%*%(t(-(s,parsertemp44016)),d),%*%(t(-(s,parsertemp44016)),d))
::STMT
MATRIX:P
sum(+(P,t(P)))
::STMT
MATRIX:A
FLOAT:a11,a12,int33,int524
LITERAL_FLOAT:1.0
+(+(+(/(int524,a11),/(int33,a12)),/(1.0,cast.FLOAT(A))),/(1.0,cast.FLOAT(A)))
::STMT
MATRIX:lambda,g,beta
+(g,*(cast.FLOAT(lambda),cast.FLOAT(beta)))
::STMT
MATRIX:Y
FLOAT:num_features,num_records
LITERAL_FLOAT:1.0
*(-(num_records,num_features),-(ncol(Y),1.0))
::STMT
MATRIX:L,m
FLOAT:sum
/(-(m,sum),L)
::STMT
FLOAT:e,initial_lr,decay
LITERAL_FLOAT:1.0
*(initial_lr,/(1.0,+(1.0,*(decay,e))))
::STMT
FLOAT:new_log_l,log_l
LITERAL_FLOAT:-1.0
+(*(new_log_l,-1.0),log_l)
::STMT
MATRIX:r_CG,p_CG
FLOAT:rr_CG,old_rr_CG
LITERAL_FLOAT:0.0
+(-(0.0,r_CG),*(/(rr_CG,old_rr_CG),p_CG))
::STMT
LITERAL_FLOAT:1.0,2.0,100.0
*(^(100.0,2.0),-(100.0,1.0))
::STMT
MATRIX:parsertemp220911,dY,Y
-(+(Y,dY),parsertemp220911)
::STMT
MATRIX:X_train
LITERAL_FLOAT:2.0
/(2.0,ncol(X_train))
::STMT
MATRIX:parsertemp389218
FLOAT:int620
LITERAL_FLOAT:1.0E-17,1057.0
+(sqrt(/(*(parsertemp389218,int620),1057.0)),1.0E-17)
::STMT
MATRIX:S,U,W
%*%(t(U),*(W,%*%(U,t(S))))
::STMT
FLOAT:int602,avg_tot,sum_sq_y_test,n
LITERAL_FLOAT:1.0
/(-(sum_sq_y_test,*(n,^(avg_tot,int602))),-(n,1.0))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0,4.0
*(4.0,-(^(sum(W),2.0),1.0))
::STMT
MATRIX:linear_terms
FLOAT:var_power,link_power
LITERAL_FLOAT:1.0
^(linear_terms,/(-(1.0,var_power),link_power))
::STMT
MATRIX:H
-(+(H,t(H)),diag(diag(H)))
::STMT
MATRIX:col
FLOAT:min_val
-(col,min_val)
::STMT
MATRIX:parsertemp146930,184_unnorm_probs,parsertemp146928,184_scores
FLOAT:int210,parsertemp146927
rowSums(*(*(*(parsertemp146927,parsertemp146928),/(int210,parsertemp146930)),/(exp(184_scores),rowSums(184_unnorm_probs))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0
*(-(sum(round(W)),2.0),+(sum(round(W)),1.0))
::STMT
MATRIX:P,parsertemp220889,Y,Z,parsertemp220891
FLOAT:int593,int40,parsertemp220894,int923
%*%(*(-(*(P,int923),/(Z,parsertemp220894)),*(/(int593,parsertemp220891),+(parsertemp220889,int40))),Y)
::STMT
MATRIX:W
LITERAL_FLOAT:5.0
+(sum(round(W)),5.0)
::STMT
MATRIX:parsertemp437192,parsertemp437191,resp,X,parsertemp437188
FLOAT:float205,int295
LITERAL_FLOAT:2.0
-(/(%*%(t(resp),^(X,int295)),t(+(parsertemp437188,float205))),*(2.0,^(/(parsertemp437191,parsertemp437192),2.0)))
::STMT
MATRIX:parsertemp386844,parsertemp386845
LITERAL_FLOAT:0.0,2.0
&(>(rowSums(|(parsertemp386844,parsertemp386845)),0.0),<(rowSums(|(parsertemp386844,parsertemp386845)),2.0))
::STMT
MATRIX:parsertemp410977,W,H,parsertemp410974
rowSums(/(*(H,%*%(parsertemp410974,parsertemp410977)),t(colSums(W))))
::STMT
MATRIX:lambda,scale_X,gXY,beta
FLOAT:int58
%*%(t(+(*(scale_X,gXY),*(lambda,beta))),+(*(scale_X,-(int58,gXY)),*(lambda,beta)))
::STMT
MATRIX:scale_X,X
%*%(diag(scale_X),%*%(t(X),X))
::STMT
MATRIX:out2,parsertemp146942,184_dscores
FLOAT:int741
LITERAL_FLOAT:2.0
^(colSums(*(>(out2,int741),%*%(184_dscores,parsertemp146942))),2.0)
::STMT
MATRIX:p,q,lambda
%*%(t(p),+(q,*(lambda,p)))
::STMT
MATRIX:parsertemp220988,parsertemp220989,dY
LITERAL_FLOAT:300.0,2.0,0.9
^(-(*(0.9,dY),*(300.0,-(parsertemp220988,parsertemp220989))),2.0)
::STMT
MATRIX:_sbcvar1674
FLOAT:int964
LITERAL_FLOAT:0.0,2.0
INT:int411,parsertemp282730
*(>(rand(parsertemp282730,int411,int964,2.0),0.0),_sbcvar1674)
::STMT
MATRIX:parsertemp555753,target
LITERAL_FLOAT:0.5
/(sum(*(0.5,rowSums(parsertemp555753))),nrow(target))
::STMT
MATRIX:W
sum(round(W))
::STMT
MATRIX:one_featureX
FLOAT:287_x,287_y
LITERAL_FLOAT:2.0
!(<(one_featureX,/(+(287_x,287_y),2.0)))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:n_components,parsertemp506195
rowSums(rand(parsertemp506195,n_components,0.0,1.0))
::STMT
MATRIX:R
FLOAT:s,i8
-(ncol(R),*(s,i8))
::STMT
MATRIX:p,r
FLOAT:norm_r2
*(/(sum(*(r,r)),norm_r2),p)
::STMT
LITERAL_FLOAT:1.0,750.0
*(750.0,1.0)
::STMT
MATRIX:ss,X2
FLOAT:alpha
LITERAL_FLOAT:1.0
*(-(1.0,alpha),-(/(nrow(X2),ss),1.0))
::STMT
FLOAT:float634,parsertemp254709,parsertemp254694,2123_sq_root_d,pp_CG
+(float634,*(parsertemp254709,/(+(parsertemp254694,2123_sq_root_d),pp_CG)))
::STMT
FLOAT:b,int894,rad
/(int894,+(b,rad))
::STMT
MATRIX:w,out
LITERAL_FLOAT:1.0,0.5
*(1.0,+(*(0.5,cast.FLOAT(out)),*(0.5,cast.FLOAT(w))))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
colSums(!=(X,0.0))
::STMT
LITERAL_FLOAT:0.1092173494617922
0.1092173494617922
::STMT
MATRIX:r_CG,g_reg,z
%*%(t(z),+(r_CG,g_reg))
::STMT
MATRIX:parsertemp498247,m_iter_err_sum
FLOAT:i_process_item
LITERAL_FLOAT:0.0,2.0
*(2.0,/(-(0.0,-(parsertemp498247,m_iter_err_sum)),i_process_item))
::STMT
MATRIX:D,ZERODIAG
LITERAL_FLOAT:1.0
*(/(1.0,+(D,1.0)),ZERODIAG)
::STMT
MATRIX:intercept,X,beta
LITERAL_FLOAT:1.0
INT:num_records,int303
+(%*%(X,beta),%*%(rand(num_records,int303,1.0,1.0),intercept))
::STMT
MATRIX:t,parsertemp171088,parsertemp171083,parsertemp171094
FLOAT:float536
LITERAL_FLOAT:-1.0,1.0,2.515517
+(*(sqrt(*(float536,parsertemp171083)),-1.0),/(+(2.515517,*(t,parsertemp171088)),+(1.0,*(t,parsertemp171094))))
::STMT
MATRIX:y_batch,parsertemp146892
LITERAL_FLOAT:0.0
sum(*(-(0.0,y_batch),parsertemp146892))
::STMT
MATRIX:output_values,current_prediction
LITERAL_FLOAT:0.3
+(current_prediction,*(0.3,cast.FLOAT(output_values)))
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:1000.0
/(1000.0,cast.FLOAT(%*%(t(w_X),z_LS)))
::STMT
MATRIX:B,S,X
%*%(X,+(B,S))
::STMT
MATRIX:s,d,alpha
-(s,*(cast.FLOAT(alpha),d))
::STMT
MATRIX:M
FLOAT:parsertemp178174
cast.MATRIX(+(max(M),parsertemp178174))
::STMT
MATRIX:parsertemp394988,W3_rand
FLOAT:int204,int625
LITERAL_FLOAT:0.21483446221182986
%*%(*(0.21483446221182986,W3_rand),t(/(-(parsertemp394988,int625),+(parsertemp394988,int204))))
::STMT
MATRIX:F,parsertemp42207,parsertemp42208,438_Ranks
FLOAT:parsertemp42222,int325,meanY,meanX,int938
*(t(*(/(F,parsertemp42222),-(438_Ranks,meanX))),-(+(-(parsertemp42207,parsertemp42208),/(int325,int938)),meanY))
::STMT
FLOAT:2344_s_err_mean
LITERAL_FLOAT:-1.0,0.001
-(*(0.001,-1.0),2344_s_err_mean)
::STMT
MATRIX:history
FLOAT:float452
-(max(history),float452)
::STMT
MATRIX:colSD,colMean
LITERAL_FLOAT:3.0
-(colMean,*(3.0,colSD))
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr
LITERAL_FLOAT:-0.36651292058166435
*(-0.36651292058166435,+(is_zero_y_corr,is_one_y_corr))
::STMT
MATRIX:H,betamin,beta
FLOAT:logU
LITERAL_FLOAT:0.0
+(*(<(-(H,logU),0.0),betamin),*(>=(-(H,logU),0.0),beta))
::STMT
MATRIX:parsertemp171087,parsertemp171084,parsertemp171093
FLOAT:float298,float780
LITERAL_FLOAT:1.0,2.515517
/(+(2.515517,*(sqrt(parsertemp171084),+(float780,parsertemp171087))),+(1.0,*(sqrt(parsertemp171084),+(float298,parsertemp171093))))
::STMT
MATRIX:parsertemp235660,parsertemp235671
FLOAT:parsertemp235661
LITERAL_FLOAT:0.0
sum(*(-(0.0,/(parsertemp235660,parsertemp235661)),parsertemp235671))
::STMT
MATRIX:qLow,length,qUp
rowSums(|(<(length,qLow),>(length,qUp)))
::STMT
MATRIX:_sbcvar1750
FLOAT:_sbcvar1751
LITERAL_FLOAT:6.0
/(_sbcvar1750,-(6.0,_sbcvar1751))
::STMT
MATRIX:intercept
LITERAL_FLOAT:1.0
INT:num_records,int615
%*%(rand(num_records,int615,1.0,1.0),intercept)
::STMT
FLOAT:cmLabels,int624,float396
LITERAL_FLOAT:10000.0
sqrt(*(cmLabels,/(10000.0,-(int624,float396))))
::STMT
MATRIX:parsertemp98,X,Y
LITERAL_FLOAT:2.0
/(abs(-(X,Y)),/(parsertemp98,2.0))
::STMT
MATRIX:V
FLOAT:std_dev,int434,mu
*(>(V,+(mu,*(int434,std_dev))),V)
::STMT
MATRIX:V
FLOAT:std_dev,int654,mu
*(<(V,-(mu,*(int654,std_dev))),V)
::STMT
MATRIX:X,y
LITERAL_FLOAT:-1.0
%*%(*(t(X),-1.0),y)
::STMT
MATRIX:X_batch,186_dX,parsertemp146949,parsertemp146957,parsertemp146955
FLOAT:beta1
LITERAL_FLOAT:1.0
*(-(1.0,beta1),%*%(t(X_batch),*(*(parsertemp146957,parsertemp146955),%*%(186_dX,parsertemp146949))))
::STMT
MATRIX:neighbors,corePts,withinEps
*(*(neighbors,corePts),withinEps)
::STMT
MATRIX:r_LS
FLOAT:norm_r2_LS,p_LS,parsertemp170552,lambda_LS
+(cast.FLOAT(r_LS),*(/(norm_r2_LS,*(p_LS,p_LS)),+(*(parsertemp170552,p_LS),*(lambda_LS,p_LS))))
::STMT
FLOAT:parsertemp496735,var,arch_coef,var_coef,a0
sqrt(+(+(a0,*(arch_coef,parsertemp496735)),*(var_coef,var)))
::STMT
LITERAL_FLOAT:0.0,2.0
*(2.0,0.0)
::STMT
MATRIX:parsertemp171084,parsertemp171083
LITERAL_FLOAT:-2.0,0.001308,0.189269
*(sqrt(*(-2.0,parsertemp171083)),+(0.189269,*(sqrt(parsertemp171084),0.001308)))
::STMT
FLOAT:277_sq_root_d,parsertemp170093,pp_CG,pq_CG
LITERAL_FLOAT:0.5
*(*(0.5,/(-(parsertemp170093,277_sq_root_d),pp_CG)),pq_CG)
::STMT
FLOAT:int199,s,num_groups,int805
LITERAL_FLOAT:1.0
+(+(*(-(s,int199),-(num_groups,int805)),1.0),num_groups)
::STMT
MATRIX:grad
FLOAT:int842
LITERAL_FLOAT:0.1
*(0.1,sqrt(sum(^(grad,int842))))
::STMT
MATRIX:X,y
FLOAT:int276,int931,int845,int559
INT:int786,m,int690
*(-(%*%(X,rand(m,int690,int845,int559)),y),-(%*%(X,rand(m,int786,int931,int276)),y))
::STMT
MATRIX:W
FLOAT:int221,int797,wt
LITERAL_FLOAT:1.0,3.0,6.0
/(*(*(6.0,sum(W)),-(sum(W),1.0)),*(*(-(wt,int221),+(wt,int797)),+(sum(W),3.0)))
::STMT
MATRIX:scale_X,z,beta
%*%(diag(scale_X),+(beta,z))
::STMT
MATRIX:X
-(X,round(X))
::STMT
MATRIX:u,minDist
sum(!=(u,minDist))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int374,int767
sum(rand(int374,int767,0.0,1.0))
::STMT
MATRIX:parsertemp539203
FLOAT:int106
LITERAL_FLOAT:1.0,2.0,1.5
min(^(/(*(parsertemp539203,int106),2.0),/(1.0,1.5)))
::STMT
FLOAT:ID
LITERAL_FLOAT:1.0,2.0
+(*(2.0,ID),1.0)
::STMT
MATRIX:parsertemp472412,fP
FLOAT:max_values
<=(parsertemp472412,/(^($1:ncol(fP),max_values),$1))
::STMT
MATRIX:prediction,target
rowSums(abs(-(prediction,target)))
::STMT
MATRIX:parsertemp382905,S,V,W,row_nonzeros
FLOAT:reg
*(S,+(%*%(*(W,parsertemp382905),V),*(*(reg,S),row_nonzeros)))
::STMT
MATRIX:X
cast.MATRIX(sum(X))
::STMT
MATRIX:parsertemp43618,o
LITERAL_FLOAT:1.0
/(1.0,+(1.0,exp(*(parsertemp43618,o))))
::STMT
MATRIX:lambda,parsertemp286535,beta
FLOAT:float296
LITERAL_FLOAT:0.0
cast.FLOAT(%*%(t(+(float296,parsertemp286535)),+(0.0,*(lambda,beta))))
::STMT
FLOAT:Hin
LITERAL_FLOAT:2.0,64.0
*(64.0,/(/(Hin,2.0),2.0))
::STMT
MATRIX:scale_X,w,ssX_p_CG,X
*(cast.FLOAT(diag(scale_X)),%*%(t(X),*(w,%*%(X,ssX_p_CG))))
::STMT
MATRIX:s,w
FLOAT:step_sz
LITERAL_FLOAT:2.0
^(+(w,*(step_sz,s)),2.0)
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0
==(rowSums(Y),0.0)
::STMT
MATRIX:Y,the_exp
FLOAT:int549
-(*(rowSums(Y),exp(*(the_exp,int549))),Y)
::STMT
MATRIX:images
LITERAL_FLOAT:1.0,2.0,255.0
-(*(/(images,255.0),2.0),1.0)
::STMT
FLOAT:parsertemp459295
LITERAL_FLOAT:1.0,128.0
-(+(+(parsertemp459295,1.0),128.0),1.0)
::STMT
MATRIX:negSampleMeans
LITERAL_FLOAT:2.0,150.0
*(150.0,^(negSampleMeans,2.0))
::STMT
MATRIX:output,output1
LITERAL_FLOAT:0.0,0.1
==(<(abs(-(output,output1)),0.1),0.0)
::STMT
MATRIX:_sbcvar1734
FLOAT:_sbcvar1735
LITERAL_FLOAT:12.0
/(_sbcvar1734,-(12.0,_sbcvar1735))
::STMT
MATRIX:r
FLOAT:int12
LITERAL_FLOAT:9.999999999999998E-15
sqrt(*(sum(^(r,int12)),9.999999999999998E-15))
::STMT
MATRIX:parsertemp2832
==(round(parsertemp2832),max(round(parsertemp2832)))
::STMT
MATRIX:A
-(A,t(A))
::STMT
MATRIX:X,Y,K
FLOAT:x
LITERAL_FLOAT:1.0
*(-(*(K,-(X,X)),-(Y,Y)),-(1.0,/(-(x,X),-(X,X))))
::STMT
MATRIX:samples_vs_runs_map,centroid_placer,X_samples
rowSums(*(X_samples,%*%(samples_vs_runs_map,%*%(centroid_placer,X_samples))))
::STMT
MATRIX:R,parsertemp72406,parsertemp72323
LITERAL_FLOAT:2.0
sum(^(-(%*%(parsertemp72323,R),diag(parsertemp72406)),2.0))
::STMT
MATRIX:parsertemp220845,D,ZERODIAG
rowSums(*(*(exp(parsertemp220845),ZERODIAG),D))
::STMT
MATRIX:X,y
FLOAT:int621,int319
INT:int505,m
t(-(%*%(X,rand(m,int505,int319,int621)),y))
::STMT
FLOAT:s_err_mean
LITERAL_FLOAT:-0.001
-(-0.001,s_err_mean)
::STMT
FLOAT:batch,i,int558
LITERAL_FLOAT:1.0
+(+(*(-(i,int558),batch),1.0),batch)
::STMT
MATRIX:parsertemp447181,strings
/(parsertemp447181,length(strings))
::STMT
FLOAT:a,b
LITERAL_FLOAT:2.0
/(*(2.0,*(a,b)),+(a,b))
::STMT
MATRIX:parsertemp500607,X,y,parsertemp500610
%*%(t(X),-(%*%(X,*(parsertemp500607,parsertemp500610)),y))
::STMT
MATRIX:g_Y,lambda,scale_X,parsertemp286673,beta
LITERAL_FLOAT:0.0
+(*(scale_X,-(0.0,%*%(parsertemp286673,g_Y))),*(lambda,beta))
::STMT
MATRIX:parsertemp170263,finite_linear_terms,parsertemp170261,the_exp
FLOAT:int120,int98,int745
LITERAL_FLOAT:1.0
+(*(-(1.0,==(parsertemp170263,int120)),-(1.0,exp(parsertemp170261))),*(*(==(parsertemp170263,int98),exp(finite_linear_terms)),-(1.0,/(the_exp,int745))))
::STMT
MATRIX:r,c,E,_sbcvar78
LITERAL_FLOAT:2.0,10000.0
sum(/(^(-(_sbcvar78,E),2.0),/(%*%(r,c),10000.0)))
::STMT
MATRIX:X
FLOAT:val
>(X,val)
::STMT
MATRIX:parsertemp498248
FLOAT:int60,i_process_item
LITERAL_FLOAT:2.0
*(^(/(-(int60,parsertemp498248),i_process_item),2.0),i_process_item)
::STMT
MATRIX:R,w,ones_ns
+(R,diag(*(ones_ns,cast.FLOAT(w))))
::STMT
MATRIX:foffb
LITERAL_FLOAT:1.0
*(ncol(foffb),1.0)
::STMT
MATRIX:selCols2,maxscub
FLOAT:parsertemp31797
LITERAL_FLOAT:-Infinity
&(selCols2,|(>=(maxscub,parsertemp31797),==(maxscub,-Infinity)))
::STMT
MATRIX:A
FLOAT:a11,a12,int566,int260
LITERAL_FLOAT:1.0
+(+(+(/(int260,a11),/(int566,a12)),/(1.0,cast.FLOAT(A))),/(1.0,cast.FLOAT(A)))
::STMT
MATRIX:t_gp,parsertemp170239
FLOAT:float801,float299
LITERAL_FLOAT:1.0,1.421413741,-1.453152027
+(1.421413741,*(/(1.0,+(float299,parsertemp170239)),+(-1.453152027,*(t_gp,float801))))
::STMT
MATRIX:275_X,275_curr_X
FLOAT:275_value
&(==(275_X,275_curr_X),>=(275_X,275_value))
::STMT
MATRIX:float999,is_zero_y_corr,is_one_y_corr,parsertemp317445,parsertemp317451,parsertemp317462
FLOAT:float898
LITERAL_FLOAT:1.0
-(+(*(+(parsertemp317451,parsertemp317462),1-*(float999,parsertemp317445)),/(is_one_y_corr,-(float898,is_one_y_corr))),/(is_zero_y_corr,-(1.0,is_zero_y_corr)))
::STMT
MATRIX:vW1,parsertemp146976
FLOAT:parsertemp146975,191_beta2,191_epsilon
+(sqrt(+(*(191_beta2,vW1),*(parsertemp146975,parsertemp146976))),191_epsilon)
::STMT
MATRIX:X
LITERAL_FLOAT:3.0
*(ncol(X),3.0)
::STMT
MATRIX:H,betamax,Hneg,Hpos,beta
FLOAT:float761
LITERAL_FLOAT:0.0,2.0,1.0E20
*(*(2.0,>=(-(H,float761),0.0)),==(+(*(Hpos,betamax),*(Hneg,beta)),1.0E20))
::STMT
MATRIX:B
LITERAL_FLOAT:2.0
*(ncol(B),2.0)
::STMT
MATRIX:parsertemp11251
LITERAL_FLOAT:2.0
^(2.0,parsertemp11251)
::STMT
MATRIX:parsertemp220853,Ws,beta
LITERAL_FLOAT:0.0,3.4011973816621555
>=(-(+(parsertemp220853,*(beta,Ws)),3.4011973816621555),0.0)
::STMT
MATRIX:X
LITERAL_FLOAT:2.0,1764.0
/(colSums(^(X,2.0)),1764.0)
::STMT
MATRIX:r,scale_X,shift_X
+(*(scale_X,r),%*%(shift_X,r))
::STMT
MATRIX:_sbcvar1846
FLOAT:_sbcvar1847
LITERAL_FLOAT:11.0
/(_sbcvar1846,-(11.0,_sbcvar1847))
::STMT
LITERAL_FLOAT:2.0,2000.0
^(2000.0,2.0)
::STMT
MATRIX:B
LITERAL_FLOAT:4.0
*(ncol(B),4.0)
::STMT
MATRIX:parsertemp410118,g0_1,parsertemp410117
%*%(t(+(g0_1,t(parsertemp410118))),+(g0_1,t(colSums(parsertemp410117))))
::STMT
MATRIX:p,q
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),p)
::STMT
FLOAT:float778,int543,parsertemp171819,parsertemp171815,sim_score_parent,int9,parsertemp171824,float6
-(+(/(^(parsertemp171815,int543),+(parsertemp171819,float6)),/(^(parsertemp171824,int9),+(parsertemp171819,float778))),sim_score_parent)
::STMT
MATRIX:lambda,g,beta
sum(*(+(g,*(lambda,beta)),+(g,*(lambda,beta))))
::STMT
FLOAT:dd,step_sz,wd
+(wd,*(step_sz,dd))
::STMT
MATRIX:B
LITERAL_FLOAT:8.0
*(ncol(B),8.0)
::STMT
MATRIX:R,parsertemp40220
FLOAT:numRows
LITERAL_FLOAT:1.0
-(/(numRows,-(R,rowSums(parsertemp40220))),1.0)
::STMT
MATRIX:parsertemp31188,parsertemp31186
FLOAT:int947
LITERAL_FLOAT:1.0,7000.0
/(/(-(colSums(parsertemp31186),*(int947,parsertemp31188)),-(7000.0,1.0)),7000.0)
::STMT
MATRIX:f,parsertemp472177,I,parsertemp472179
*(I,-(%*%(f,parsertemp472177),t(parsertemp472179)))
::STMT
FLOAT:m2X,W
LITERAL_FLOAT:1.0
*(m2X,/(W,-(W,1.0)))
::STMT
FLOAT:m2X,parsertemp4,m2Y,parsertemp8,int635,int492
*(sqrt(*(m2X,/(int492,parsertemp4))),sqrt(*(m2Y,/(int635,parsertemp8))))
::STMT
MATRIX:y_corr
FLOAT:float657
LITERAL_FLOAT:1.0,0.5
+(y_corr,*(-(1.0,*(float657,y_corr)),>(y_corr,0.5)))
::STMT
MATRIX:parsertemp400660,W3_rand
FLOAT:int364,int747
LITERAL_FLOAT:0.2656844656620286
%*%(*(0.2656844656620286,W3_rand),t(/(-(parsertemp400660,int747),+(parsertemp400660,int364))))
::STMT
MATRIX:ones,classFeatureCounts
LITERAL_FLOAT:1.0,50.0
%*%(+(rowSums(classFeatureCounts),*(50.0,1.0)),ones)
::STMT
MATRIX:CFreqs1,present_domain_vals_mat,parsertemp27485
FLOAT:my
LITERAL_FLOAT:2.0
*(%*%(present_domain_vals_mat,CFreqs1),^(-(%*%(present_domain_vals_mat,parsertemp27485),my),2.0))
::STMT
FLOAT:parsertemp13703
LITERAL_FLOAT:999.0,1000.0
*(999.0,/(*(parsertemp13703,1000.0),999.0))
::STMT
MATRIX:p_LS,X
*(cast.FLOAT(%*%(t(X),X)),cast.FLOAT(p_LS))
::STMT
MATRIX:cm,FD
FLOAT:int406,n
LITERAL_FLOAT:0.0
!=(+(+(FD,==(cm,int406)),==(t(cm),n)),0.0)
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0
t(+(0.0,*(lambda,beta)))
::STMT
MATRIX:r,d,alpha,parsertemp44052,Hd
FLOAT:norm_r2
+(-(r,*(cast.FLOAT(alpha),Hd)),*(/(sum(parsertemp44052),norm_r2),d))
::STMT
MATRIX:fdom,parsertemp1688
-(t(parsertemp1688),fdom)
::STMT
MATRIX:d,parsertemp410054
FLOAT:r2
/(r2,cast.FLOAT(%*%(t(d),t(parsertemp410054))))
::STMT
MATRIX:p,lambda,scale_X,shift_X
FLOAT:q
*(p,+(+(*(scale_X,q),*(q,shift_X)),*(lambda,p)))
::STMT
MATRIX:B2,ytest,Xtest
%*%(t(-(ytest,%*%(Xtest,B2))),-(ytest,%*%(Xtest,B2)))
::STMT
MATRIX:parsertemp43632,X,y
LITERAL_FLOAT:0.0,2.0
+(0.0,*(2.0,%*%(t(X),*(parsertemp43632,y))))
::STMT
FLOAT:df,parsertemp437302,n,norm
LITERAL_FLOAT:-2.0
+(*(*(-2.0,norm),n),*(df,parsertemp437302))
::STMT
FLOAT:cols,parsertemp451837
LITERAL_FLOAT:1.0
-(+(+(*(parsertemp451837,cols),1.0),cols),1.0)
::STMT
MATRIX:codebook
FLOAT:j
*(j,ncol(codebook))
::STMT
MATRIX:is_LT_infinite
LITERAL_FLOAT:1.0
-(1.0,rowSums(is_LT_infinite))
::STMT
LITERAL_FLOAT:1.02
1.02
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:1.0
-(1.0,^(linear_terms,/(1.0,link_power)))
::STMT
MATRIX:_sbcvar1830
FLOAT:_sbcvar1831
LITERAL_FLOAT:10.0
/(_sbcvar1830,-(10.0,_sbcvar1831))
::STMT
MATRIX:tmp
LITERAL_FLOAT:50.0
*(50.0,cast.FLOAT(%*%(t(tmp),tmp)))
::STMT
MATRIX:y_hat
FLOAT:k,parsertemp176418
+(sqrt(parsertemp176418),*(k,y_hat))
::STMT
MATRIX:m_iter_err_sum,parsertemp498242
FLOAT:i_process_item
LITERAL_FLOAT:0.0
/(-(0.0,-(t(m_iter_err_sum),+(parsertemp498242,m_iter_err_sum))),i_process_item)
::STMT
LITERAL_FLOAT:1.0E-16
1.0E-16
::STMT
FLOAT:D,o
LITERAL_FLOAT:-2.0,-1.0,2.0
+(*(-2.0,*(o,-1.0)),*(2.0,D))
::STMT
MATRIX:W,parsertemp411099,X,H
LITERAL_FLOAT:1.0E-8
/(%*%(t(W),X),+(%*%(%*%(parsertemp411099,W),H),1.0E-8))
::STMT
MATRIX:g_reg,g,parsertemp285556
FLOAT:parsertemp285562
*(cast.FLOAT(%*%(t(g_reg),+(g,parsertemp285556))),parsertemp285562)
::STMT
MATRIX:X2
LITERAL_FLOAT:4.0
>=(t(colSums(X2)),4.0)
::STMT
MATRIX:select,d_r_rev,X_exp_Xb_rev_agg,D_r_rev
*(/(%*%(select,X_exp_Xb_rev_agg),D_r_rev),d_r_rev)
::STMT
MATRIX:w,ones_ns
diag(*(ones_ns,cast.FLOAT(w)))
::STMT
MATRIX:g
FLOAT:lambda,beta
LITERAL_FLOAT:2.0
sum(^(+(g,*(lambda,beta)),2.0))
::STMT
LITERAL_FLOAT:1.0,500.0
*(500.0,1.0)
::STMT
MATRIX:s,w
LITERAL_FLOAT:1.0
*(1.0,sum(*(w,s)))
::STMT
MATRIX:m_active_flag_tmp,m_active_flag
LITERAL_FLOAT:1.0
>=(+(m_active_flag,m_active_flag_tmp),1.0)
::STMT
MATRIX:vW1,190_dW
FLOAT:191_beta2,int129,int49
sqrt(+(*(191_beta2,vW1),*(-(int129,191_beta2),^(190_dW,int49))))
::STMT
MATRIX:A
FLOAT:parsertemp12882
LITERAL_FLOAT:1.0
*(-(nrow(A),1.0),/(*(parsertemp12882,nrow(A)),-(nrow(A),1.0)))
::STMT
LITERAL_FLOAT:0.08709382882250233
0.08709382882250233
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(50.0,1.0)))
::STMT
MATRIX:parsertemp170665,residual_matrix,curr_prediction
FLOAT:282_lambda
LITERAL_FLOAT:2.0
/(^(sum(residual_matrix),2.0),+(sum(*(curr_prediction,parsertemp170665)),282_lambda))
::STMT
MATRIX:dY,g,parsertemp221002,Y
FLOAT:float831,float422
-(+(Y,-(*(float422,dY),*(float831,g))),parsertemp221002)
::STMT
MATRIX:grad
LITERAL_FLOAT:-1.0
*(*(grad,-1.0),*(grad,-1.0))
::STMT
MATRIX:parsertemp379560,m_iter_err_sum
FLOAT:i_process_item
LITERAL_FLOAT:-1.0
/(*(-(t(m_iter_err_sum),+(parsertemp379560,m_iter_err_sum)),-1.0),i_process_item)
::STMT
MATRIX:grad
FLOAT:int204,int415
sqrt(sum(*(*(grad,int204),*(grad,int415))))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
/(1.0,^(linear_terms,2.0))
::STMT
MATRIX:log_l_part_saturated
LITERAL_FLOAT:2.0
*(2.0,sum(log_l_part_saturated))
::STMT
FLOAT:eta,s,parsertemp454319
*(parsertemp454319,^(eta,s))
::STMT
MATRIX:output,Mask
LITERAL_FLOAT:1.0
*(output,-(1.0,Mask))
::STMT
MATRIX:paramLens,parsertemp387457
/(parsertemp387457,rev(paramLens))
::STMT
MATRIX:WM
FLOAT:parsertemp31268
*(parsertemp31268,sum(WM))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
*(2.0,ncol(X))
::STMT
LITERAL_FLOAT:1.0,2000.0
+(2000.0,1.0)
::STMT
MATRIX:p,parsertemp1934,parsertemp1935
FLOAT:eps
cast.FLOAT(%*%(t(p),+(%*%(parsertemp1934,parsertemp1935),*(eps,p))))
::STMT
MATRIX:parsertemp410246,parsertemp410249
FLOAT:float218,int106,int527,float484
-(max(^(/(parsertemp410246,parsertemp410249),/(int106,float218))),min(^(/(parsertemp410246,parsertemp410249),/(int527,float484))))
::STMT
MATRIX:XY_pairs_local,XY_pairs
|(XY_pairs,t(XY_pairs_local))
::STMT
MATRIX:ssX_V,X,parsertemp150463,P_1K,parsertemp149251
%*%(t(X),-(*(P_1K,%*%(X,ssX_V)),*(P_1K,%*%(parsertemp149251,parsertemp150463))))
::STMT
MATRIX:parsertemp235671,I,y2
LITERAL_FLOAT:0.0
*(-(0.0,/(%*%(I,y2),sum(I))),parsertemp235671)
::STMT
MATRIX:X
FLOAT:N
%*%(t(/(colSums(X),N)),/(colSums(X),N))
::STMT
MATRIX:parsertemp27746,parsertemp27872
FLOAT:featureCorrection
-(%*%(parsertemp27872,t(parsertemp27746)),featureCorrection)
::STMT
MATRIX:_sbcvar1798
FLOAT:_sbcvar1799
LITERAL_FLOAT:9.0
/(_sbcvar1798,-(9.0,_sbcvar1799))
::STMT
FLOAT:num_records
LITERAL_FLOAT:1.0,100.0
-(1.0,/(100.0,num_records))
::STMT
MATRIX:d,X,logisticD
FLOAT:C
*(C,%*%(t(X),*(logisticD,%*%(X,d))))
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:0.0,-2.0
-(0.0,sqrt(*(-2.0,parsertemp171083)))
::STMT
MATRIX:S,addedE,addedX2
FLOAT:level
*(==(%*%(S,t(addedX2)),level),t(addedE))
::STMT
LITERAL_FLOAT:409.0
409.0
::STMT
FLOAT:parsertemp40812,m2,int727
LITERAL_FLOAT:4.0
^(sqrt(*(/(int727,parsertemp40812),m2)),4.0)
::STMT
FLOAT:int960,parsertemp285740,p_CG,pp_CG,parsertemp285757
*(parsertemp285757,/(+(*(p_CG,int960),sqrt(parsertemp285740)),pp_CG))
::STMT
FLOAT:n
LITERAL_FLOAT:1.0,2.0
/(1.0,*(2.0,n))
::STMT
LITERAL_FLOAT:5.0,2000.0
+(2000.0,5.0)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0E-12
INT:int829,int420
+(%*%(t(X),X),diag(rand(int829,int420,1.0E-12,1.0E-12)))
::STMT
MATRIX:is_row_in_samples,parsertemp79018
LITERAL_FLOAT:3811.0
-(3811.0,*(is_row_in_samples,parsertemp79018))
::STMT
MATRIX:W,H
sum(%*%(W,H))
::STMT
LITERAL_FLOAT:750.0
750.0
::STMT
LITERAL_FLOAT:0.08725945907447251
0.08725945907447251
::STMT
LITERAL_FLOAT:3.0,2000.0
+(2000.0,3.0)
::STMT
MATRIX:scores,unnorm_probs,dprobs
rowSums(*(dprobs,/(exp(scores),rowSums(unnorm_probs))))
::STMT
MATRIX:parsertemp472316,parsertemp472314,ig
FLOAT:min_leaf
max(*(&(>=(parsertemp472314,min_leaf),>=(parsertemp472316,min_leaf)),ig))
::STMT
FLOAT:FN,FP,TP
*(+(TP,FP),+(TP,FN))
::STMT
MATRIX:tmp,X,Y,out
t(-(%*%(t(X),*(out,Y)),tmp))
::STMT
FLOAT:alpha
LITERAL_FLOAT:1.0,2.0
-(1.0,/(alpha,2.0))
::STMT
MATRIX:A,B
LITERAL_FLOAT:-1.0,2.0
^(*(%*%(t(A),B),-1.0),2.0)
::STMT
LITERAL_FLOAT:1.432788
1.432788
::STMT
MATRIX:surv
LITERAL_FLOAT:0.5
sum(<=(surv,0.5))
::STMT
MATRIX:G,authorities,hubs
-(/(%*%(G,authorities),max(%*%(G,authorities))),hubs)
::STMT
MATRIX:X,parsertemp555606
LITERAL_FLOAT:1.0
/(%*%(t(-(X,parsertemp555606)),-(X,parsertemp555606)),-(nrow(X),1.0))
::STMT
MATRIX:parsertemp42200,F
LITERAL_FLOAT:2.0
-(parsertemp42200,/(rowSums(F),2.0))
::STMT
MATRIX:R,parsertemp500307
FLOAT:int715
LITERAL_FLOAT:1.0
INT:int807,int466,parsertemp500306,parsertemp500303
+(%*%(rowSums(^(R,int715)),rand(int466,parsertemp500303,1.0,1.0)),%*%(rand(parsertemp500306,int807,1.0,1.0),t(rowSums(parsertemp500307))))
::STMT
MATRIX:parsertemp171117,is_zero_y_corr,is_one_y_corr,parsertemp171113
FLOAT:parsertemp171116,float156
LITERAL_FLOAT:1.0
-(+(-(parsertemp171113,*(parsertemp171116,parsertemp171117)),/(is_one_y_corr,-(float156,is_one_y_corr))),/(is_zero_y_corr,-(1.0,is_zero_y_corr)))
::STMT
MATRIX:parsertemp411207,parsertemp411209,W,parsertemp411198,H,parsertemp411200
LITERAL_FLOAT:1.0E-8
+(%*%(/(*(W,parsertemp411207),t(parsertemp411209)),/(*(H,parsertemp411198),t(parsertemp411200))),1.0E-8)
::STMT
MATRIX:subspace_idx,parsertemp72201
FLOAT:subvector_size
-(subspace_idx,*(parsertemp72201,subvector_size))
::STMT
MATRIX:p_CG,z
*(cast.FLOAT(z),sum(p_CG))
::STMT
MATRIX:parsertemp459256
LITERAL_FLOAT:5.0E-4
*(5.0E-4,parsertemp459256)
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
^(/(t(colSums(X)),nrow(X)),2.0)
::STMT
FLOAT:o
LITERAL_FLOAT:-2.0,-1.0
*(-2.0,*(o,-1.0))
::STMT
MATRIX:dout1,vb1
FLOAT:192_beta2
LITERAL_FLOAT:1.0,2.0
+(*(192_beta2,vb1),*(-(1.0,192_beta2),^(colSums(dout1),2.0)))
::STMT
MATRIX:X,Y
abs(-(X,Y))
::STMT
MATRIX:parsertemp10744,W,H
FLOAT:Eps
+(%*%(W,%*%(*(H,parsertemp10744),t(H))),Eps)
::STMT
MATRIX:y_residual,parsertemp415351
FLOAT:parsertemp415362,n,int152
LITERAL_FLOAT:1.0
-(1.0,/(sum(^(y_residual,int152)),-(sum(parsertemp415351),*(n,parsertemp415362))))
::STMT
MATRIX:parsertemp10740,V,W,H
FLOAT:Eps
/(%*%(t(W),V),+(%*%(%*%(parsertemp10740,W),H),Eps))
::STMT
MATRIX:in_m_data_target
LITERAL_FLOAT:100.0
*(-(max(in_m_data_target),min(in_m_data_target)),100.0)
::STMT
MATRIX:parsertemp560919,parsertemp560920,elt,ones_ctg
LITERAL_FLOAT:1.0
*(/(elt,%*%(rowSums(elt),t(ones_ctg))),%*%(/(elt,%*%(parsertemp560919,parsertemp560920)),-(1.0,diag(ones_ctg))))
::STMT
MATRIX:termination_bitmap,parsertemp72096
FLOAT:int497,worst_wcss
LITERAL_FLOAT:1.0,10.0
+(*(parsertemp72096,termination_bitmap),*(+(*(int497,worst_wcss),10.0),-(1.0,termination_bitmap)))
::STMT
MATRIX:W1_rand,X,parsertemp401984,parsertemp401974
FLOAT:float690
LITERAL_FLOAT:0.06835859270246632
%*%(*(0.06835859270246632,W1_rand),t(/(-(X,parsertemp401974),+(parsertemp401984,float690))))
::STMT
MATRIX:I,y2
LITERAL_FLOAT:0.0
-(0.0,/(%*%(I,y2),sum(I)))
::STMT
MATRIX:M
exp(-(M,max(M)))
::STMT
MATRIX:entropy,parsertemp552397,resp,L
*(==(+(resp,t(parsertemp552397)),L),entropy)
::STMT
FLOAT:sd_X
sqrt(sd_X)
::STMT
FLOAT:j
LITERAL_FLOAT:1.0,4.0
+(-(4.0,j),1.0)
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:10000.0
*(/(10000.0,cast.FLOAT(%*%(w_X,z_LS))),z_LS)
::STMT
FLOAT:m2Y,sigmaX
LITERAL_FLOAT:1.0005
*(sigmaX,sqrt(*(m2Y,1.0005)))
::STMT
FLOAT:deviance_nodisp
LITERAL_FLOAT:0.1,1.0E-12
*(1.0E-12,+(deviance_nodisp,0.1))
::STMT
MATRIX:parsertemp410979,W,X,parsertemp410981,parsertemp410983
FLOAT:eps
*(W,%*%(/(X,+(parsertemp410983,eps)),t(/(parsertemp410979,parsertemp410981))))
::STMT
FLOAT:n_components,n_features
LITERAL_FLOAT:1.0,2.0
/(*(*(n_components,n_features),+(n_features,1.0)),2.0)
::STMT
MATRIX:mu
LITERAL_FLOAT:4.0
*(4.0,*(cast.FLOAT(mu),cast.FLOAT(mu)))
::STMT
MATRIX:p,r,parsertemp1597,lambda,parsertemp1590,parsertemp1589
FLOAT:norm_r2
+(r,*(/(norm_r2,sum(parsertemp1597)),+(%*%(parsertemp1589,parsertemp1590),*(lambda,p))))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:500.0
+(rowSums(classFeatureCounts),500.0)
::STMT
MATRIX:parsertemp13658,parsertemp13659,_sbcvar12
FLOAT:44_meanX
LITERAL_FLOAT:999.0,0.5
*(/(_sbcvar12,999.0),-(+(-(parsertemp13658,parsertemp13659),0.5),44_meanX))
::STMT
MATRIX:linear_terms
FLOAT:var_power,link_power,float674
LITERAL_FLOAT:2.0
/(^(linear_terms,/(-(float674,var_power),link_power)),-(2.0,var_power))
::STMT
FLOAT:int435,int13
INT:int92,int565
rand(int565,int92,int435,int13)
::STMT
MATRIX:prec_chol,bc_matrix,parsertemp436690
FLOAT:int898
*(bc_matrix,t(*(rowSums(parsertemp436690),^(prec_chol,int898))))
::STMT
MATRIX:X
FLOAT:q1,q2
|(<(X,q1),>(X,q2))
::STMT
FLOAT:ytest,int697,int876,parsertemp454072,parsertemp454076,int481,int619
LITERAL_FLOAT:1.0
-(1.0,/(-(^(ytest,int619),*(int481,parsertemp454072)),-(^(ytest,int697),*(int876,parsertemp454076))))
::STMT
MATRIX:parsertemp477918,b
FLOAT:tolerance
LITERAL_FLOAT:2.0
*(sum(^(%*%(parsertemp477918,b),2.0)),^(tolerance,2.0))
::STMT
MATRIX:X
FLOAT:M
*(nrow(X),M)
::STMT
MATRIX:leaf_ids
FLOAT:boundary_left,step_size
<(leaf_ids,+(boundary_left,step_size))
::STMT
FLOAT:m2
LITERAL_FLOAT:2.0,3.0
*(3.0,^(m2,2.0))
::STMT
MATRIX:curr_prediction
FLOAT:int644
LITERAL_FLOAT:0.0
+(sum(*(curr_prediction,-(int644,curr_prediction))),0.0)
::STMT
MATRIX:A,scale_X,shift_X,parsertemp1656,parsertemp1655
+(%*%(diag(scale_X),t(+(parsertemp1655,parsertemp1656))),%*%(shift_X,A))
::STMT
FLOAT:run_index
LITERAL_FLOAT:24.0,1.0
+(*(24.0,-(run_index,1.0)),1.0)
::STMT
FLOAT:acc
LITERAL_FLOAT:1.0,100.0
-(1.0,/(acc,100.0))
::STMT
FLOAT:log_ten,d_eee,x,float396
*(x,exp(*(log_ten,-(float396,d_eee))))
::STMT
FLOAT:int244,parsertemp459332,int646,parsertemp459334
LITERAL_FLOAT:2.0
sqrt(/(2.0,*(*(int244,parsertemp459332),/(parsertemp459334,int646))))
::STMT
MATRIX:X
FLOAT:N
LITERAL_FLOAT:0.0
-(0.0,/(t(colSums(X)),N))
::STMT
MATRIX:parsertemp410245,parsertemp410248
FLOAT:int56,float64
LITERAL_FLOAT:1.0,1.5
max(^(/(*(parsertemp410245,int56),*(float64,parsertemp410248)),/(1.0,1.5)))
::STMT
MATRIX:parsertemp429913,avg_X_cols
FLOAT:int179
LITERAL_FLOAT:300.0,299.0
/(-(t(colSums(parsertemp429913)),*(300.0,^(avg_X_cols,int179))),299.0)
::STMT
MATRIX:P_denom
LITERAL_FLOAT:0.0
sum(<=(P_denom,0.0))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int842,int402
cast.FLOAT(rand(int842,int402,0.0,1.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0,2.0
*(2.0,>=(linear_terms,0.0))
::STMT
MATRIX:p,q,r,parsertemp1947
FLOAT:norm_r2,alpha
LITERAL_FLOAT:0.0
+(-(0.0,+(r,*(alpha,q))),*(/(sum(parsertemp1947),norm_r2),p))
::STMT
MATRIX:Y_prob,Y
*(*(rowSums(Y),Y_prob),Y_prob)
::STMT
MATRIX:g_new,g_old
/(sum(*(g_new,g_new)),sum(*(g_old,g_old)))
::STMT
MATRIX:r_LS
FLOAT:norm_r2_LS,p_LS,parsertemp170552,lambda_LS
+(r_LS,*(/(norm_r2_LS,*(p_LS,p_LS)),+(*(parsertemp170552,p_LS),*(lambda_LS,p_LS))))
::STMT
MATRIX:samples_vs_runs_map,X_samples_sq_norms,centroids
FLOAT:int785
+(X_samples_sq_norms,%*%(samples_vs_runs_map,rowSums(^(centroids,int785))))
::STMT
FLOAT:e,epochs
LITERAL_FLOAT:1.0
-(+(1.0,epochs),e)
::STMT
MATRIX:t,parsertemp171083
FLOAT:float488,float22
LITERAL_FLOAT:0.802853,2.515517
+(2.515517,*(sqrt(*(float488,parsertemp171083)),+(0.802853,*(t,float22))))
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.07808688094430302
*(0.07808688094430302,W1_rand)
::STMT
MATRIX:output1,dataset
LITERAL_FLOAT:0.16
>=(abs(-(output1,dataset)),0.16)
::STMT
MATRIX:X,parsertemp438796
t(*(ncol(X),parsertemp438796))
::STMT
MATRIX:t,tmp
FLOAT:parsertemp477715,int875,x,X,Y,K
*(cast.FLOAT(t),+(*(-(K,Y),-(int875,parsertemp477715)),*(cast.FLOAT(tmp),/(x,X))))
::STMT
MATRIX:parsertemp12846,F
FLOAT:W
LITERAL_FLOAT:2.0
/(^(-(F,/(parsertemp12846,W)),2.0),/(%*%(rowSums(F),colSums(F)),sum(F)))
::STMT
MATRIX:std,rad
+(cast.FLOAT(std),cast.FLOAT(rad))
::STMT
LITERAL_FLOAT:1.0,2.0,150.0
*(^(150.0,2.0),-(150.0,1.0))
::STMT
MATRIX:meanDiff,parsertemp570372,parsertemp570375
LITERAL_FLOAT:0.5,-0.5
-(*(-0.5,parsertemp570372),*(0.5,%*%(%*%(meanDiff,parsertemp570375),t(meanDiff))))
::STMT
MATRIX:parsertemp570372
LITERAL_FLOAT:-0.5
*(-0.5,parsertemp570372)
::STMT
MATRIX:parsertemp31912,I
FLOAT:eAvg
/(/(t(%*%(parsertemp31912,I)),t(colSums(I))),eAvg)
::STMT
MATRIX:node
LITERAL_FLOAT:1.0,2.0
+(*(node,2.0),1.0)
::STMT
MATRIX:lambda,g,beta
LITERAL_FLOAT:2.0
^(+(g,*(cast.FLOAT(lambda),cast.FLOAT(beta))),2.0)
::STMT
MATRIX:p,Z
FLOAT:norm_r2
/(norm_r2,cast.FLOAT(%*%(t(p),%*%(Z,p))))
::STMT
MATRIX:posSamples,posSampleMeans
LITERAL_FLOAT:2.0,2000.0
-(colSums(^(posSamples,2.0)),*(2000.0,^(posSampleMeans,2.0)))
::STMT
MATRIX:parsertemp170665,residual_matrix,curr_prediction
LITERAL_FLOAT:0.0,2.0
/(^(sum(residual_matrix),2.0),+(sum(*(curr_prediction,parsertemp170665)),0.0))
::STMT
MATRIX:m_err_vars,m_err_mean
LITERAL_FLOAT:-0.001
/(-(-0.001,cast.FLOAT(m_err_mean)),cast.FLOAT(m_err_vars))
::STMT
MATRIX:S,V
FLOAT:int586,delta2
LITERAL_FLOAT:2.0
*(sum(^(V,2.0)),-(delta2,sum(^(S,int586))))
::STMT
MATRIX:parsertemp389212,parsertemp389215
LITERAL_FLOAT:2.0,1058.0
-(parsertemp389215,^(/(parsertemp389212,1058.0),2.0))
::STMT
MATRIX:avg_res_Y,means,Y_counts,Y
LITERAL_FLOAT:2.0
colSums(^(-(-(Y,means),%*%(Y_counts,avg_res_Y)),2.0))
::STMT
FLOAT:w_i
LITERAL_FLOAT:5.0
-(w_i,5.0)
::STMT
MATRIX:r,scale_X,shift_X,y,parsertemp116004
LITERAL_FLOAT:2.0
^(+(*(scale_X,%*%(parsertemp116004,y)),*(cast.FLOAT(r),shift_X)),2.0)
::STMT
MATRIX:S,X
LITERAL_FLOAT:1.0,2.0
/(^(diag(S),2.0),-(nrow(X),1.0))
::STMT
MATRIX:2699_dscores,parsertemp459193,parsertemp459183,parsertemp459190,2703_X,2703_W
LITERAL_FLOAT:5.0E-4
+(%*%(t(2703_X),*(*(parsertemp459193,parsertemp459190),%*%(2699_dscores,parsertemp459183))),*(5.0E-4,2703_W))
::STMT
MATRIX:parsertemp285809,p_CG,z
FLOAT:parsertemp285799,2235_sq_root_d,parsertemp285814
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(z,parsertemp285809))),*(parsertemp285814,/(+(parsertemp285799,2235_sq_root_d),cast.FLOAT(p_CG))))
::STMT
FLOAT:obj
LITERAL_FLOAT:1.0E-10
*(1.0E-10,obj)
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
*(*(n_risk,n_event_stratum),-(n_risk_stratum,n_event_stratum))
::STMT
MATRIX:y_hat,X
*(-(X,y_hat),-(X,y_hat))
::STMT
FLOAT:n
LITERAL_FLOAT:4.0
-(n,4.0)
::STMT
MATRIX:X,X_nonzero_ind
LITERAL_FLOAT:0.0
-(nrow(X),sum(!=(rowSums(X_nonzero_ind),0.0)))
::STMT
MATRIX:X,permut
FLOAT:n
*(/(colSums(%*%(permut,X)),n),/(colSums(%*%(permut,X)),n))
::STMT
MATRIX:W1_rand,stds,parsertemp401986
LITERAL_FLOAT:0.06835859270246632
t(%*%(*(0.06835859270246632,W1_rand),t(/(parsertemp401986,stds))))
::STMT
MATRIX:X
FLOAT:int416
LITERAL_FLOAT:1.0
sqrt(/(colSums(^(X,int416)),-(nrow(X),1.0)))
::STMT
MATRIX:U_OE
rowSums(rowSums(U_OE))
::STMT
MATRIX:Y,Xd,Xw
FLOAT:step_sz
LITERAL_FLOAT:1.0
-(1.0,*(Y,+(Xw,*(step_sz,Xd))))
::STMT
FLOAT:s
LITERAL_FLOAT:-1.0,3.0
^(3.0,*(s,-1.0))
::STMT
LITERAL_FLOAT:1.000100010001
1.000100010001
::STMT
MATRIX:252_Y,252_K
FLOAT:252_X,float532
LITERAL_FLOAT:1.0
*(-(*(cast.FLOAT(252_K),-(252_X,252_X)),-(cast.FLOAT(252_Y),cast.FLOAT(252_Y))),-(1.0,/(-(float532,252_X),-(252_X,252_X))))
::STMT
FLOAT:window_size,parsertemp181047,parsertemp181040
LITERAL_FLOAT:1.0,2.0
sqrt(*(*(2.0,window_size),-(1.0,/(parsertemp181040,parsertemp181047))))
::STMT
MATRIX:b_cumulant,Y,natural_parameters
sum(-(*(Y,natural_parameters),b_cumulant))
::STMT
LITERAL_FLOAT:0.07808688094430302
0.07808688094430302
::STMT
MATRIX:y_corr,is_zero_y_corr
FLOAT:float599,float550,float570,int718
LITERAL_FLOAT:1.0,0.5
+(*(*(y_corr,-(float599,is_zero_y_corr)),-(1.0,>=(y_corr,float550))),*(0.5,+(<=(y_corr,int718),>=(y_corr,float570))))
::STMT
MATRIX:2212_oY
!(2212_oY)
::STMT
MATRIX:parsertemp129475
LITERAL_FLOAT:1.0,2.0
-(+(*(max(parsertemp129475),2.0),1.0),1.0)
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,1024.0
+(-(1024.0,idx),1.0)
::STMT
MATRIX:resp,mean,X
t(*(-(X,mean),resp))
::STMT
MATRIX:r_CG,q_CG
FLOAT:alpha_CG
LITERAL_FLOAT:2.0
^(+(r_CG,*(alpha_CG,cast.FLOAT(q_CG))),2.0)
::STMT
MATRIX:221_CFreqs,221_present_domain_vals_mat,parsertemp27770
FLOAT:int792
LITERAL_FLOAT:1000.0
/(sum(*(-(221_CFreqs,int792),%*%(221_present_domain_vals_mat,parsertemp27770))),-(1000.0,nrow(221_present_domain_vals_mat)))
::STMT
MATRIX:Xtest_dists
LITERAL_FLOAT:0.0
<(0.0,Xtest_dists)
::STMT
MATRIX:selCols,ncCnts,maxsc
FLOAT:parsertemp31781
LITERAL_FLOAT:0.0
&(selCols,|(>(ncCnts,0.0),>(maxsc,parsertemp31781)))
::STMT
MATRIX:b,X,sb
*(X,exp(%*%(X,+(b,sb))))
::STMT
MATRIX:R,addedE,parsertemp40215
FLOAT:level
+(R,rowSums(*(==(parsertemp40215,level),t(addedE))))
::STMT
FLOAT:step
LITERAL_FLOAT:0.9
*(step,0.9)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0,2.0
/(-(0.0,^(finite_linear_terms,2.0)),2.0)
::STMT
MATRIX:Q1,IQR
LITERAL_FLOAT:1.5
-(Q1,*(1.5,IQR))
::STMT
LITERAL_FLOAT:1.0E-6
1.0E-6
::STMT
MATRIX:ytest
LITERAL_FLOAT:1.0,2.0
^(/(cast.FLOAT(ytest),1.0),2.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0,-1.0
-(1.0,exp(*(exp(finite_linear_terms),-1.0)))
::STMT
MATRIX:ytest,yhat
LITERAL_FLOAT:2.0
^(/(sum(-(ytest,yhat)),nrow(ytest)),2.0)
::STMT
MATRIX:CVars,CFreqs
LITERAL_FLOAT:1.0
sum(*(-(CFreqs,1.0),CVars))
::STMT
FLOAT:window_size,i,k
+(+(i,k),window_size)
::STMT
MATRIX:ss,X2
/(nrow(X2),ss)
::STMT
MATRIX:X
LITERAL_FLOAT:3.0
*(3.0,ncol(X))
::STMT
MATRIX:grad
LITERAL_FLOAT:0.0,2.0
sum(^(-(0.0,grad),2.0))
::STMT
MATRIX:parsertemp129475,groupIndex
*(groupIndex,max(parsertemp129475))
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,48.0
*(48.0,-(run_index,1.0))
::STMT
MATRIX:scale_X,shift_X,X
FLOAT:int959
LITERAL_FLOAT:2.0
+(%*%(^(X,2.0),^(scale_X,2.0)),%*%(X,*(*(int959,scale_X),shift_X)))
::STMT
MATRIX:parsertemp171083
FLOAT:float680
LITERAL_FLOAT:0.010328,0.802853
+(0.802853,*(sqrt(*(float680,parsertemp171083)),0.010328))
::STMT
MATRIX:g
LITERAL_FLOAT:0.01
*(0.01,cast.FLOAT(%*%(t(g),g)))
::STMT
LITERAL_FLOAT:1.0,2.0,2001.0
-(^(2001.0,2.0),1.0)
::STMT
MATRIX:parsertemp539203,T,event
FLOAT:int620
LITERAL_FLOAT:1.0,2.0,1.5
/(^(/(*(parsertemp539203,int620),2.0),/(1.0,1.5)),/(-(max(T),min(T)),sum(event)))
::STMT
FLOAT:int263
LITERAL_FLOAT:0.0,2.0
INT:int475,parsertemp282730
>(rand(parsertemp282730,int475,int263,2.0),0.0)
::STMT
MATRIX:p,q,g,z
FLOAT:pq,float62,tau_1
+(+(*(*(float62,tau_1),pq),sum(*(z,q))),sum(*(g,p)))
::STMT
MATRIX:prob,pred
FLOAT:threshold
*(pred,>(prob,threshold))
::STMT
MATRIX:out,parsertemp2798
FLOAT:int94,int771,int10,int37
sum(*(*(>(out,int771),-(int94,parsertemp2798)),*(>(out,int37),-(int10,parsertemp2798))))
::STMT
MATRIX:Q,R
FLOAT:int517
LITERAL_FLOAT:2.0
+(rowSums(^(R,2.0)),t(rowSums(^(Q,int517))))
::STMT
FLOAT:float812,parsertemp382948,parsertemp382957,loss_init,parsertemp382950
/(-(loss_init,+(*(float812,parsertemp382948),*(parsertemp382950,parsertemp382957))),loss_init)
::STMT
MATRIX:n_corr,Y
FLOAT:int495
LITERAL_FLOAT:0.0,0.5
+(/(Y,+(rowSums(Y),==(n_corr,int495))),*(-(0.5,Y),==(rowSums(Y),0.0)))
::STMT
FLOAT:level
LITERAL_FLOAT:2.0
-(level,2.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0,2.0
/(/(1.0,^(linear_terms,2.0)),-(1.0,var_power))
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:2000.0
*(/(2000.0,cast.FLOAT(%*%(w_X,z_LS))),z_LS)
::STMT
MATRIX:X
/(colSums(X),nrow(X))
::STMT
MATRIX:parsertemp389300
LITERAL_FLOAT:1.0,2.0
+(exp(*(2.0,t(parsertemp389300))),1.0)
::STMT
LITERAL_FLOAT:5.0E-7
5.0E-7
::STMT
MATRIX:r
FLOAT:tolerance
LITERAL_FLOAT:2.0
*(sum(^(r,2.0)),^(tolerance,2.0))
::STMT
MATRIX:parsertemp42223,parsertemp42224,parsertemp42209
FLOAT:parsertemp42210,meanY
sum(*(t(*(parsertemp42223,parsertemp42224)),-(+(parsertemp42209,parsertemp42210),meanY)))
::STMT
MATRIX:2134_left,2134_right
LITERAL_FLOAT:0.0,2.0
+(/(^(sum(2134_left),2.0),+(nrow(2134_left),0.0)),/(^(sum(2134_right),2.0),+(nrow(2134_right),0.0)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0
-(i,1.0)
::STMT
MATRIX:Y,parsertemp2798,Xw
FLOAT:int178
LITERAL_FLOAT:0.0,1.0
*(*(>(-(int178,parsertemp2798),0.0),-(1.0,*(Y,Xw))),Y)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(500.0,1.0)))
::STMT
MATRIX:termination_bitmap,parsertemp222665
LITERAL_FLOAT:10.0
*(10.0,max(*(parsertemp222665,termination_bitmap)))
::STMT
MATRIX:U,V
LITERAL_FLOAT:2.0
+(sum(^(U,2.0)),sum(^(V,2.0)))
::STMT
MATRIX:instance,X,mask
*(-(X,instance),mask)
::STMT
MATRIX:X,parsertemp129018
LITERAL_FLOAT:1.0
+(*(max(parsertemp129018),-(ncol(X),1.0)),1.0)
::STMT
MATRIX:parsertemp220900,dY,parsertemp220899
FLOAT:lr,momentum
LITERAL_FLOAT:2.0
^(-(*(momentum,dY),*(lr,-(parsertemp220899,parsertemp220900))),2.0)
::STMT
MATRIX:parsertemp175066,scores,dprobs
*(dprobs,/(exp(-(scores,parsertemp175066)),rowSums(exp(scores))))
::STMT
MATRIX:solution,X
sum(*(-(X,solution),-(X,solution)))
::STMT
MATRIX:Q,lambda,V,X,parsertemp149253
*(V,+(%*%(t(X),-(Q,parsertemp149253)),*(lambda,V)))
::STMT
MATRIX:r,alpha,Hd
*(-(r,*(cast.FLOAT(alpha),Hd)),-(r,*(cast.FLOAT(alpha),Hd)))
::STMT
MATRIX:G,minDist
LITERAL_FLOAT:0.0
+(G,*(!=(G,0.0),minDist))
::STMT
MATRIX:parsertemp12846,F
FLOAT:W
LITERAL_FLOAT:2.0
/(^(-(F,/(parsertemp12846,W)),2.0),/(%*%(rowSums(F),colSums(F)),sum(F)))
::STMT
MATRIX:parsertemp409532,ctab,parsertemp409528
LITERAL_FLOAT:0.4
*(parsertemp409532,>(/(parsertemp409528,rowSums(ctab)),0.4))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
/(1.0,-(1.0,^(linear_terms,2.0)))
::STMT
MATRIX:w,g
FLOAT:alpha
abs(-(w,/(g,alpha)))
::STMT
MATRIX:Xtrain,Xtest,X,Y
-(+(sum(X),sum(Y)),+(sum(Xtrain),sum(Xtest)))
::STMT
MATRIX:parsertemp42200,R
FLOAT:int137,meanX
LITERAL_FLOAT:0.5
-(+(-(parsertemp42200,/(R,int137)),0.5),meanX)
::STMT
MATRIX:newbeta,lambda
LITERAL_FLOAT:2.0
cast.FLOAT(%*%(t(lambda),^(newbeta,2.0)))
::STMT
MATRIX:W4_rand
LITERAL_FLOAT:0.08681986202598489
*(0.08681986202598489,W4_rand)
::STMT
MATRIX:scale_X
cast.FLOAT(diag(scale_X))
::STMT
MATRIX:q,r
FLOAT:alpha
LITERAL_FLOAT:2.0
sum(^(+(r,*(alpha,q)),2.0))
::STMT
MATRIX:_sbcvar12,parsertemp13660
FLOAT:float545,44_meanX
LITERAL_FLOAT:999.0
t(*(/(_sbcvar12,999.0),-(+(parsertemp13660,float545),44_meanX)))
::STMT
MATRIX:2701_mask,2700_W,2726_dpred,parsertemp459177,2699_probs,2702_X
LITERAL_FLOAT:0.0,0.5
*(*(>(2702_X,0.0),/(2701_mask,0.5)),%*%(-(*(2726_dpred,2699_probs),*(2699_probs,parsertemp459177)),t(2700_W)))
::STMT
MATRIX:std,sts,rad
FLOAT:delta2
/(-(delta2,sts),+(cast.FLOAT(std),cast.FLOAT(rad)))
::STMT
MATRIX:w,out
LITERAL_FLOAT:0.5,0.001
*(0.001,+(*(0.5,cast.FLOAT(out)),*(0.5,cast.FLOAT(w))))
::STMT
MATRIX:A
FLOAT:parsertemp12882
LITERAL_FLOAT:1.0
/(*(parsertemp12882,nrow(A)),-(nrow(A),1.0))
::STMT
MATRIX:eVals,eVecs
FLOAT:int192
%*%(%*%(eVecs,diag(^(eVals,int192))),t(eVecs))
::STMT
MATRIX:log_det_chol
FLOAT:int840,int149
INT:int669,parsertemp436708
*(rand(int669,parsertemp436708,int149,int840),log_det_chol)
::STMT
MATRIX:b,H_inv
/(b,sqrt(diag(H_inv)))
::STMT
FLOAT:alpha
LITERAL_FLOAT:1.0
-(1.0,alpha)
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
t(rowSums(^(X,2.0)))
::STMT
MATRIX:X
FLOAT:lambda
LITERAL_FLOAT:2.0,0.5
*(*(0.5,lambda),sum(^(X,2.0)))
::STMT
MATRIX:X_Xd_exp_Xb_rev_agg,select,X_exp_Xb_rev_agg,D_r_rev,Xd_exp_Xb_rev_agg
LITERAL_FLOAT:2.0
-(/(%*%(select,X_Xd_exp_Xb_rev_agg),D_r_rev),/(*(X_exp_Xb_rev_agg,%*%(select,Xd_exp_Xb_rev_agg)),^(D_r_rev,2.0)))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:0.0,1.0
*(linear_terms,-(1.0,==(Y,0.0)))
::STMT
MATRIX:C,I
FLOAT:ss
+(%*%(t(C),C),*(I,ss))
::STMT
MATRIX:X
LITERAL_FLOAT:1.8378770664093453
*(ncol(X),1.8378770664093453)
::STMT
MATRIX:parsertemp31104,parsertemp31106
FLOAT:int180
LITERAL_FLOAT:1999.0,2.0
^(/(-(colSums(parsertemp31104),*(int180,parsertemp31106)),1999.0),2.0)
::STMT
LITERAL_FLOAT:-0.284496736
-0.284496736
::STMT
FLOAT:width
LITERAL_FLOAT:2.0
*(2.0,^(width,2.0))
::STMT
MATRIX:parsertemp560880,parsertemp560876,parsertemp560863,parsertemp560868
FLOAT:float715,float721,int346,int38
LITERAL_FLOAT:1.0,2.0
*(*(*(/(float715,parsertemp560868),+(float721,parsertemp560876)),-(*(int346,parsertemp560863),1.0)),exp(/(*(parsertemp560880,int38),2.0)))
::STMT
LITERAL_FLOAT:0.45
0.45
::STMT
MATRIX:COMPONENTS,id
-(==(id,cast.FLOAT(id)),cast.FLOAT(diag(diag(COMPONENTS))))
::STMT
MATRIX:parsertemp130875
LITERAL_FLOAT:1.0,4.0
-(+(*(max(parsertemp130875),4.0),1.0),1.0)
::STMT
FLOAT:int84,se_g1,int223,int467,int512,parsertemp113,wt
sqrt(/(*(*(int512,parsertemp113),^(se_g1,int84)),*(+(wt,int467),-(wt,int223))))
::STMT
MATRIX:gs
LITERAL_FLOAT:-0.5
*(-0.5,cast.FLOAT(gs))
::STMT
MATRIX:s,parsertemp44016,d
cast.FLOAT(%*%(t(-(s,parsertemp44016)),d))
::STMT
MATRIX:samples_vs_runs_map,X_samples_sq_norms,parsertemp222444,is_row_in_samples,parsertemp222440
LITERAL_FLOAT:2.0
*(is_row_in_samples,-(+(X_samples_sq_norms,%*%(samples_vs_runs_map,parsertemp222440)),*(2.0,rowSums(parsertemp222444))))
::STMT
MATRIX:X,parsertemp16892
FLOAT:int275
%*%(sqrt(rowSums(^(X,int275))),t(sqrt(rowSums(parsertemp16892))))
::STMT
MATRIX:eVals
LITERAL_FLOAT:-1.0
diag(^(eVals,-1.0))
::STMT
MATRIX:s,w,wnew,parsertemp44079
FLOAT:int330,C
LITERAL_FLOAT:0.5
+(*(0.5,%*%(t(wnew),+(w,s))),*(C,sum(*(parsertemp44079,int330))))
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
+(-(nrow(X),sum(>=(X,x))),1.0)
::STMT
MATRIX:parsertemp503368,B
LITERAL_FLOAT:-1.0,2.0
sum(^(*(%*%(parsertemp503368,B),-1.0),2.0))
::STMT
LITERAL_FLOAT:0.9
0.9
::STMT
MATRIX:g0_2,g0_1
FLOAT:tol
LITERAL_FLOAT:2.0
*(sum(^(+(g0_1,g0_2),2.0)),^(tol,2.0))
::STMT
FLOAT:wcss
LITERAL_FLOAT:1.0E-5
*(1.0E-5,wcss)
::STMT
MATRIX:WM,CVars,parsertemp31290,CFreqs,parsertemp31285
LITERAL_FLOAT:1.0
/(/(sum(*(CFreqs,parsertemp31285)),-(nrow(CFreqs),1.0)),/(sum(*(parsertemp31290,CVars)),-(sum(WM),nrow(CFreqs))))
::STMT
MATRIX:q,ssX_p,scale_X,shift_X,X
+(*(scale_X,%*%(t(X),%*%(X,ssX_p))),*(cast.FLOAT(q),shift_X))
::STMT
MATRIX:mean,X,parsertemp437224,weight
/(-(%*%(t(X),X),%*%(*(parsertemp437224,weight),mean)),sum(weight))
::STMT
MATRIX:parsertemp43635,w
sqrt(sum(*(+(w,parsertemp43635),+(w,parsertemp43635))))
::STMT
MATRIX:p_CG
FLOAT:parsertemp170148,int378,z,int271
LITERAL_FLOAT:0.5
*(0.5,/(-(*(z,int378),sqrt(parsertemp170148)),sum(^(p_CG,int271))))
::STMT
MATRIX:252_Y
FLOAT:252_X,int54,int127,parsertemp32925,int877,parsertemp32915,float189,parsertemp32934,float807
+(+(*(-(int877,parsertemp32915),cast.FLOAT(252_Y)),*(/(float807,252_X),cast.FLOAT(252_Y))),*(*(/(float189,252_X),-(int54,parsertemp32915)),+(*(parsertemp32925,int127),*(parsertemp32934,parsertemp32915))))
::STMT
LITERAL_FLOAT:2.29128784747792
2.29128784747792
::STMT
MATRIX:parsertemp146931,184_dtemp,parsertemp146929,184_unnorm_probs,parsertemp146936,outr2
%*%(t(outr2),-(*(*(parsertemp146929,parsertemp146931),/(184_unnorm_probs,parsertemp146936)),*(/(184_unnorm_probs,parsertemp146936),rowSums(184_dtemp))))
::STMT
MATRIX:252_Y,252_X
LITERAL_FLOAT:4.5
*(/(-(4.5,cast.FLOAT(252_X)),-(cast.FLOAT(252_X),cast.FLOAT(252_X))),cast.FLOAT(252_Y))
::STMT
MATRIX:parsertemp16755
LITERAL_FLOAT:2.0
^(2.0,cast.FLOAT(parsertemp16755))
::STMT
MATRIX:WM,CFreqs
-(sum(WM),nrow(CFreqs))
::STMT
MATRIX:IQR
LITERAL_FLOAT:1.5
*(1.5,IQR)
::STMT
MATRIX:sv,out
LITERAL_FLOAT:0.5
*(0.5,sum(*(*(sv,out),*(sv,out))))
::STMT
MATRIX:W1_rand,X,parsertemp394884,parsertemp394894
FLOAT:float244
LITERAL_FLOAT:0.08146881698903526
%*%(*(0.08146881698903526,W1_rand),t(/(-(X,parsertemp394884),+(parsertemp394894,float244))))
::STMT
MATRIX:u,parsertemp500604
FLOAT:alpha,tau
LITERAL_FLOAT:0.0
*(*(parsertemp500604,-(abs(u),/(tau,alpha))),>(-(abs(u),/(tau,alpha)),0.0))
::STMT
MATRIX:V,W,H,parsertemp10749
FLOAT:Eps
*(W,/(%*%(V,t(H)),+(%*%(W,parsertemp10749),Eps)))
::STMT
FLOAT:e,int622,mu,epochs
LITERAL_FLOAT:0.999
+(mu,/(-(0.999,mu),-(+(int622,epochs),e)))
::STMT
MATRIX:hubs
FLOAT:parsertemp30953
LITERAL_FLOAT:2.0
sum(^(-(/(hubs,parsertemp30953),hubs),2.0))
::STMT
MATRIX:_funvar2124,parsertemp437267,parsertemp437272
exp(-(+(_funvar2124,parsertemp437267),parsertemp437272))
::STMT
MATRIX:q_CG
FLOAT:alpha_CG
*(alpha_CG,cast.FLOAT(q_CG))
::STMT
FLOAT:n_features
LITERAL_FLOAT:1.0,2.0
/(*(n_features,+(n_features,1.0)),2.0)
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int496,int127,int944,int391
LITERAL_FLOAT:2.0,3352500.0,990000.0
/(^(+(/(posSampleVariances,int496),/(negSampleVariances,int127)),2.0),+(/(^(posSampleVariances,int391),990000.0),/(^(negSampleVariances,int944),3352500.0)))
::STMT
MATRIX:avg_X_cols,parsertemp1513
FLOAT:int956,n
LITERAL_FLOAT:1.0
/(-(t(colSums(parsertemp1513)),*(n,^(avg_X_cols,int956))),-(n,1.0))
::STMT
FLOAT:n_group_cols
LITERAL_FLOAT:1.0,3.0
-(+(3.0,n_group_cols),1.0)
::STMT
FLOAT:float725,float58
LITERAL_FLOAT:0.0,0.5
INT:int612,int943,int668,int29
*(0.5,%*%(t(rand(int943,int612,float725,float58)),rand(int29,int668,0.0,0.0)))
::STMT
FLOAT:deviance_nodisp
LITERAL_FLOAT:0.1,1.0E-6
*(1.0E-6,+(deviance_nodisp,0.1))
::STMT
MATRIX:tmp_Xw,Y,parsertemp2773,Xw
LITERAL_FLOAT:0.0,1.0
*(-(1.0,*(Y,+(Xw,parsertemp2773))),>(-(1.0,*(Y,tmp_Xw)),0.0))
::STMT
MATRIX:parsertemp410976,W,H,X
/(*(H,%*%(t(W),/(X,parsertemp410976))),t(colSums(W)))
::STMT
MATRIX:surv
LITERAL_FLOAT:1.0
sqrt(-(1.0,surv))
::STMT
MATRIX:parsertemp539203
LITERAL_FLOAT:-1.0,2.0,0.6666666666666666
^(/(*(parsertemp539203,-1.0),2.0),0.6666666666666666)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,253.0
-(+(i,253.0),1.0)
::STMT
MATRIX:r,c,F
LITERAL_FLOAT:2.0
^(-(F,/(%*%(r,c),sum(F))),2.0)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:50.0
+(rowSums(classFeatureCounts),50.0)
::STMT
MATRIX:parsertemp389219,X,permut
FLOAT:parsertemp389220,n
LITERAL_FLOAT:1.0E-17
/(-(%*%(permut,X),/(colSums(X),n)),+(sqrt(/(parsertemp389219,parsertemp389220)),1.0E-17))
::STMT
MATRIX:r,c,E,F
LITERAL_FLOAT:2.0
sum(/(^(-(F,E),2.0),/(%*%(r,c),sum(F))))
::STMT
MATRIX:W
FLOAT:parsertemp112,int710,parsertemp91
LITERAL_FLOAT:2.0,3.0,4.0,5.0
/(*(*(4.0,-(parsertemp112,int710)),^(sqrt(parsertemp91),2.0)),*(+(sum(W),5.0),-(sum(W),3.0)))
::STMT
MATRIX:classCounts
LITERAL_FLOAT:1000.0
/(classCounts,1000.0)
::STMT
MATRIX:P,I
LITERAL_FLOAT:1.0
&(I,<=(rowSums(P),1.0))
::STMT
FLOAT:beg
LITERAL_FLOAT:1.0,256.0
-(+(beg,256.0),1.0)
::STMT
MATRIX:parsertemp410977,W,H,parsertemp410974
t(/(*(H,%*%(parsertemp410974,parsertemp410977)),t(colSums(W))))
::STMT
MATRIX:ss,se,e
LITERAL_FLOAT:40.0
/(/(se,ss),/(sum(e),40.0))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
-(0.0,/(t(colSums(X)),nrow(X)))
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
*(/(-(x,X),-(X,X)),-(1.0,/(-(x,X),-(X,X))))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:105.0
+(rowSums(classFeatureCounts),105.0)
::STMT
MATRIX:m_iter_err_sum,m_err
+(colSums(m_err),m_iter_err_sum)
::STMT
MATRIX:w,out
FLOAT:int362,int565
LITERAL_FLOAT:0.5
+(*(0.5,sum(^(out,int362))),*(0.5,sum(^(w,int565))))
::STMT
MATRIX:M
LITERAL_FLOAT:2.0
<(rowSums(M),2.0)
::STMT
LITERAL_FLOAT:1.0,100.0
+(+(100.0,100.0),1.0)
::STMT
MATRIX:2663_X
LITERAL_FLOAT:1.0
*(1.0,ncol(2663_X))
::STMT
MATRIX:Ileft,_funvar2707
FLOAT:numI
*(/(rowSums(Ileft),numI),_funvar2707)
::STMT
MATRIX:parsertemp31276,CVars
FLOAT:int850,parsertemp31269,W,parsertemp31270
LITERAL_FLOAT:1.0
-(1.0,/(sum(*(parsertemp31276,CVars)),*(-(W,int850),/(parsertemp31269,parsertemp31270))))
::STMT
LITERAL_FLOAT:0.010328
0.010328
::STMT
MATRIX:parsertemp220863,parsertemp220864,Hdiff,beta
FLOAT:int935
LITERAL_FLOAT:2.0,1.0E20
*(*(*(2.0,>=(Hdiff,int935)),==(+(parsertemp220863,parsertemp220864),1.0E20)),beta)
::STMT
MATRIX:d,sb
LITERAL_FLOAT:2.0
*(2.0,sum(*(sb,d)))
::STMT
MATRIX:parsertemp31190,parsertemp31197
FLOAT:int867,int372
LITERAL_FLOAT:3.42951E11,2.0,3.37275E9
+(/(^(/(parsertemp31190,int372),2.0),3.42951E11),/(^(/(parsertemp31197,int867),2.0),3.37275E9))
::STMT
LITERAL_FLOAT:2.0,100.0
+(+(100.0,100.0),2.0)
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:0.0,-1.0
-(0.0,^(linear_terms,/(-1.0,link_power)))
::STMT
LITERAL_FLOAT:0.0
/(0.0,0.0)
::STMT
MATRIX:LT,Y,parsertemp149320
*(Y,-(LT,parsertemp149320))
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int113,int998
LITERAL_FLOAT:99.0,100.0
/(-(colSums(^(posSamples,int998)),*(100.0,^(posSampleMeans,int113))),99.0)
::STMT
MATRIX:cumLeftHist,parsertemp132494,leftHist,outBucket
%*%(==(outBucket,t(parsertemp132494)),-(cumLeftHist,leftHist))
::STMT
MATRIX:U
LITERAL_FLOAT:1.0E-6
*(1.0E-6,U)
::STMT
MATRIX:D,ZERODIAG
FLOAT:int802
LITERAL_FLOAT:1.0
sum(*(/(1.0,+(D,int802)),ZERODIAG))
::STMT
MATRIX:_sbcvar0
LITERAL_FLOAT:2000.0
/(_sbcvar0,2000.0)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0E-14
>(abs(-(X,round(X))),1.0E-14)
::STMT
MATRIX:X,Y
LITERAL_FLOAT:1.0
+(+(ncol(X),ncol(Y)),1.0)
::STMT
MATRIX:lambda,beta
*(cast.FLOAT(lambda),cast.FLOAT(beta))
::STMT
MATRIX:ss,se,e
LITERAL_FLOAT:20.0
/(/(se,ss),/(sum(e),20.0))
::STMT
MATRIX:parsertemp43632,X,y
LITERAL_FLOAT:0.0,2.0
INT:int440,int584
+(rand(int440,int584,0.0,0.0),*(2.0,%*%(t(X),*(parsertemp43632,y))))
::STMT
MATRIX:parsertemp477718,parsertemp477715,parsertemp477724,X,Y,parsertemp477733,K,parsertemp477730
FLOAT:x
LITERAL_FLOAT:1.0
+(*(-(*(K,parsertemp477724),-(Y,Y)),-(1.0,/(parsertemp477715,parsertemp477718))),*(+(*(parsertemp477730,parsertemp477733),-(Y,Y)),/(-(x,X),-(X,X))))
::STMT
MATRIX:R,dssm
FLOAT:2_n
/(2_n,-(R,dssm))
::STMT
MATRIX:n_risk_stratum,n_risk_i2j
FLOAT:I_i1i2
-(I_i1i2,/(n_risk_i2j,n_risk_stratum))
::STMT
MATRIX:parsertemp410978,W,H
t(/(*(H,t(parsertemp410978)),t(colSums(W))))
::STMT
FLOAT:parsertemp89,parsertemp88,parsertemp83,parsertemp84
LITERAL_FLOAT:2.0
^(sqrt(/(*(parsertemp83,parsertemp84),*(parsertemp88,parsertemp89))),2.0)
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0
<=(Y,0.0)
::STMT
MATRIX:parsertemp383173
FLOAT:reg,parsertemp383181,loss_init
/(-(loss_init,+(sum(parsertemp383173),*(reg,parsertemp383181))),loss_init)
::STMT
MATRIX:parsertemp437549,pred,parsertemp437666
t(colSums(==(*(parsertemp437666,parsertemp437549),pred)))
::STMT
MATRIX:R,parsertemp40219,parsertemp40216,parsertemp40225
FLOAT:level
/(+(R,rowSums(*(parsertemp40216,parsertemp40225))),-(R,rowSums(==(parsertemp40219,level))))
::STMT
MATRIX:termination_bitmap,parsertemp222665
max(*(parsertemp222665,termination_bitmap))
::STMT
MATRIX:features,beta_unscaled
FLOAT:intercept,parsertemp176418
LITERAL_FLOAT:3.0
+(sqrt(parsertemp176418),*(3.0,+(%*%(features,beta_unscaled),intercept)))
::STMT
MATRIX:id
diag(diag(==(id,cast.FLOAT(id))))
::STMT
MATRIX:parsertemp145796,parsertemp145794,y
/(sum(rowSums(*(parsertemp145794,parsertemp145796))),nrow(y))
::STMT
MATRIX:Xd,out
FLOAT:dd,step_sz,wd
/(-(+(wd,*(step_sz,dd)),sum(out)),+(dd,sum(Xd)))
::STMT
MATRIX:X
LITERAL_FLOAT:4.0
<=(X,4.0)
::STMT
MATRIX:X,y,logisticnew
LITERAL_FLOAT:1.0
%*%(t(X),*(-(logisticnew,1.0),y))
::STMT
MATRIX:classCounts
LITERAL_FLOAT:8000.0
/(classCounts,8000.0)
::STMT
MATRIX:parsertemp570381,parsertemp570372,parsertemp570376,parsertemp570377
LITERAL_FLOAT:0.5,-0.5
+(parsertemp570381,-(*(-0.5,parsertemp570372),*(0.5,%*%(parsertemp570376,parsertemp570377))))
::STMT
MATRIX:parsertemp31762,X2
FLOAT:minSup
LITERAL_FLOAT:0.0
&(>=(t(colSums(X2)),minSup),>(t(%*%(parsertemp31762,X2)),0.0))
::STMT
MATRIX:parsertemp220896,W,Y,Z
FLOAT:lr
*(lr,-(*(Y,rowSums(W)),%*%(*(parsertemp220896,Z),Y)))
::STMT
MATRIX:X
FLOAT:N
t(/(colSums(X),N))
::STMT
MATRIX:classesUnBalanced,classesBalanced
cast.FLOAT(-(classesUnBalanced,classesBalanced))
::STMT
MATRIX:posSampleMeans
LITERAL_FLOAT:2.0,7000.0
*(7000.0,^(posSampleMeans,2.0))
::STMT
MATRIX:r,c,E,F
LITERAL_FLOAT:2.0
sum(/(^(-(F,E),2.0),/(%*%(r,c),sum(F))))
::STMT
MATRIX:scale_X,X,z,beta
*(*(cast.FLOAT(diag(scale_X)),+(cast.FLOAT(beta),cast.FLOAT(z))),X)
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0
-(0.0,%*%(-(0.0,t(X)),y))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:1.0
^(linear_terms,/(1.0,link_power))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:-1.0
^(linear_terms,/(-1.0,link_power))
::STMT
MATRIX:V1,parsertemp539081
FLOAT:range,I_i1i2
LITERAL_FLOAT:2.0
/(sum(*(V1,-(I_i1i2,parsertemp539081))),^(range,2.0))
::STMT
MATRIX:surv
LITERAL_FLOAT:0.5
<=(surv,0.5)
::STMT
MATRIX:parsertemp410070,r
FLOAT:r2
/(cast.FLOAT(%*%(t(r),+(r,parsertemp410070))),r2)
::STMT
MATRIX:W
FLOAT:parsertemp65,parsertemp66
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),1.0),-(sum(W),2.0)),^(sqrt(/(parsertemp65,parsertemp66)),3.0))
::STMT
MATRIX:C,Xm,parsertemp265701,XtZ
FLOAT:ZtZ_sum
sum(%*%(%*%(Xm,%*%(C,parsertemp265701)),t(/(XtZ,ZtZ_sum))))
::STMT
MATRIX:R,dsep,dssm
FLOAT:2_eAvg
LITERAL_FLOAT:1.0
-(/(/(+(R,dsep),-(R,dssm)),2_eAvg),1.0)
::STMT
MATRIX:pred
LITERAL_FLOAT:1.0,1.0E-10
/(1.0,+(pred,1.0E-10))
::STMT
MATRIX:t_gp,parsertemp171332,pt_gp,parsertemp171331,Y,the_gauss_exp,parsertemp171327,parsertemp171316
LITERAL_FLOAT:2.0,0.25,0.3989422804014327
/(*(0.3989422804014327,+(-(Y,parsertemp171327),*(parsertemp171331,parsertemp171332))),*(*(0.25,*(t_gp,parsertemp171316)),-(2.0,*(the_gauss_exp,pt_gp))))
::STMT
MATRIX:p,r,parsertemp503395,Z
FLOAT:norm_r2
+(r,*(/(norm_r2,cast.FLOAT(parsertemp503395)),%*%(Z,p)))
::STMT
MATRIX:Xtest_dists
LITERAL_FLOAT:1.0
<=(Xtest_dists,1.0)
::STMT
MATRIX:parsertemp43626
LITERAL_FLOAT:-1.0
*(-1.0,sum(parsertemp43626))
::STMT
MATRIX:parsertemp415524,y
FLOAT:intercept
LITERAL_FLOAT:2.0
sum(^(-(y,+(parsertemp415524,intercept)),2.0))
::STMT
MATRIX:parsertemp279509
FLOAT:int374
LITERAL_FLOAT:1000.0,100.0
*(/(sum(==(parsertemp279509,int374)),1000.0),100.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
rowSums(!=(X,0.0))
::STMT
MATRIX:col_nonzeros,U,parsertemp382849,V,parsertemp382852
LITERAL_FLOAT:1.0E-6
+(t(%*%(t(U),*(parsertemp382849,parsertemp382852))),*(*(1.0E-6,V),col_nonzeros))
::STMT
MATRIX:R,parsertemp72406
-(%*%(t(R),R),diag(parsertemp72406))
::STMT
FLOAT:log_ten,parsertemp169812
LITERAL_FLOAT:0.5
round(-(/(parsertemp169812,log_ten),0.5))
::STMT
MATRIX:W,X,H
FLOAT:eps
%*%(t(W),/(X,+(%*%(W,H),eps)))
::STMT
MATRIX:is_LT_infinite,Y_prob,Y,parsertemp171293,flip_pos
rowSums(*(*(Y,%*%(Y_prob,flip_pos)),+(*(Y_prob,parsertemp171293),is_LT_infinite)))
::STMT
MATRIX:prevTK2,X2
colSums(==(%*%(X2,t(prevTK2)),t(rowSums(prevTK2))))
::STMT
MATRIX:lambda,p_CG,shift_X,parsertemp170070,temp_CG
*(p_CG,+(+(*(lambda,p_CG),%*%(parsertemp170070,temp_CG)),%*%(shift_X,temp_CG)))
::STMT
LITERAL_FLOAT:2001.0
sqrt(2001.0)
::STMT
MATRIX:W4_rand
LITERAL_FLOAT:0.08709382882250233
*(0.08709382882250233,W4_rand)
::STMT
MATRIX:parsertemp414371,scale_X
LITERAL_FLOAT:0.0,200.0
*(-(0.0,/(t(parsertemp414371),200.0)),scale_X)
::STMT
MATRIX:r,c,_sbcvar78
LITERAL_FLOAT:2.0,10000.0
^(-(_sbcvar78,/(%*%(r,c),10000.0)),2.0)
::STMT
MATRIX:linear_terms
FLOAT:var_power,float434
LITERAL_FLOAT:1.0
/(exp(*(linear_terms,-(float434,var_power))),-(1.0,var_power))
::STMT
MATRIX:samples_vs_runs_map,centroid_placer,X_samples
*(X_samples,%*%(samples_vs_runs_map,%*%(centroid_placer,X_samples)))
::STMT
FLOAT:int463,parsertemp40812,m2
LITERAL_FLOAT:3.0
^(sqrt(*(/(int463,parsertemp40812),m2)),3.0)
::STMT
MATRIX:X_nonzero_ind
LITERAL_FLOAT:0.0
sum(!=(t(colSums(X_nonzero_ind)),0.0))
::STMT
MATRIX:CMeans,CFreqs
FLOAT:parsertemp31266,W
LITERAL_FLOAT:2.0
*(CFreqs,^(-(CMeans,/(parsertemp31266,W)),2.0))
::STMT
MATRIX:parsertemp386449,corePts
FLOAT:int440
LITERAL_FLOAT:0.0,1.0
&(==(t(corePts),0.0),>(colSums(>(parsertemp386449,int440)),1.0))
::STMT
MATRIX:output,output1
LITERAL_FLOAT:0.1
>=(abs(-(output,output1)),0.1)
::STMT
MATRIX:codes,codebook
*(ncol(codes),ncol(codebook))
::STMT
MATRIX:p_LS,parsertemp170551,X
FLOAT:lambda_LS
*(p_LS,+(%*%(%*%(parsertemp170551,X),p_LS),*(lambda_LS,p_LS)))
::STMT
FLOAT:parsertemp13703
LITERAL_FLOAT:1.0,1000.0
*(-(1000.0,1.0),/(*(parsertemp13703,1000.0),-(1000.0,1.0)))
::STMT
MATRIX:xs
FLOAT:252_x
LITERAL_FLOAT:1.0,10.0
+(-(10.0,sum(>=(xs,252_x))),1.0)
::STMT
MATRIX:parsertemp1510,scale_X
FLOAT:n
LITERAL_FLOAT:-1.0
*(*(/(t(parsertemp1510),n),-1.0),scale_X)
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int842,int402,int569,int812
LITERAL_FLOAT:2.0,3352500.0,990000.0
/(^(+(/(posSampleVariances,int569),/(negSampleVariances,int842)),2.0),+(/(^(posSampleVariances,int402),990000.0),/(^(negSampleVariances,int812),3352500.0)))
::STMT
LITERAL_FLOAT:0.189269
0.189269
::STMT
FLOAT:k,kmax,start_stepsize
LITERAL_FLOAT:1.0
*(-(1.0,/(k,kmax)),start_stepsize)
::STMT
MATRIX:p_CG,z
FLOAT:trust_delta_sq,pp_CG
-(*(cast.FLOAT(%*%(p_CG,z)),cast.FLOAT(%*%(p_CG,z))),*(pp_CG,-(cast.FLOAT(z),trust_delta_sq)))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,1048.0
+(-(1048.0,idx),1.0)
::STMT
LITERAL_FLOAT:0.0,0.025
INT:parsertemp410939,rnk
rand(parsertemp410939,rnk,0.0,0.025)
::STMT
MATRIX:P,parsertemp220844,ZERODIAG,beta
LITERAL_FLOAT:1.0E-12
/(*(exp(*(parsertemp220844,beta)),ZERODIAG),+(rowSums(*(P,ZERODIAG)),1.0E-12))
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0
t(-(0.0,%*%(t(X),y)))
::STMT
MATRIX:g0_1,parsertemp410117
t(+(g0_1,t(colSums(parsertemp410117))))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
+(length(A),1.0)
::STMT
MATRIX:252_Y,252_X
FLOAT:252_X,252_K,int803
LITERAL_FLOAT:4.5
*(+(*(-(int803,252_K),-(252_X,252_X)),-(cast.FLOAT(252_Y),cast.FLOAT(252_Y))),/(-(4.5,cast.FLOAT(252_X)),-(cast.FLOAT(252_X),cast.FLOAT(252_X))))
::STMT
FLOAT:approx_sample_size
LITERAL_FLOAT:10.0
round(*(10.0,sqrt(approx_sample_size)))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:-0.0
*(^(linear_terms,-0.0),-(Y,linear_terms))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:-2.0
*(^(linear_terms,-2.0),-(Y,linear_terms))
::STMT
MATRIX:parsertemp220863,parsertemp220864,H,betamax,Hneg,beta,Hpos
FLOAT:INF,logU
LITERAL_FLOAT:0.0
*(*(>=(-(H,logU),0.0),!=(+(parsertemp220863,parsertemp220864),INF)),+(beta,+(*(Hpos,betamax),*(Hneg,beta))))
::STMT
MATRIX:w,ssX_p_CG,X
%*%(t(X),*(w,%*%(X,ssX_p_CG)))
::STMT
FLOAT:j
LITERAL_FLOAT:1.0,3.0
+(-(3.0,j),1.0)
::STMT
MATRIX:parsertemp400674,W4_rand,parsertemp400677
LITERAL_FLOAT:0.08720414403938946
t(%*%(*(0.08720414403938946,W4_rand),t(/(parsertemp400674,parsertemp400677))))
::STMT
MATRIX:parsertemp496901
FLOAT:std
*(cast.FLOAT(parsertemp496901),std)
::STMT
FLOAT:cmLabels
LITERAL_FLOAT:1.000100010001
sqrt(*(cmLabels,1.000100010001))
::STMT
MATRIX:parsertemp31403,classFeatureCounts
LITERAL_FLOAT:105.0,1.0
%*%(+(rowSums(classFeatureCounts),*(105.0,1.0)),parsertemp31403)
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
*(/(-(x,X),-(X,X)),-(1.0,/(-(x,X),-(X,X))))
::STMT
MATRIX:X,Y
FLOAT:x
*(/(-(x,cast.FLOAT(X)),-(cast.FLOAT(X),cast.FLOAT(X))),cast.FLOAT(Y))
::STMT
MATRIX:lambda,parsertemp170067,parsertemp170065,p_CG,shift_X,w,parsertemp170066,X,parsertemp170060
+(+(*(lambda,p_CG),*(cast.FLOAT(parsertemp170060),%*%(parsertemp170065,parsertemp170067))),*(cast.FLOAT(shift_X),%*%(t(X),*(w,parsertemp170066))))
::STMT
MATRIX:parsertemp175076,parsertemp175080,R1
abs(-(R1,/(exp(parsertemp175076),rowSums(parsertemp175080))))
::STMT
MATRIX:parsertemp437190,resp,X,weight
LITERAL_FLOAT:2.22E-16
/(*(/(%*%(parsertemp437190,X),t(weight)),%*%(t(resp),X)),t(+(colSums(resp),2.22E-16)))
::STMT
MATRIX:upd_W1,X_batch,W1_grad
FLOAT:mu,step
-(*(mu,upd_W1),*(/(step,nrow(X_batch)),W1_grad))
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,64.0
-(n,-(+(i,64.0),1.0))
::STMT
MATRIX:simplex
/(-(rowSums(simplex),simplex),nrow(simplex))
::STMT
LITERAL_FLOAT:-0.05,0.05
INT:parsertemp411077,rnk
rand(parsertemp411077,rnk,-0.05,0.05)
::STMT
MATRIX:oldE
FLOAT:parsertemp32107
/(sum(oldE),parsertemp32107)
::STMT
FLOAT:norm_Grad_initial
LITERAL_FLOAT:1.0E-8
*(1.0E-8,norm_Grad_initial)
::STMT
MATRIX:parsertemp414375,parsertemp414377
FLOAT:int880
LITERAL_FLOAT:0.0,199.0
<=(/(-(t(parsertemp414375),*(int880,parsertemp414377)),199.0),0.0)
::STMT
MATRIX:R,parsertemp40216,parsertemp40226
FLOAT:eAvg
/(/(+(R,rowSums(parsertemp40226)),+(R,rowSums(parsertemp40216))),eAvg)
::STMT
FLOAT:high,low
LITERAL_FLOAT:2.0
/(+(low,high),2.0)
::STMT
MATRIX:45_CFreqs
LITERAL_FLOAT:1000.0
-(1000.0,nrow(45_CFreqs))
::STMT
LITERAL_FLOAT:0.128920512778062
0.128920512778062
::STMT
MATRIX:X
FLOAT:int242,n
-(/(colSums(^(X,int242)),n),*(/(colSums(X),n),/(colSums(X),n)))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),50.0))
::STMT
MATRIX:parsertemp43631,parsertemp43633,w
LITERAL_FLOAT:2.0
*(+(w,*(2.0,%*%(parsertemp43631,parsertemp43633))),+(w,*(2.0,%*%(parsertemp43631,parsertemp43633))))
::STMT
MATRIX:Y,Xd,out
FLOAT:dd,step_sz,wd
-(+(wd,*(step_sz,dd)),sum(*(*(out,Y),Xd)))
::STMT
MATRIX:Y_counts,means,parsertemp560512,parsertemp560516
LITERAL_FLOAT:2.0
*(Y_counts,-(rowSums(*(means,parsertemp560516)),^(rowSums(parsertemp560512),2.0)))
::STMT
MATRIX:parsertemp500608,parsertemp500604,parsertemp500605,w
FLOAT:lambda
LITERAL_FLOAT:0.0
-(*(*(parsertemp500604,-(parsertemp500605,lambda)),>(-(parsertemp500608,lambda),0.0)),w)
::STMT
MATRIX:X,y,logisticnew
FLOAT:C,int545
*(C,%*%(t(X),*(-(logisticnew,int545),y)))
::STMT
MATRIX:rowSums_X_sq
max(sqrt(rowSums_X_sq))
::STMT
MATRIX:Y,parsertemp171319
FLOAT:float554
LITERAL_FLOAT:0.15915494309189535
*(*(exp(/(parsertemp171319,float554)),0.15915494309189535),rowSums(Y))
::STMT
MATRIX:mn,mx
-(mx,mn)
::STMT
MATRIX:y_corr,parsertemp171089,parsertemp171084,parsertemp171095
FLOAT:float558,float534,float130
LITERAL_FLOAT:0.0,1.0,2.0
*(+(-(0.0,sqrt(parsertemp171084)),/(+(float558,parsertemp171089),+(float130,parsertemp171095))),-(1.0,*(2.0,>(y_corr,float534))))
::STMT
MATRIX:Y
LITERAL_FLOAT:2.0
^(rowSums(Y),2.0)
::STMT
MATRIX:parsertemp500607,w,parsertemp500610,wnew
cast.FLOAT(%*%(t(-(wnew,w)),-(*(parsertemp500607,parsertemp500610),w)))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:105.0,1.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),105.0))
::STMT
FLOAT:x
LITERAL_FLOAT:1.0,-1.0
+(1.0,exp(*(x,-1.0)))
::STMT
LITERAL_FLOAT:1.0,2000.0
/(2000.0,-(2000.0,1.0))
::STMT
MATRIX:curr_rows_vector
LITERAL_FLOAT:0.0
sum(>(curr_rows_vector,0.0))
::STMT
MATRIX:parsertemp31189,parsertemp31187
LITERAL_FLOAT:3.42951E11,2.0,6999.0
/(^(/(-(parsertemp31187,parsertemp31189),6999.0),2.0),3.42951E11)
::STMT
MATRIX:R,dssp,dssm
FLOAT:5_n
LITERAL_FLOAT:1.0
-(/(5_n,-(+(R,dssp),dssm)),1.0)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),500.0))
::STMT
MATRIX:parsertemp555744,target
/(sum(rowSums(abs(parsertemp555744))),nrow(target))
::STMT
MATRIX:parsertemp129125,groupIndex
-(*(groupIndex,max(parsertemp129125)),max(parsertemp129125))
::STMT
LITERAL_FLOAT:1.0,6.0,2003.0
*(*(6.0,2003.0),-(2003.0,1.0))
::STMT
MATRIX:M2,parsertemp553121
%*%(rowSums(*(M2,M2)),parsertemp553121)
::STMT
MATRIX:s,d
FLOAT:parsertemp44015
%*%(t(-(s,*(parsertemp44015,d))),d)
::STMT
FLOAT:link_power
LITERAL_FLOAT:2.0
/(2.0,link_power)
::STMT
FLOAT:link_power
LITERAL_FLOAT:0.0
/(0.0,link_power)
::STMT
MATRIX:Y
FLOAT:check_max,check_min
LITERAL_FLOAT:2.0
-(*(/(2.0,-(check_max,check_min)),Y),/(+(check_min,check_max),-(check_max,check_min)))
::STMT
LITERAL_FLOAT:1.8
1.8
::STMT
FLOAT:parsertemp40813,m2,mu
LITERAL_FLOAT:5.0
+(mu,*(5.0,sqrt(*(parsertemp40813,m2))))
::STMT
MATRIX:Y,2212_fp
/(2212_fp,-(nrow(Y),sum(Y)))
::STMT
MATRIX:R,dssp,dsep,dssm,dsem
FLOAT:5_eAvg
/(/(-(+(R,dsep),dsem),-(+(R,dssp),dssm)),5_eAvg)
::STMT
MATRIX:parsertemp31188,parsertemp31186
FLOAT:int452
LITERAL_FLOAT:2.0,6999.0
^(/(-(colSums(parsertemp31186),*(int452,parsertemp31188)),6999.0),2.0)
::STMT
MATRIX:scale_X,shift_X,parsertemp274137,parsertemp274138,Grad
LITERAL_FLOAT:2.0
^(+(%*%(diag(scale_X),%*%(parsertemp274137,parsertemp274138)),%*%(shift_X,Grad)),2.0)
::STMT
MATRIX:csgaps,csmask
>(csgaps,csmask)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
/(exp(linear_terms),+(1.0,exp(linear_terms)))
::STMT
MATRIX:ctab,parsertemp409528
LITERAL_FLOAT:0.4
>(/(parsertemp409528,rowSums(ctab)),0.4)
::STMT
MATRIX:y_hat,B,parsertemp503774
LITERAL_FLOAT:2.0
sum(^(-(-(B,parsertemp503774),y_hat),2.0))
::STMT
MATRIX:P12,map
LITERAL_FLOAT:0.0
!=(%*%(map,P12),0.0)
::STMT
FLOAT:run_index
LITERAL_FLOAT:24.0,1.0
*(24.0,-(run_index,1.0))
::STMT
MATRIX:parsertemp31029,parsertemp31031
FLOAT:int341
LITERAL_FLOAT:1.0,150.0
/(/(-(colSums(parsertemp31029),*(int341,parsertemp31031)),-(150.0,1.0)),150.0)
::STMT
MATRIX:B,parsertemp410245,X_t
LITERAL_FLOAT:-1.0,2.0
/(*(parsertemp410245,-1.0),*(2.0,exp(%*%(X_t,B))))
::STMT
MATRIX:surv,parsertemp538706
*(sqrt(parsertemp538706),surv)
::STMT
MATRIX:LHSthreshold
LITERAL_FLOAT:1.0
sum(>(LHSthreshold,1.0))
::STMT
MATRIX:parsertemp477718,parsertemp477728,t,parsertemp477715,parsertemp477737,parsertemp477725,X,parsertemp477734
FLOAT:int376,x
LITERAL_FLOAT:1.0
*(*(/(-(x,X),-(X,X)),-(1.0,/(parsertemp477715,parsertemp477718))),+(*(-(parsertemp477725,parsertemp477728),-(int376,t)),*(+(parsertemp477734,parsertemp477737),/(parsertemp477715,parsertemp477718))))
::STMT
FLOAT:s,num_groups
LITERAL_FLOAT:1.0,7.0
*(*(-(s,1.0),num_groups),7.0)
::STMT
MATRIX:X
FLOAT:val
!=(X,val)
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:-2.0,0.001308
*(sqrt(*(-2.0,parsertemp171083)),0.001308)
::STMT
MATRIX:Y,linear_terms,is_y_0
FLOAT:int410
LITERAL_FLOAT:0.0
/(+(Y,==(Y,0.0)),+(*(linear_terms,-(int410,is_y_0)),==(Y,0.0)))
::STMT
MATRIX:Y_counts,Y
-(Y,%*%(Y_counts,/(colSums(Y),sum(Y_counts))))
::STMT
MATRIX:linear_terms,Y
FLOAT:int829,link_power,parsertemp286300
/(*(^(linear_terms,-(parsertemp286300,int829)),-(Y,^(linear_terms,parsertemp286300))),link_power)
::STMT
MATRIX:out,parsertemp2798
FLOAT:int733,int943
LITERAL_FLOAT:2.0
sum(^(*(>(out,int733),-(int943,parsertemp2798)),2.0))
::STMT
MATRIX:R,dssm
FLOAT:2_n,2_alpha
LITERAL_FLOAT:1.0
*(-(1.0,2_alpha),-(/(2_n,-(R,dssm)),1.0))
::STMT
MATRIX:parsertemp149248,parsertemp150463,P_1K
*(P_1K,%*%(rowSums(*(P_1K,parsertemp149248)),parsertemp150463))
::STMT
FLOAT:g
LITERAL_FLOAT:1.0,2.0
+(*(-(g,1.0),2.0),2.0)
::STMT
MATRIX:p,V
LITERAL_FLOAT:1.0E-8
+(%*%(t(V),%*%(V,p)),*(1.0E-8,p))
::STMT
MATRIX:posSamples
LITERAL_FLOAT:2.0
colSums(^(posSamples,2.0))
::STMT
MATRIX:parsertemp175066,scores,parsertemp175069,unnorm_probs,dprobs
*(/(exp(-(scores,parsertemp175066)),rowSums(exp(scores))),rowSums(*(dprobs,/(unnorm_probs,parsertemp175069))))
::STMT
MATRIX:F
%*%(rowSums(F),colSums(F))
::STMT
FLOAT:42_m2X
LITERAL_FLOAT:1.0,1000.0
*(42_m2X,/(1000.0,-(1000.0,1.0)))
::STMT
MATRIX:252_Y
FLOAT:252_X,float125,float67
LITERAL_FLOAT:1.0
+(*(-(1.0,/(float67,252_X)),cast.FLOAT(252_Y)),*(/(-(float125,252_X),-(252_X,252_X)),cast.FLOAT(252_Y)))
::STMT
MATRIX:CVars,CFreqs
FLOAT:float426,int601,int956,parsertemp31330,int591
LITERAL_FLOAT:1.0,10000.0
/(sum(*(-(CFreqs,int601),CVars)),*(-(10000.0,1.0),/(*(parsertemp31330,int956),-(int591,float426))))
::STMT
MATRIX:parsertemp171315,t_gp,parsertemp171320,parsertemp171307,parsertemp171316
FLOAT:float678,float19
LITERAL_FLOAT:2.0,0.25
*(*(0.25,*(/(float678,parsertemp171307),+(float19,parsertemp171315))),-(2.0,*(exp(parsertemp171320),*(t_gp,parsertemp171316))))
::STMT
MATRIX:X,parsertemp115855
FLOAT:int61,n
LITERAL_FLOAT:2.0
-(t(colSums(^(X,int61))),*(nrow(X),^(/(parsertemp115855,n),2.0)))
::STMT
MATRIX:out2,parsertemp146942,184_dscores,maskd1,W2
FLOAT:p,int969
*(/(maskd1,p),%*%(*(>(out2,int969),%*%(184_dscores,parsertemp146942)),t(W2)))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
exp(*(linear_terms,-(1.0,var_power)))
::STMT
FLOAT:g
LITERAL_FLOAT:1.0,2.0
+(*(-(g,1.0),2.0),1.0)
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int593,int652,int575,int849
LITERAL_FLOAT:7.996E9,2.0,3.37275E9
/(^(+(/(posSampleVariances,int652),/(negSampleVariances,int849)),2.0),+(/(^(posSampleVariances,int593),7.996E9),/(^(negSampleVariances,int575),3.37275E9)))
::STMT
MATRIX:parsertemp410245,parsertemp410248
FLOAT:int577,float40
LITERAL_FLOAT:1.0,1.5
min(^(/(*(parsertemp410245,int577),*(float40,parsertemp410248)),/(1.0,1.5)))
::STMT
MATRIX:parsertemp2832
==(round(parsertemp2832),min(round(parsertemp2832)))
::STMT
MATRIX:C,Xm,parsertemp265702
sum(%*%(%*%(%*%(Xm,parsertemp265702),t(C)),t(Xm)))
::STMT
MATRIX:parsertemp386437,neighbors
FLOAT:eps
LITERAL_FLOAT:0.0
*(<=(-(neighbors,diag(parsertemp386437)),eps),<(0.0,-(neighbors,diag(parsertemp386437))))
::STMT
MATRIX:neighbors
FLOAT:eps,int625
LITERAL_FLOAT:1.0
+(rowSums(*(<=(neighbors,eps),<(int625,neighbors))),1.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0,1.0
-(1.0,exp(-(0.0,exp(finite_linear_terms))))
::STMT
MATRIX:W
FLOAT:parsertemp65,parsertemp66
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),1.0),-(sum(W),2.0)),^(sqrt(/(parsertemp65,parsertemp66)),3.0))
::STMT
MATRIX:parsertemp42200,R
FLOAT:int779,meanX
LITERAL_FLOAT:1.0,2.0
-(+(-(parsertemp42200,/(R,int779)),/(1.0,2.0)),meanX)
::STMT
MATRIX:V,parsertemp10742,H,parsertemp10738
FLOAT:Eps
t(*(H,/(%*%(parsertemp10738,V),+(parsertemp10742,Eps))))
::STMT
MATRIX:r_LS,parsertemp285848
LITERAL_FLOAT:0.0
-(0.0,cast.FLOAT(%*%(t(r_LS),t(parsertemp285848))))
::STMT
MATRIX:X,parsertemp115854
LITERAL_FLOAT:2.0
*($1:nrow(X),^(/(t(parsertemp115854),$1),2.0))
::STMT
MATRIX:W,X,parsertemp411199,parsertemp411201
LITERAL_FLOAT:1.0E-8
/(X,+(%*%(W,/(parsertemp411199,parsertemp411201)),1.0E-8))
::STMT
FLOAT:parsertemp42302,parsertemp42306
LITERAL_FLOAT:1.000100010001
*(sqrt(*(parsertemp42302,1.000100010001)),sqrt(*(parsertemp42306,1.000100010001)))
::STMT
MATRIX:p_CG
FLOAT:parsertemp285794,parsertemp285796
LITERAL_FLOAT:-1.0
/(+(*(cast.FLOAT(p_CG),-1.0),sqrt(-(parsertemp285794,parsertemp285796))),cast.FLOAT(%*%(t(p_CG),p_CG)))
::STMT
MATRIX:cdf_min_distances,threshold_matrix
LITERAL_FLOAT:1.0
+(t(colSums(<(cdf_min_distances,threshold_matrix))),1.0)
::STMT
FLOAT:dimensions
LITERAL_FLOAT:1.0,2.0
+(^(2.0,dimensions),1.0)
::STMT
FLOAT:m2Y,sigmaX,W,parsertemp26583
*(sigmaX,sqrt(*(m2Y,/(W,parsertemp26583))))
::STMT
MATRIX:CVars,CFreqs
FLOAT:int381
LITERAL_FLOAT:10000.0
/(sum(*(-(CFreqs,int381),CVars)),-(10000.0,nrow(CFreqs)))
::STMT
MATRIX:R,dssp,dssm
FLOAT:5_n
/(5_n,-(+(R,dssp),dssm))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
+(rowSums(classFeatureCounts),*(50.0,1.0))
::STMT
MATRIX:parsertemp410978,W,H,parsertemp410980
FLOAT:eps
+(%*%(W,/(*(H,parsertemp410978),t(parsertemp410980))),eps)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0,2.0
/(/(1.0,^(linear_terms,2.0)),-(2.0,var_power))
::STMT
MATRIX:LT,Y,parsertemp149320,parsertemp150469
*(Y,-(LT,%*%(parsertemp149320,parsertemp150469)))
::STMT
LITERAL_FLOAT:0.6
0.6
::STMT
MATRIX:C,Xm,parsertemp265701
t(%*%(Xm,%*%(C,parsertemp265701)))
::STMT
MATRIX:parsertemp42190,X
LITERAL_FLOAT:1.0,2.0
+(-(parsertemp42190,/(X,2.0)),/(1.0,2.0))
::STMT
LITERAL_FLOAT:-1.0E30
-1.0E30
::STMT
LITERAL_FLOAT:1.0E30
1.0E30
::STMT
MATRIX:prec_chol,mu
LITERAL_FLOAT:2.0
*(^(mu,2.0),^(prec_chol,2.0))
::STMT
LITERAL_FLOAT:0.85
0.85
::STMT
MATRIX:X,Y
FLOAT:x
*(/(-(x,X),-(X,X)),Y)
::STMT
LITERAL_FLOAT:0.3
0.3
::STMT
MATRIX:p,V
%*%(V,p)
::STMT
MATRIX:dY,g
FLOAT:lr,momentum
LITERAL_FLOAT:2.0
sum(^(-(*(momentum,dY),*(lr,g)),2.0))
::STMT
MATRIX:ncCnts,maxsc
FLOAT:parsertemp31781
LITERAL_FLOAT:0.0
|(>(ncCnts,0.0),>(maxsc,parsertemp31781))
::STMT
MATRIX:current_node
FLOAT:cur_node_index
LITERAL_FLOAT:1.0
+(+(cur_node_index,cast.FLOAT(current_node)),1.0)
::STMT
MATRIX:_sbcvar1708
LITERAL_FLOAT:45.0
+(45.0,nrow(_sbcvar1708))
::STMT
LITERAL_FLOAT:0.08146881698903526
0.08146881698903526
::STMT
MATRIX:cumLeftHist,parsertemp132495,parsertemp132506,leftHist,outBucket
LITERAL_FLOAT:1.0
+(+(%*%(==(outBucket,parsertemp132495),-(cumLeftHist,leftHist)),parsertemp132506),1.0)
::STMT
LITERAL_FLOAT:0.30000000000000004
0.30000000000000004
::STMT
MATRIX:s,d,alpha
FLOAT:parsertemp44015
%*%(t(-(s,*(parsertemp44015,d))),-(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:C,Xm,tmp,parsertemp265701
/(%*%(t(Xm),%*%(Xm,%*%(C,parsertemp265701))),sum(tmp))
::STMT
MATRIX:logistic,X,y
FLOAT:int215
LITERAL_FLOAT:2.0
*(2.0,%*%(t(X),*(-(logistic,int215),y)))
::STMT
MATRIX:q_LS,p_LS,parsertemp170551,X
FLOAT:norm_r2_LS,lambda_LS
*(/(norm_r2_LS,sum(*(p_LS,q_LS))),+(%*%(%*%(parsertemp170551,X),p_LS),*(lambda_LS,p_LS)))
::STMT
MATRIX:shift_X,parsertemp116007
LITERAL_FLOAT:2.0,9.999999999999998E-15
*(sum(^(+(parsertemp116007,shift_X),2.0)),9.999999999999998E-15)
::STMT
MATRIX:parsertemp10744,W,H
FLOAT:Eps
+(%*%(W,%*%(*(H,parsertemp10744),t(H))),Eps)
::STMT
MATRIX:parsertemp170277
LITERAL_FLOAT:3.141592653589793,0.5
+(0.5,/(parsertemp170277,3.141592653589793))
::STMT
MATRIX:ts
FLOAT:q
+(-(q,%*%(ts,ts)),%*%(ts,ts))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0,1.0E7
*(==(+(1.0E7,exp(linear_terms)),1.0E7),-(1.0,/(exp(linear_terms),2.0)))
::STMT
MATRIX:dY,W,Y,sumW
FLOAT:lr,momentum
-(*(momentum,dY),*(lr,-(*(Y,sumW),%*%(W,Y))))
::STMT
MATRIX:m_err
sum(colSums(m_err))
::STMT
MATRIX:parsertemp409058,parsertemp409054,ctab
FLOAT:threshold
*(parsertemp409058,>(/(parsertemp409054,rowSums(ctab)),threshold))
::STMT
MATRIX:means,parsertemp560515
LITERAL_FLOAT:2.0
rowSums(*(means,^(parsertemp560515,2.0)))
::STMT
MATRIX:P,minD,D
t(colSums(/(<=(D,minD),rowSums(P))))
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
-(1.0,/(cast.FLOAT(-(x,X)),-(cast.FLOAT(X),cast.FLOAT(X))))
::STMT
MATRIX:tpr,fpr
*(-(fpr,fpr),+(tpr,tpr))
::STMT
MATRIX:is_LT_infinite,Y_prob
LITERAL_FLOAT:1.0
*(Y_prob,-(1.0,rowSums(is_LT_infinite)))
::STMT
MATRIX:parsertemp222327,is_row_in_samples
LITERAL_FLOAT:2001.0
-(2001.0,*(is_row_in_samples,parsertemp222327))
::STMT
MATRIX:surv
LITERAL_FLOAT:1.0
*(surv,sqrt(-(1.0,surv)))
::STMT
MATRIX:ssX_p,scale_X,X
*(scale_X,%*%(t(X),%*%(X,ssX_p)))
::STMT
FLOAT:b,int247
LITERAL_FLOAT:2.0
sqrt(-(^(b,2.0),int247))
::STMT
MATRIX:tab,catTotal
LITERAL_FLOAT:-1.0
*(/(tab,catTotal),-1.0)
::STMT
MATRIX:col_nonzeros,parsertemp382954,parsertemp382951,row_nonzeros
LITERAL_FLOAT:5.0E-7
*(5.0E-7,+(sum(*(parsertemp382951,row_nonzeros)),sum(*(parsertemp382954,col_nonzeros))))
::STMT
FLOAT:int484,217_a22,parsertemp22450,parsertemp22451
LITERAL_FLOAT:2.0
*(2.0,sqrt(+(+(parsertemp22450,parsertemp22451),/(int484,217_a22))))
::STMT
LITERAL_FLOAT:44.721359549995796
44.721359549995796
::STMT
MATRIX:X
FLOAT:int557,int228
LITERAL_FLOAT:1.0
/(-(exp(*(int557,X)),1.0),+(exp(*(int228,X)),1.0))
::STMT
MATRIX:parsertemp31023,parsertemp31025
FLOAT:int211,int718
LITERAL_FLOAT:1.0,2.0,100.0
/(^(/(-(parsertemp31023,parsertemp31025),-(int211,int718)),2.0),*(^(100.0,2.0),-(100.0,1.0)))
::STMT
MATRIX:B,X,y
LITERAL_FLOAT:2.0
^(-(y,%*%(X,B)),2.0)
::STMT
MATRIX:prec_chol,mu
FLOAT:int510,int468
t(rowSums(*(^(mu,int468),^(prec_chol,int510))))
::STMT
LITERAL_FLOAT:1.0,2001.0
-(2001.0,1.0)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:1.0
/(y_corr,-(1.0,y_corr))
::STMT
MATRIX:ts
LITERAL_FLOAT:1.0,2.0,4.0
-(+(-(length(ts),4.0),1.0),2.0)
::STMT
LITERAL_FLOAT:0.086386842558136
0.086386842558136
::STMT
MATRIX:P,scale_lambda,X,Y,parsertemp150455
LITERAL_FLOAT:0.0,1.0E-5
+(%*%(t(X),-(P,Y)),*(*(%*%(scale_lambda,parsertemp150455),1.0E-5),0.0))
::STMT
MATRIX:parsertemp555613,parsertemp555615
%*%(t(sqrt(parsertemp555613)),sqrt(parsertemp555615))
::STMT
MATRIX:X,Y
/(abs(-(X,Y)),abs(X))
::STMT
MATRIX:W1_rand,X,parsertemp393476,parsertemp393466
FLOAT:float616
LITERAL_FLOAT:0.07261134713572442
%*%(*(0.07261134713572442,W1_rand),t(/(-(X,parsertemp393466),+(parsertemp393476,float616))))
::STMT
MATRIX:colSD
LITERAL_FLOAT:3.0
*(3.0,colSD)
::STMT
MATRIX:_funvar402
LITERAL_FLOAT:1.0E-16
+(_funvar402,1.0E-16)
::STMT
MATRIX:var_tot_Y
cast.FLOAT(sqrt(var_tot_Y))
::STMT
MATRIX:select,d_r_rev,X_rev_agg
*(%*%(select,X_rev_agg),d_r_rev)
::STMT
FLOAT:n_features
LITERAL_FLOAT:1.0
*(n_features,+(n_features,1.0))
::STMT
MATRIX:r
LITERAL_FLOAT:9.999999999999998E-15
*(cast.FLOAT(%*%(t(r),r)),9.999999999999998E-15)
::STMT
LITERAL_FLOAT:3.0,2001.0
-(2001.0,3.0)
::STMT
MATRIX:X,Y,K
LITERAL_FLOAT:-1.0
+(*(*(K,-1.0),-(X,X)),-(Y,Y))
::STMT
MATRIX:sample_maps,X
LITERAL_FLOAT:2.0
^(%*%(sample_maps,X),2.0)
::STMT
MATRIX:Y_prob,Y,parsertemp171380
FLOAT:int58
LITERAL_FLOAT:3.141592653589793,2.0
*(*(*(rowSums(Y),Y_prob),Y_prob),^(*(+(int58,parsertemp171380),3.141592653589793),2.0))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.5
-(y_corr,0.5)
::STMT
LITERAL_FLOAT:0.15000000000000002
0.15000000000000002
::STMT
FLOAT:parsertemp31330
LITERAL_FLOAT:10000.0
*(parsertemp31330,10000.0)
::STMT
MATRIX:A
/(*(cast.FLOAT(A),cast.FLOAT(A)),*(cast.FLOAT(A),cast.FLOAT(A)))
::STMT
MATRIX:W
FLOAT:int461,parsertemp65,parsertemp66,int339,wt
LITERAL_FLOAT:3.0,4.0
*(*(*(-(wt,int339),-(wt,int461)),-(sum(W),3.0)),^(sqrt(/(parsertemp65,parsertemp66)),4.0))
::STMT
FLOAT:int495,x
LITERAL_FLOAT:1.0
/(1.0,+(1.0,exp(*(x,int495))))
::STMT
MATRIX:distances,ksmall,parsertemp557211
LITERAL_FLOAT:0.0
*(<=(distances,ksmall),==(diag(parsertemp557211),0.0))
::STMT
MATRIX:parsertemp410979,W,X,parsertemp410981
FLOAT:eps
/(X,+(%*%(W,/(parsertemp410979,parsertemp410981)),eps))
::STMT
MATRIX:Xtest_dists
FLOAT:eps
LITERAL_FLOAT:0.0
rowSums(*(<=(Xtest_dists,eps),<(0.0,Xtest_dists)))
::STMT
MATRIX:_sbcvar11
LITERAL_FLOAT:1000.0
/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0)
::STMT
MATRIX:resp,mean,X,weight
FLOAT:int164
LITERAL_FLOAT:2.0
-(/(%*%(t(resp),^(X,int164)),t(weight)),*(2.0,^(mean,2.0)))
::STMT
MATRIX:CFreqs
LITERAL_FLOAT:1.0
-(CFreqs,1.0)
::STMT
MATRIX:parsertemp220853,parsertemp220854
LITERAL_FLOAT:0.0,2.0,3.4011973816621555
*(2.0,>=(-(+(parsertemp220853,parsertemp220854),3.4011973816621555),0.0))
::STMT
MATRIX:WM
LITERAL_FLOAT:1.0
/(sum(WM),-(sum(WM),1.0))
::STMT
LITERAL_FLOAT:2.0,2001.0
-(2001.0,2.0)
::STMT
MATRIX:X
FLOAT:index,int193,parsertemp129094
LITERAL_FLOAT:2.0
+(+(*(index,-(parsertemp129094,int193)),2.0),-(ncol(X),2.0))
::STMT
MATRIX:t_gp,parsertemp560881,parsertemp560864,parsertemp560863,parsertemp560877
FLOAT:int773,float843,int853
LITERAL_FLOAT:1.0
-(+(1.0,-(*(int773,parsertemp560863),1.0)),*(*(*(t_gp,parsertemp560877),-(parsertemp560864,int853)),exp(/(parsertemp560881,float843))))
::STMT
FLOAT:parsertemp410218,parsertemp410219
LITERAL_FLOAT:-1.0,50.0
exp(/(*(-(parsertemp410218,parsertemp410219),-1.0),50.0))
::STMT
FLOAT:rho
LITERAL_FLOAT:10000.0
round(*(10000.0,rho))
::STMT
FLOAT:eta,s
^(eta,s)
::STMT
MATRIX:ss_res_Y,var_tot_Y
FLOAT:df_ss_res_Y
LITERAL_FLOAT:1.0
-(1.0,/(/(ss_res_Y,df_ss_res_Y),var_tot_Y))
::STMT
MATRIX:tmp,parsertemp260786,parsertemp260787,parsertemp260785
cast.FLOAT(%*%(t(-(parsertemp260787,tmp)),-(%*%(parsertemp260785,parsertemp260786),tmp)))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0E-4
+(1.0E-4,abs(t(A)))
::STMT
MATRIX:is_LT_infinite,Y_prob,Y,parsertemp171294,parsertemp171292,flip_pos,parsertemp171290
FLOAT:float465
*(*(Y,%*%(+(parsertemp171294,is_LT_infinite),flip_pos)),+(*(/(Y_prob,parsertemp171290),-(float465,parsertemp171292)),is_LT_infinite))
::STMT
MATRIX:P,Y,dP
sum(&(>(P,dP),Y))
::STMT
FLOAT:a,b,c,int863
LITERAL_FLOAT:2.0
sqrt(-(^(b,2.0),*(*(int863,a),c)))
::STMT
MATRIX:y_corr
FLOAT:link_power,int319
LITERAL_FLOAT:0.0
-(^(+(y_corr,==(y_corr,int319)),link_power),==(y_corr,0.0))
::STMT
LITERAL_FLOAT:1.0,2.0,3.0,2003.0
*(*(-(2003.0,2.0),+(2003.0,1.0)),+(2003.0,3.0))
::STMT
MATRIX:g0_1,parsertemp410117
LITERAL_FLOAT:2.0
^(+(g0_1,t(colSums(parsertemp410117))),2.0)
::STMT
MATRIX:P,Y,dP
&(<=(P,dP),!(Y))
::STMT
MATRIX:parsertemp274141,shift_X,Grad
LITERAL_FLOAT:2.0
sum(^(+(%*%(parsertemp274141,Grad),%*%(shift_X,Grad)),2.0))
::STMT
MATRIX:U,V,X
LITERAL_FLOAT:0.0
*(!=(X,0.0),-(%*%(U,t(V)),X))
::STMT
MATRIX:col
FLOAT:min_val,bin_width
/(-(col,min_val),bin_width)
::STMT
MATRIX:parsertemp260759,parsertemp260756,Xd
FLOAT:dd,parsertemp260753,wd
/(*(-(+(wd,parsertemp260753),sum(parsertemp260756)),-(+(wd,parsertemp260753),sum(parsertemp260756))),+(dd,sum(*(parsertemp260759,Xd))))
::STMT
MATRIX:parsertemp254737
FLOAT:2124_sq_root_d,parsertemp254772,parsertemp254751,float69
+(float69,*(parsertemp254772,/(-(parsertemp254751,2124_sq_root_d),sum(parsertemp254737))))
::STMT
MATRIX:X,Centering,ScaleFactor
FLOAT:N
LITERAL_FLOAT:1.0
/(%*%(t(/(X,ScaleFactor)),/(-(X,Centering),ScaleFactor)),-(N,1.0))
::STMT
FLOAT:link_power
LITERAL_FLOAT:-2.0,1.0
+(-2.0,/(1.0,link_power))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int449,m
abs(rand(m,int449,0.0,1.0))
::STMT
FLOAT:parsertemp22454,parsertemp22485
LITERAL_FLOAT:2.0
exp(+(parsertemp22485,*(2.0,sqrt(parsertemp22454))))
::STMT
MATRIX:_sbcvar1007
FLOAT:number_nans
/(number_nans,nrow(_sbcvar1007))
::STMT
MATRIX:r,parsertemp44050
FLOAT:norm_r2
/(sum(*(-(r,parsertemp44050),-(r,parsertemp44050))),norm_r2)
::STMT
MATRIX:xs
LITERAL_FLOAT:1000.0,4.5
-(1000.0,sum(>=(xs,4.5)))
::STMT
MATRIX:parsertemp397720,W1_rand,parsertemp397730,X
FLOAT:float798
LITERAL_FLOAT:0.086386842558136
%*%(*(0.086386842558136,W1_rand),t(/(-(X,parsertemp397720),+(parsertemp397730,float798))))
::STMT
MATRIX:I
*(nrow(I),ncol(I))
::STMT
MATRIX:linear_terms
FLOAT:link_power,parsertemp171228
LITERAL_FLOAT:2.0
/(^(linear_terms,-(/(parsertemp171228,link_power),2.0)),^(link_power,2.0))
::STMT
MATRIX:_sbcvar96,_sbcvar95,_sbcvar98
LITERAL_FLOAT:-1.0
sum(*(+(%*%(_sbcvar95,_sbcvar96),-1.0),%*%(_sbcvar95,_sbcvar98)))
::STMT
MATRIX:parsertemp170136
FLOAT:278_sq_root_d,parsertemp170150,pq_CG
LITERAL_FLOAT:0.5
*(*(0.5,/(-(parsertemp170150,278_sq_root_d),sum(parsertemp170136))),pq_CG)
::STMT
MATRIX:V,W,parsertemp10741,H
LITERAL_FLOAT:1.0E-8
*(H,/(%*%(t(W),V),+(%*%(parsertemp10741,H),1.0E-8)))
::STMT
FLOAT:252_Y,252_X,252_K,float711,float512,parsertemp32930,int666,parsertemp32915,float790
LITERAL_FLOAT:1.0
*(*(/(-(float512,252_X),-(252_X,252_X)),-(1.0,/(float790,252_X))),+(*(-(252_K,252_Y),-(int666,parsertemp32915)),*(+(parsertemp32930,252_Y),/(float711,252_X))))
::STMT
FLOAT:int684,191_t,191_lr,int4,191_beta1,parsertemp146979
LITERAL_FLOAT:1.0
/(*(191_lr,sqrt(-(int684,parsertemp146979))),-(1.0,^(191_beta1,+(191_t,int4))))
::STMT
FLOAT:rho
LITERAL_FLOAT:10000.0
/(round(*(10000.0,rho)),10000.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:-1.0,2.0
/(*(^(finite_linear_terms,2.0),-1.0),2.0)
::STMT
MATRIX:ssX_newbeta
LITERAL_FLOAT:0.0
INT:int142,int272
+(ssX_newbeta,cast.FLOAT(rand(int142,int272,0.0,0.0)))
::STMT
MATRIX:S
LITERAL_FLOAT:2.0,799.0
/(^(diag(S),2.0),799.0)
::STMT
MATRIX:parsertemp171314,t_gp,parsertemp171306
FLOAT:float653
LITERAL_FLOAT:1.0,0.25,0.254829592
*(0.25,*(/(1.0,+(float653,parsertemp171306)),+(0.254829592,*(t_gp,parsertemp171314))))
::STMT
FLOAT:num_hidden1,m
sqrt(+(m,num_hidden1))
::STMT
MATRIX:parsertemp410988,parsertemp410979,parsertemp410990,parsertemp410981
FLOAT:parsertemp410999
-(sum(%*%(/(parsertemp410988,parsertemp410990),/(parsertemp410979,parsertemp410981))),parsertemp410999)
::STMT
MATRIX:d,parsertemp410054
FLOAT:r2
/(r2,sum(*(d,t(parsertemp410054))))
::STMT
MATRIX:E,parsertemp22269
FLOAT:int373,q
LITERAL_FLOAT:10000.0
sqrt(/(sum(/(parsertemp22269,E)),*(10000.0,-(q,int373))))
::STMT
FLOAT:beg
LITERAL_FLOAT:1.0,512.0
-(+(beg,512.0),1.0)
::STMT
MATRIX:parsertemp220863,parsertemp220864,H,betamax,Hneg,beta,Hpos
FLOAT:float727
LITERAL_FLOAT:0.0,1.0E20
*(*(>=(-(H,float727),0.0),!=(+(parsertemp220863,parsertemp220864),1.0E20)),+(beta,+(*(Hpos,betamax),*(Hneg,beta))))
::STMT
MATRIX:w,out
LITERAL_FLOAT:1.0,0.5,0.001
*(0.001,+(*(0.5,cast.FLOAT(out)),*(1.0,cast.FLOAT(w))))
::STMT
MATRIX:F
-(F,/(%*%(rowSums(F),colSums(F)),sum(F)))
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:5.0
/(5.0,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:Ileft,Iright,ig
FLOAT:min_leaf
*(&(>=(rowSums(Ileft),min_leaf),>=(rowSums(Iright),min_leaf)),ig)
::STMT
FLOAT:c
LITERAL_FLOAT:-1.0,2.0
*(*(2.0,c),-1.0)
::STMT
MATRIX:maxscub
FLOAT:parsertemp31797
LITERAL_FLOAT:-Infinity
|(>=(maxscub,parsertemp31797),==(maxscub,-Infinity))
::STMT
MATRIX:vars
FLOAT:dispersion
*(dispersion,colSums(vars))
::STMT
MATRIX:parsertemp410245,parsertemp410247
LITERAL_FLOAT:-1.0,1.0,2.0,1.5
^(/(*(parsertemp410245,-1.0),*(2.0,exp(parsertemp410247))),/(1.0,1.5))
::STMT
FLOAT:e,mu
LITERAL_FLOAT:0.999,4.0
/(-(0.999,mu),-(4.0,e))
::STMT
LITERAL_FLOAT:105.0,1.0
*(105.0,1.0)
::STMT
LITERAL_FLOAT:1.0,10000.0
-(10000.0,1.0)
::STMT
MATRIX:parsertemp2781,Xd,parsertemp2785
FLOAT:dd,step_sz,wd
/(-(+(wd,*(step_sz,dd)),sum(*(parsertemp2781,Xd))),+(dd,sum(*(parsertemp2785,Xd))))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.2656844656620286
*(0.2656844656620286,W2_rand)
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:2.0
^(linear_terms,/(2.0,link_power))
::STMT
MATRIX:252_X,252_K
LITERAL_FLOAT:0.0
*(-(0.0,cast.FLOAT(252_K)),-(cast.FLOAT(252_X),cast.FLOAT(252_X)))
::STMT
MATRIX:ytest,yhat
FLOAT:parsertemp115806,n
LITERAL_FLOAT:2.0
-(sum(^(-(ytest,yhat),2.0)),*(nrow(ytest),^(/(parsertemp115806,n),2.0)))
::STMT
MATRIX:parsertemp31265,WM,CMeans
LITERAL_FLOAT:2.0
^(-(CMeans,/(sum(parsertemp31265),sum(WM))),2.0)
::STMT
FLOAT:log_ten,float83,parsertemp169813
LITERAL_FLOAT:4.0
*(log_ten,-(4.0,round(-(parsertemp169813,float83))))
::STMT
MATRIX:X
FLOAT:i
+(i,ncol(X))
::STMT
MATRIX:parsertemp410978,H,parsertemp410980
t(rowSums(/(*(H,parsertemp410978),t(parsertemp410980))))
::STMT
MATRIX:residual_matrix
LITERAL_FLOAT:0.0
+(nrow(residual_matrix),0.0)
::STMT
MATRIX:X_plane,parsertemp11251
FLOAT:int665
LITERAL_FLOAT:0.0
rowSums(*(>(X_plane,0.0),t(^(int665,parsertemp11251))))
::STMT
MATRIX:parsertemp178161,M
colSums(exp(-(M,parsertemp178161)))
::STMT
MATRIX:W
LITERAL_FLOAT:2.0
-(sum(round(W)),2.0)
::STMT
MATRIX:r,d,Hd
FLOAT:r2,c
LITERAL_FLOAT:0.0
+(-(0.0,+(r,*(c,Hd))),*(/(cast.FLOAT(r),r2),d))
::STMT
LITERAL_FLOAT:2.0,0.5,-0.5
INT:int121,int493
^(rand(int121,int493,-0.5,0.5),2.0)
::STMT
MATRIX:W
LITERAL_FLOAT:3.0
-(sum(round(W)),3.0)
::STMT
MATRIX:trees_M_offset
LITERAL_FLOAT:1.0
-(cast.FLOAT(trees_M_offset),1.0)
::STMT
MATRIX:dataFrame,constraintsFrame
*(nrow(dataFrame),nrow(constraintsFrame))
::STMT
MATRIX:S,parsertemp382904,V,W,row_nonzeros
FLOAT:reg
+(%*%(*(W,%*%(S,parsertemp382904)),V),*(*(reg,S),row_nonzeros))
::STMT
MATRIX:oldX
LITERAL_FLOAT:1.0
+(nrow(oldX),1.0)
::STMT
MATRIX:parsertemp10964,C
LITERAL_FLOAT:100.0
/(sum(==(parsertemp10964,C)),100.0)
::STMT
MATRIX:obj,gs,parsertemp44066
FLOAT:float664,int191,parsertemp44077,int394
LITERAL_FLOAT:-0.5
/(-(cast.FLOAT(obj),+(*(float664,parsertemp44077),*(int191,int394))),*(-0.5,-(cast.FLOAT(gs),cast.FLOAT(parsertemp44066))))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0
-(sum(round(W)),1.0)
::STMT
MATRIX:_sbcvar179,_sbcvar182,237_CFreqs
FLOAT:int842
LITERAL_FLOAT:10000.0
/(sum(*(+(237_CFreqs,int842),%*%(_sbcvar179,_sbcvar182))),-(10000.0,nrow(_sbcvar179)))
::STMT
MATRIX:p,z
FLOAT:pp,parsertemp169870,pz
LITERAL_FLOAT:-1.0
+(*(sum(*(p,z)),-1.0),sqrt(-(*(pz,pz),*(pp,parsertemp169870))))
::STMT
MATRIX:parsertemp31782,err,parsertemp31769,parsertemp31768,cCnts,parsertemp31780
FLOAT:minSup,int606
-(sum(&(>=(cCnts,minSup),>(err,int606))),sum(&(&(parsertemp31768,parsertemp31769),|(parsertemp31780,parsertemp31782))))
::STMT
MATRIX:V,y
LITERAL_FLOAT:0.0
-(0.0,%*%(t(V),y))
::STMT
MATRIX:Y,predicted_Y
LITERAL_FLOAT:0.0
sum(==(-(predicted_Y,Y),0.0))
::STMT
FLOAT:n_stratum_cols,n_group_cols
LITERAL_FLOAT:2.0
+(+(2.0,n_group_cols),n_stratum_cols)
::STMT
FLOAT:sigma,alpha
LITERAL_FLOAT:0.5
*(*(0.5,sigma),alpha)
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:8.674675786448736
/(8.674675786448736,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:G,authorities
max(%*%(t(G),%*%(G,authorities)))
::STMT
MATRIX:indexWithInGroups,selectedMatrix
rowSums(*(indexWithInGroups,selectedMatrix))
::STMT
MATRIX:in_m_neighbor_value
FLOAT:in_i_k_min
LITERAL_FLOAT:1.0
+(-(ncol(in_m_neighbor_value),in_i_k_min),1.0)
::STMT
MATRIX:parsertemp386440,parsertemp386441
FLOAT:minPts
LITERAL_FLOAT:1.0
>=(+(rowSums(*(parsertemp386440,parsertemp386441)),1.0),minPts)
::STMT
MATRIX:solution,X
*(-(X,solution),-(X,solution))
::STMT
MATRIX:qLow,length,qUp
LITERAL_FLOAT:2.0
<(rowSums(|(<(length,qLow),>(length,qUp))),2.0)
::STMT
MATRIX:C,parsertemp11014
LITERAL_FLOAT:1000.0
/(sum(==(parsertemp11014,C)),1000.0)
::STMT
MATRIX:parsertemp2832
==(round(parsertemp2832),max(round(parsertemp2832)))
::STMT
MATRIX:parsertemp410081,d_r_rev,parsertemp410090
FLOAT:o
LITERAL_FLOAT:-1.0
-(+(*(cast.FLOAT(parsertemp410081),-1.0),sum(*(d_r_rev,parsertemp410090))),o)
::STMT
MATRIX:CFreqs1,present_domain_vals_mat,CMeans
FLOAT:my
LITERAL_FLOAT:2.0
sum(*(%*%(present_domain_vals_mat,CFreqs1),^(-(CMeans,my),2.0)))
::STMT
MATRIX:linear_terms
FLOAT:link_power
LITERAL_FLOAT:-1.0
*(^(linear_terms,/(-1.0,link_power)),-1.0)
::STMT
MATRIX:parsertemp437190,X,weight
LITERAL_FLOAT:2.0
*(2.0,^(/(%*%(parsertemp437190,X),t(weight)),2.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0,2.0
/(/(1.0,linear_terms),2.0)
::STMT
FLOAT:int252,int543
INT:int84,int477
diag(rand(int84,int477,int252,int543))
::STMT
MATRIX:A,B,C,X
%*%(<=(%*%(X,A),B),C)
::STMT
MATRIX:r,d,parsertemp43999
cast.FLOAT(/(sum(*(r,r)),%*%(t(d),+(d,parsertemp43999))))
::STMT
MATRIX:2814_K,2814_X
LITERAL_FLOAT:0.0
*(cast.FLOAT(-(0.0,2814_K)),-(cast.FLOAT(2814_X),cast.FLOAT(2814_X)))
::STMT
MATRIX:posSamples,posSampleMeans
LITERAL_FLOAT:2.0,7000.0
-(colSums(^(posSamples,2.0)),*(7000.0,^(posSampleMeans,2.0)))
::STMT
MATRIX:mu
FLOAT:q
LITERAL_FLOAT:4.0
-(q,*(4.0,*(cast.FLOAT(mu),cast.FLOAT(mu))))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:-1.0
*(^(linear_terms,-1.0),-(Y,linear_terms))
::STMT
MATRIX:U,X,parsertemp382850
LITERAL_FLOAT:0.0
%*%(t(U),*(!=(X,0.0),-(%*%(U,parsertemp382850),X)))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int379,parsertemp12177
rand(parsertemp12177,int379,0.0,1.0)
::STMT
MATRIX:parsertemp553122,missing
t(%*%(rowSums(*(missing,missing)),parsertemp553122))
::STMT
MATRIX:parsertemp171314,t_gp,parsertemp171318,parsertemp171306
FLOAT:int866,float62
LITERAL_FLOAT:1.0,2.0,0.254829592
*(exp(/(*(parsertemp171318,int866),2.0)),*(/(1.0,+(float62,parsertemp171306)),+(0.254829592,*(t_gp,parsertemp171314))))
::STMT
MATRIX:grad
FLOAT:psi
*(psi,sqrt(sum(*(grad,grad))))
::STMT
MATRIX:dX,v,X
FLOAT:lr,mu
+(X,-(*(mu,v),*(lr,dX)))
::STMT
MATRIX:R,parsertemp40219
FLOAT:numRows,level
/(numRows,-(R,rowSums(==(parsertemp40219,level))))
::STMT
MATRIX:d_r,parsertemp409781
cast.FLOAT(%*%(t(rev(d_r)),parsertemp409781))
::STMT
MATRIX:287_x,287_y
LITERAL_FLOAT:2.0
/(+(cast.FLOAT(287_x),cast.FLOAT(287_y)),2.0)
::STMT
MATRIX:aggr_best_index_vector
LITERAL_FLOAT:0.0,1.0
+(sum(==(aggr_best_index_vector,0.0)),1.0)
::STMT
MATRIX:id
FLOAT:parsertemp22683
cast.FLOAT(diag(diag(==(id,parsertemp22683))))
::STMT
MATRIX:w,X,y
*(-(%*%(X,w),y),-(%*%(X,w),y))
::STMT
LITERAL_FLOAT:2.0
INT:int554,int716
rand(int716,int554,2.0,2.0)
::STMT
LITERAL_FLOAT:0.0
INT:int87,int416
rand(int87,int416,0.0,0.0)
::STMT
FLOAT:window_size,parsertemp180776,n
LITERAL_FLOAT:1.0
-(+(-(n,window_size),1.0),+(parsertemp180776,1.0))
::STMT
MATRIX:outSize
LITERAL_FLOAT:0.0
cast.FLOAT(>(outSize,0.0))
::STMT
MATRIX:P,I,X2
LITERAL_FLOAT:0.0
==(*(t(%*%(X2,P)),I),0.0)
::STMT
MATRIX:P,I
LITERAL_FLOAT:0.0
==(%*%(P,I),0.0)
::STMT
MATRIX:R,dssp
FLOAT:4_n
/(4_n,+(R,dssp))
::STMT
MATRIX:X
LITERAL_FLOAT:4.0
>(X,4.0)
::STMT
MATRIX:parsertemp146930,184_unnorm_probs,184_probs,parsertemp146928,183_dpred,184_scores
FLOAT:int466,parsertemp146927
-(*(*(*(parsertemp146927,parsertemp146928),/(int466,parsertemp146930)),/(exp(184_scores),rowSums(184_unnorm_probs))),*(/(exp(184_scores),rowSums(184_unnorm_probs)),rowSums(*(183_dpred,184_probs))))
::STMT
MATRIX:Y
cast.MATRIX(max(Y))
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,48.0
+(*(48.0,-(run_index,1.0)),1.0)
::STMT
LITERAL_FLOAT:1.0E-7
INT:int267,m
rand(m,int267,1.0E-7,1.0E-7)
::STMT
MATRIX:F
LITERAL_FLOAT:2.0
/(t(colSums(F)),2.0)
::STMT
FLOAT:sum_y_test,n
LITERAL_FLOAT:2.0
^(/(sum_y_test,n),2.0)
::STMT
MATRIX:x,y
LITERAL_FLOAT:2.0
/(+(x,y),2.0)
::STMT
MATRIX:gXY
FLOAT:lambda,parsertemp171602,beta
LITERAL_FLOAT:2.0
sum(^(+(*(parsertemp171602,gXY),*(lambda,beta)),2.0))
::STMT
MATRIX:X_plane
LITERAL_FLOAT:0.0
>(X_plane,0.0)
::STMT
MATRIX:cumLens
FLOAT:i
LITERAL_FLOAT:1.0
/(-(i,1.0),cast.FLOAT(cumLens))
::STMT
MATRIX:err,cCnts
FLOAT:minSup
LITERAL_FLOAT:0.0
|(<(cCnts,minSup),==(err,0.0))
::STMT
MATRIX:parsertemp220845,ZERODIAG
LITERAL_FLOAT:1.0E-12
+(rowSums(*(exp(parsertemp220845),ZERODIAG)),1.0E-12)
::STMT
MATRIX:parsertemp11509
LITERAL_FLOAT:2.0
*(2.0,parsertemp11509)
::STMT
MATRIX:intercept
LITERAL_FLOAT:0.0
*(0.0,intercept)
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:-2.0
*(-2.0,parsertemp171083)
::STMT
MATRIX:shift_X
FLOAT:lambda,p_CG,parsertemp170060,temp_CG
*(+(+(*(lambda,p_CG),*(parsertemp170060,temp_CG)),*(cast.FLOAT(shift_X),cast.FLOAT(temp_CG))),sum(p_CG))
::STMT
MATRIX:cumHistMul,offset
cast.FLOAT(<=(offset,cumHistMul))
::STMT
MATRIX:P,Y,Z,ZERODIAG,parsertemp220891
FLOAT:int631,parsertemp220894
%*%(*(-(P,/(Z,parsertemp220894)),*(/(int631,parsertemp220891),ZERODIAG)),Y)
::STMT
MATRIX:X,MSE
LITERAL_FLOAT:2.0
/(^(max(X),2.0),MSE)
::STMT
MATRIX:parsertemp10744,V,W,H,parsertemp10748
FLOAT:Eps
/(%*%(V,t(*(H,parsertemp10744))),+(%*%(W,%*%(H,parsertemp10748)),Eps))
::STMT
MATRIX:parsertemp460641
LITERAL_FLOAT:0.282842712474619
*(parsertemp460641,0.282842712474619)
::STMT
MATRIX:P,gradients,Phi_new,Theta
FLOAT:alpha
+(Phi_new,*(alpha,%*%(t(gradients),%*%(P,Theta))))
::STMT
MATRIX:xs
FLOAT:252_x
LITERAL_FLOAT:10.0
-(10.0,sum(>=(xs,252_x)))
::STMT
MATRIX:Yhat_prime,H3_prime,E,W4
*(H3_prime,%*%(*(E,Yhat_prime),W4))
::STMT
MATRIX:means,parsertemp560530
LITERAL_FLOAT:5.0
/(sum(<(*(means,parsertemp560530),5.0)),*(nrow(means),ncol(means)))
::STMT
MATRIX:79_77_X_row_norm,parsertemp17178,parsertemp17180,Y_block,parsertemp17170,79_77_Y_row_norm,X_block
LITERAL_FLOAT:0.9
*(>(/(%*%(X_block,parsertemp17180),%*%(79_77_X_row_norm,parsertemp17178)),0.9),/(%*%(X_block,t(Y_block)),%*%(+(79_77_X_row_norm,parsertemp17170),t(79_77_Y_row_norm))))
::STMT
MATRIX:tmp,w,out
LITERAL_FLOAT:1.0,0.5
+(*(0.5,cast.FLOAT(%*%(out,out))),*(1.0,cast.FLOAT(%*%(w,tmp))))
::STMT
MATRIX:confusionM
min(rowSums(confusionM))
::STMT
MATRIX:parsertemp175056,316_scores,X
-(/(exp(-(X,parsertemp175056)),rowSums(exp(316_scores))),/(exp(-(X,parsertemp175056)),rowSums(exp(316_scores))))
::STMT
FLOAT:m2,float885,wt
LITERAL_FLOAT:5.0
*(5.0,sqrt(/(*(m2,wt),-(wt,float885))))
::STMT
MATRIX:validKeyMask
cast.FLOAT(colSums(validKeyMask))
::STMT
MATRIX:classes
LITERAL_FLOAT:1.0,0.8
*(cast.FLOAT(classes),-(1.0,0.8))
::STMT
MATRIX:U,V,X
-(%*%(U,t(V)),X)
::STMT
MATRIX:termination_bitmap,parsertemp222665
LITERAL_FLOAT:10.0
+(*(10.0,max(*(parsertemp222665,termination_bitmap))),10.0)
::STMT
MATRIX:sv,s,w,X,Y,out
FLOAT:lambda,step_sz
-(%*%(t(X),*(*(sv,out),Y)),*(lambda,+(w,*(step_sz,s))))
::STMT
MATRIX:parsertemp195898
FLOAT:parsertemp195895,factor_up
LITERAL_FLOAT:1.0
-(1.0,abs(-(/(parsertemp195898,factor_up),/(parsertemp195895,factor_up))))
::STMT
FLOAT:p_CG,parsertemp170088,z,pp_CG,parsertemp170090
LITERAL_FLOAT:-1.0
/(-(*(*(z,p_CG),-1.0),sqrt(-(parsertemp170088,parsertemp170090))),pp_CG)
::STMT
MATRIX:parsertemp31115,parsertemp31108
FLOAT:parsertemp31116,parsertemp31109
LITERAL_FLOAT:1500.0,2000.0
sqrt(+(/(/(parsertemp31108,parsertemp31109),2000.0),/(/(parsertemp31115,parsertemp31116),1500.0)))
::STMT
MATRIX:t,parsertemp171083,parsertemp171092
FLOAT:float141
LITERAL_FLOAT:1.0,1.432788
+(1.0,*(sqrt(*(float141,parsertemp171083)),+(1.432788,*(t,parsertemp171092))))
::STMT
MATRIX:y
FLOAT:beta
LITERAL_FLOAT:2.0,100.0
/(sum(^(-(beta,y),2.0)),100.0)
::STMT
MATRIX:p,q,V,parsertemp1939
FLOAT:norm_r2,eps
*(/(norm_r2,cast.FLOAT(%*%(parsertemp1939,q))),+(%*%(t(V),%*%(V,p)),*(eps,p)))
::STMT
MATRIX:surv,se_surv
FLOAT:z_alpha_2
/(*(z_alpha_2,se_surv),surv)
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:3.5355339059327378
/(3.5355339059327378,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:s,w,wnew
LITERAL_FLOAT:0.5
*(0.5,cast.FLOAT(%*%(t(wnew),+(w,s))))
::STMT
LITERAL_FLOAT:1.0E20
INT:int563,n
rand(n,int563,1.0E20,1.0E20)
::STMT
FLOAT:prob_true,prob_false
LITERAL_FLOAT:2.0
+(^(prob_true,2.0),^(prob_false,2.0))
::STMT
MATRIX:R,dsep,dssm
FLOAT:2_eAvg
/(/(+(R,dsep),-(R,dssm)),2_eAvg)
::STMT
MATRIX:is_too_small,parsertemp171346,the_exp_exp,linear_terms,the_exp
FLOAT:int95,int146,int568,int902,int805
LITERAL_FLOAT:1.0,1.0E7
+(/(*(-(int805,is_too_small),-(int902,the_exp_exp)),+(exp(linear_terms),==(parsertemp171346,int568))),*(==(+(int146,the_exp),1.0E7),-(1.0,/(the_exp,int95))))
::STMT
MATRIX:T_1,parsertemp410245,event,parsertemp410248
FLOAT:int916,float628
LITERAL_FLOAT:1.0,1.5
/(^(/(*(parsertemp410245,int916),*(float628,parsertemp410248)),/(1.0,1.5)),/(-(max(T_1),min(T_1)),sum(event)))
::STMT
FLOAT:obj,objnew
/(abs(-(objnew,obj)),obj)
::STMT
FLOAT:padw,padh,Hin,Win
LITERAL_FLOAT:2.0
*(+(Hin,*(2.0,padh)),+(Win,*(2.0,padw)))
::STMT
MATRIX:LHSthreshold
LITERAL_FLOAT:1.0
>(LHSthreshold,1.0)
::STMT
MATRIX:2707_X,2706_dX
LITERAL_FLOAT:0.0
colSums(*(>(2707_X,0.0),2706_dX))
::STMT
MATRIX:parsertemp220853,parsertemp220854,Hneg,beta,betamin,Hpos
FLOAT:logU
LITERAL_FLOAT:0.0
*(<(-(+(parsertemp220853,parsertemp220854),logU),0.0),+(beta,+(*(Hneg,betamin),*(Hpos,beta))))
::STMT
MATRIX:linear_terms,Y
LITERAL_FLOAT:0.0
*(^(exp(linear_terms),0.0),-(Y,exp(linear_terms)))
::STMT
FLOAT:R,eta,s
LITERAL_FLOAT:-1.0
*(R,^(eta,*(s,-1.0)))
::STMT
FLOAT:sig,q,parsertemp181039,int284
LITERAL_FLOAT:1.0,8.0
*(8.0,-(1.0,/(-(q,parsertemp181039),*(int284,sig))))
::STMT
MATRIX:Y,parsertemp283552
-(sum(Y),parsertemp283552)
::STMT
MATRIX:newbeta,lambda
LITERAL_FLOAT:2.0
%*%(t(lambda),^(newbeta,2.0))
::STMT
LITERAL_FLOAT:10.0,1.5,-8.0
*(1.5,^(10.0,-8.0))
::STMT
MATRIX:Train,2342_m_colmax,2342_m_colmin
LITERAL_FLOAT:2.0
/(*(2.0,-(Train,2342_m_colmin)),-(2342_m_colmax,2342_m_colmin))
::STMT
MATRIX:parsertemp143446,parsertemp143445
&(parsertemp143445,parsertemp143446)
::STMT
MATRIX:X_batch,dout1
FLOAT:191_beta1
LITERAL_FLOAT:1.0
*(-(1.0,191_beta1),%*%(t(X_batch),dout1))
::STMT
MATRIX:std,rad
-(rad,cast.FLOAT(std))
::STMT
MATRIX:parsertemp171315,parsertemp171307,parsertemp171319
FLOAT:float489,float311,float639
LITERAL_FLOAT:2.0
-(2.0,*(exp(/(parsertemp171319,float489)),*(/(float311,parsertemp171307),+(float639,parsertemp171315))))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.5
>(y_corr,0.5)
::STMT
MATRIX:s,sts,d,parsertemp44023
FLOAT:delta2
LITERAL_FLOAT:2.0
+(^(%*%(t(s),d),2.0),*(cast.FLOAT(%*%(parsertemp44023,d)),-(delta2,cast.FLOAT(sts))))
::STMT
MATRIX:t_gp,parsertemp560881,parsertemp560864,parsertemp560863,parsertemp560877
FLOAT:int551,int310,float761
LITERAL_FLOAT:1.0
+(-(1.0,-(*(int310,parsertemp560863),1.0)),*(*(*(t_gp,parsertemp560877),-(parsertemp560864,int551)),exp(/(parsertemp560881,float761))))
::STMT
MATRIX:parsertemp43620,y
FLOAT:float213
LITERAL_FLOAT:1.0
*(-(/(1.0,+(float213,parsertemp43620)),1.0),y)
::STMT
MATRIX:X_plane,parsertemp11251
LITERAL_FLOAT:0.0,2.0
*(>(X_plane,0.0),t(^(2.0,parsertemp11251)))
::STMT
MATRIX:p,parsertemp285529,g
FLOAT:pp,pq,int41,pz,parsertemp285521,parsertemp285537
*(+(+(*(parsertemp285537,pq),sum(parsertemp285529)),sum(*(g,p))),/(+(*(pz,int41),sqrt(parsertemp285521)),pp))
::STMT
MATRIX:W1_rand
FLOAT:num_hidden1,m
LITERAL_FLOAT:6.0
*(/(sqrt(6.0),sqrt(+(m,num_hidden1))),W1_rand)
::STMT
FLOAT:int584,m2,float284
LITERAL_FLOAT:2003.0
sqrt(*(/(2003.0,-(int584,float284)),m2))
::STMT
LITERAL_FLOAT:1.0E-7
1.0E-7
::STMT
MATRIX:parsertemp27746,parsertemp27872
FLOAT:featureCorrection
LITERAL_FLOAT:0.0
+(%*%(parsertemp27872,t(parsertemp27746)),-(0.0,featureCorrection))
::STMT
MATRIX:scale_X,parsertemp429910
LITERAL_FLOAT:300.0,0.0
*(-(0.0,/(t(parsertemp429910),300.0)),scale_X)
::STMT
MATRIX:parsertemp79022
LITERAL_FLOAT:0.5,1270.0
round(+(0.5,/(parsertemp79022,1270.0)))
::STMT
MATRIX:prec_chol,X
LITERAL_FLOAT:2.0
%*%(^(X,2.0),t(^(prec_chol,2.0)))
::STMT
MATRIX:t_gp,pt_gp,parsertemp171320,Y,the_gauss_exp,parsertemp171316
LITERAL_FLOAT:2.0,0.25,0.15915494309189535
/(*(*(exp(parsertemp171320),0.15915494309189535),rowSums(Y)),*(*(0.25,*(t_gp,parsertemp171316)),-(2.0,*(the_gauss_exp,pt_gp))))
::STMT
MATRIX:cumHistMul,offset,parsertemp132495,histMul,outBucket
LITERAL_FLOAT:1.0
-(-(offset,%*%(==(outBucket,parsertemp132495),-(cumHistMul,histMul))),1.0)
::STMT
MATRIX:parsertemp1904,y
LITERAL_FLOAT:-1.0
sum(*(*(%*%(parsertemp1904,y),-1.0),*(%*%(parsertemp1904,y),-1.0)))
::STMT
MATRIX:y
FLOAT:beta
LITERAL_FLOAT:2.0,10.0
/(sum(^(-(beta,y),2.0)),10.0)
::STMT
FLOAT:i,k
LITERAL_FLOAT:2.0,4.0
-(+(+(i,k),4.0),2.0)
::STMT
MATRIX:X
FLOAT:M
/(ncol(X),M)
::STMT
MATRIX:X
LITERAL_FLOAT:200.0
/(t(colSums(X)),200.0)
::STMT
FLOAT:s,num_groups
LITERAL_FLOAT:1.0
*(-(s,1.0),-(num_groups,1.0))
::STMT
MATRIX:id
==(id,cast.FLOAT(id))
::STMT
MATRIX:R,svLowBnd
>(R,cast.FLOAT(svLowBnd))
::STMT
MATRIX:X
LITERAL_FLOAT:300.0
/(t(colSums(X)),300.0)
::STMT
FLOAT:s
LITERAL_FLOAT:-1.0,50.0,3.0
*(50.0,^(3.0,*(s,-1.0)))
::STMT
FLOAT:var,arch_coef,xt,var_coef,int838,a0
+(+(a0,*(arch_coef,^(xt,int838))),*(var_coef,var))
::STMT
MATRIX:parsertemp171318
FLOAT:int267,one_over_sqrt_two_pi
LITERAL_FLOAT:2.0
*(exp(/(*(parsertemp171318,int267),2.0)),^(one_over_sqrt_two_pi,2.0))
::STMT
MATRIX:ssX_V,X,parsertemp150463,P_1K
%*%(rowSums(*(P_1K,%*%(X,ssX_V))),parsertemp150463)
::STMT
MATRIX:sv,out
LITERAL_FLOAT:2.0,0.5
*(0.5,sum(^(*(sv,out),2.0)))
::STMT
MATRIX:probs,y_batch
LITERAL_FLOAT:0.0,1.0,1.0E-10
*(*(/(1.0,nrow(y_batch)),-(0.0,y_batch)),/(1.0,+(probs,1.0E-10)))
::STMT
FLOAT:i,cols,n
LITERAL_FLOAT:1.0
-(n,-(+(i,cols),1.0))
::STMT
MATRIX:parsertemp222331
LITERAL_FLOAT:200.0,0.5
+(0.5,/(parsertemp222331,200.0))
::STMT
LITERAL_FLOAT:1.0,2.0,2000.0
-(^(2000.0,2.0),1.0)
::STMT
MATRIX:parsertemp175083
LITERAL_FLOAT:1.0E-6
cast.MATRIX(sum(<(abs(parsertemp175083),1.0E-6)))
::STMT
MATRIX:Y,linear_terms
LITERAL_FLOAT:0.0
-(Y,*(rowSums(Y),>=(linear_terms,0.0)))
::STMT
MATRIX:parsertemp44079
FLOAT:C
LITERAL_FLOAT:-1.0
*(C,sum(*(parsertemp44079,-1.0)))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.0,1.0
-(1.0,<=(y_corr,0.0))
::STMT
FLOAT:qmle,var_t,int653,xq_t,parsertemp496694,n
LITERAL_FLOAT:1.0
-(qmle,*(/(1.0,*(int653,n)),+(parsertemp496694,/(xq_t,var_t))))
::STMT
MATRIX:b4,parsertemp389338
LITERAL_FLOAT:2.0
exp(*(2.0,t(+(parsertemp389338,b4))))
::STMT
MATRIX:parsertemp397828,parsertemp397825,W3_rand
LITERAL_FLOAT:0.5107539184552492
t(%*%(*(0.5107539184552492,W3_rand),t(/(parsertemp397825,parsertemp397828))))
::STMT
MATRIX:wnew,parsertemp44111
LITERAL_FLOAT:2.0
sqrt(sum(^(+(wnew,parsertemp44111),2.0)))
::STMT
MATRIX:_sbcvar2306
LITERAL_FLOAT:1.0
+(max(t(_sbcvar2306)),1.0)
::STMT
MATRIX:simplex
LITERAL_FLOAT:2.0
*(2.0,/(-(rowSums(simplex),simplex),nrow(simplex)))
::STMT
MATRIX:W1_rand,stds,parsertemp394896
LITERAL_FLOAT:0.08146881698903526
t(%*%(*(0.08146881698903526,W1_rand),t(/(parsertemp394896,stds))))
::STMT
MATRIX:V,y
%*%(t(V),y)
::STMT
MATRIX:is_natural_parameter_log_zero,Y
LITERAL_FLOAT:0.0,1.0
-(1.0,*(>(Y,0.0),is_natural_parameter_log_zero))
::STMT
FLOAT:int143,o_init,int524,o
LITERAL_FLOAT:-1.0,50.0
/(*(-(*(int524,o_init),*(int143,o)),-1.0),50.0)
::STMT
MATRIX:U,V_sum
/(*(U,U),sum(V_sum))
::STMT
FLOAT:parsertemp565893,h,y_offset
LITERAL_FLOAT:1.0
-(+(+(parsertemp565893,y_offset),h),1.0)
::STMT
LITERAL_FLOAT:0.054717579189018505
0.054717579189018505
::STMT
MATRIX:X_batch,dout1,mW1
FLOAT:191_beta1
LITERAL_FLOAT:1.0
+(*(191_beta1,mW1),*(-(1.0,191_beta1),%*%(t(X_batch),dout1)))
::STMT
MATRIX:X_batch,parsertemp389606,parsertemp389591,2364_2361_Y,parsertemp389588,W4
FLOAT:int318
LITERAL_FLOAT:1.0,2.0
*(-(1.0,^(/(parsertemp389588,parsertemp389591),2.0)),%*%(*(-(2364_2361_Y,X_batch),-(int318,parsertemp389606)),W4))
::STMT
MATRIX:d_r_rev,Hd_1,Hd_2
t(colSums(*(-(Hd_1,Hd_2),d_r_rev)))
::STMT
MATRIX:I,parsertemp472360
LITERAL_FLOAT:0.0
*(I,==(!=(*(parsertemp472360,I),0.0),0.0))
::STMT
LITERAL_FLOAT:1.0,0.8
-(1.0,-(1.0,0.8))
::STMT
MATRIX:parsertemp222700,parsertemp222697,parsertemp222694
FLOAT:int857
t(<=(+(*(int857,parsertemp222694),t(parsertemp222697)),parsertemp222700))
::STMT
FLOAT:int227,429_C
LITERAL_FLOAT:1.0,2.0
sqrt(/(2.0,*(*(429_C,int227),1.0)))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:-1.0,2.0
*(^(finite_linear_terms,2.0),-1.0)
::STMT
MATRIX:X,Y,K
FLOAT:x
LITERAL_FLOAT:1.0
*(-(*(K,-(X,X)),-(Y,Y)),-(1.0,/(-(x,X),-(X,X))))
::STMT
MATRIX:V
-(max(V),min(V))
::STMT
FLOAT:2690_Hin
LITERAL_FLOAT:0.0,2.0
+(2690_Hin,*(2.0,0.0))
::STMT
MATRIX:parsertemp386457,parsertemp386459,neighbors,parsertemp386455
LITERAL_FLOAT:0.0
==(-(*(*(neighbors,parsertemp386455),parsertemp386457),parsertemp386459),0.0)
::STMT
MATRIX:grad
FLOAT:int396,int927
sqrt(sum(*(*(grad,int927),*(grad,int396))))
::STMT
MATRIX:residuals_vector
FLOAT:lambda
/(sum(residuals_vector),+(nrow(residuals_vector),lambda))
::STMT
MATRIX:g0_2,g0_1,g0
LITERAL_FLOAT:1.0E-12
*(cast.FLOAT(%*%(t(g0),+(g0_1,g0_2))),1.0E-12)
::STMT
MATRIX:Yhat_prime,E
colSums(*(E,Yhat_prime))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626
*(1.0005002501250626,m2)
::STMT
FLOAT:sim_score_left,sim_score_right,sim_score_parent
-(+(sim_score_left,sim_score_right),sim_score_parent)
::STMT
MATRIX:samples_vs_runs_map,X_samples_sq_norms,parsertemp222439,parsertemp222443,X_samples
LITERAL_FLOAT:2.0
-(+(X_samples_sq_norms,%*%(samples_vs_runs_map,rowSums(parsertemp222439))),*(2.0,rowSums(*(X_samples,parsertemp222443))))
::STMT
MATRIX:parsertemp500609,parsertemp500606,parsertemp500604,X,y
FLOAT:int564
-(%*%(X,*(*(parsertemp500604,parsertemp500606),>(parsertemp500609,int564))),y)
::STMT
FLOAT:window_size,i,k
LITERAL_FLOAT:2.0
-(+(+(i,k),window_size),2.0)
::STMT
LITERAL_FLOAT:4.890349128221754
4.890349128221754
::STMT
MATRIX:negSampleMeans,negSamples
FLOAT:int877,int492
LITERAL_FLOAT:1.0,150.0
/(-(colSums(^(negSamples,int492)),*(150.0,^(negSampleMeans,int877))),-(150.0,1.0))
::STMT
MATRIX:y_val,preds
%*%(t(-(y_val,preds)),-(y_val,preds))
::STMT
MATRIX:A
abs(t(A))
::STMT
FLOAT:check_max,check_min
LITERAL_FLOAT:2.0
/(2.0,-(check_max,check_min))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,253.0
+(-(253.0,idx),1.0)
::STMT
MATRIX:ZtZ,Xm,parsertemp265719,parsertemp265718,parsertemp265714
LITERAL_FLOAT:2.0
-(+(sum(*(Xm,Xm)),trace(*(ZtZ,parsertemp265714))),*(2.0,sum(%*%(parsertemp265718,parsertemp265719))))
::STMT
MATRIX:W
FLOAT:int573,parsertemp97,int148,m4,int722,wt,int371
LITERAL_FLOAT:1.0
-(*(*(^(wt,int371),+(wt,int148)),m4),*(*(*(int722,parsertemp97),^(wt,int573)),-(sum(W),1.0)))
::STMT
MATRIX:r_CG,p_CG
FLOAT:rr_CG,old_rr_CG
LITERAL_FLOAT:-1.0
+(*(r_CG,-1.0),*(/(rr_CG,old_rr_CG),p_CG))
::STMT
FLOAT:int153,float879,float406,int53
LITERAL_FLOAT:1.0,3.0,6.0,2003.0
/(*(*(6.0,2003.0),-(2003.0,1.0)),*(*(-(int153,float879),+(int53,float406)),+(2003.0,3.0)))
::STMT
FLOAT:429_C
LITERAL_FLOAT:1.0,2.0
/(2.0,*(*(429_C,1.0),1.0))
::STMT
MATRIX:S,V,parsertemp149285
FLOAT:int503,delta2
LITERAL_FLOAT:2.0
+(^(sum(*(S,V)),2.0),*(sum(^(V,int503)),-(delta2,sum(parsertemp149285))))
::STMT
MATRIX:p,q,A
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),%*%(t(A),%*%(A,p)))
::STMT
MATRIX:r,Hd
FLOAT:parsertemp44049
sum(*(-(r,*(parsertemp44049,Hd)),-(r,*(parsertemp44049,Hd))))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:int633,int424
+(1.0,exp(rand(int633,int424,0.0,0.0)))
::STMT
MATRIX:s,d,tau
+(s,*(cast.FLOAT(tau),d))
::STMT
MATRIX:leaf_ids
FLOAT:boundary_left,step_size
&(>=(leaf_ids,boundary_left),<(leaf_ids,+(boundary_left,step_size)))
::STMT
MATRIX:P,Q,Y,Z,ZERODIAG
*(Y,rowSums(*(-(P,Q),*(Z,ZERODIAG))))
::STMT
MATRIX:B,X,y
-(y,%*%(X,B))
::STMT
MATRIX:s,d
FLOAT:norm_r2,alpha_deno
%*%(t(+(s,*(norm_r2,d))),+(s,*(/(norm_r2,alpha_deno),d)))
::STMT
MATRIX:parsertemp437192,parsertemp437191,parsertemp437237,mean,weight,avgMean
FLOAT:int874
LITERAL_FLOAT:1.0E-9
+(+(-(/(parsertemp437237,parsertemp437192),*(int874,avgMean)),/(*(mean,parsertemp437191),t(weight))),1.0E-9)
::STMT
MATRIX:W,X,H,parsertemp411105,parsertemp411107
LITERAL_FLOAT:1.0E-8
/(%*%(X,t(*(H,parsertemp411105))),+(%*%(W,%*%(H,parsertemp411107)),1.0E-8))
::STMT
FLOAT:m2
LITERAL_FLOAT:5.0,1.0005
*(5.0,sqrt(*(1.0005,m2)))
::STMT
MATRIX:parsertemp129186,parsertemp129185,key_unique,key
==(%*%(key_unique,parsertemp129185),%*%(parsertemp129186,t(key)))
::STMT
MATRIX:hubs
LITERAL_FLOAT:2.0
abs(sum(^(-(hubs,hubs),2.0)))
::STMT
MATRIX:P,N_T,X,parsertemp230442
<=(rowSums(*(X,parsertemp230442)),%*%(P,t(N_T)))
::STMT
MATRIX:R,parsertemp497774
LITERAL_FLOAT:0.0
-(ncol(R),sum(==(colSums(parsertemp497774),0.0)))
::STMT
MATRIX:A
FLOAT:parsertemp22359,a21,parsertemp22358,int923
LITERAL_FLOAT:1.0
sqrt(+(+(+(parsertemp22358,parsertemp22359),/(int923,a21)),/(1.0,cast.FLOAT(A))))
::STMT
LITERAL_FLOAT:8.660254037844387
8.660254037844387
::STMT
MATRIX:y
FLOAT:beta
LITERAL_FLOAT:2.0
^(-(beta,y),2.0)
::STMT
MATRIX:D,parsertemp570375,classMeans
%*%(-(D,classMeans),parsertemp570375)
::STMT
FLOAT:481_Hf,481_Hin
LITERAL_FLOAT:0.0,2.0
-(+(481_Hin,*(2.0,0.0)),481_Hf)
::STMT
MATRIX:parsertemp10964,C
sum(==(parsertemp10964,C))
::STMT
MATRIX:parsertemp146940,184_dtemp,mW3,outr2
FLOAT:beta1
LITERAL_FLOAT:1.0
+(*(beta1,mW3),*(-(1.0,beta1),%*%(t(outr2),-(184_dtemp,parsertemp146940))))
::STMT
MATRIX:G,authorities
max(%*%(G,authorities))
::STMT
MATRIX:nI
LITERAL_FLOAT:0.25
*(0.25,ncol(nI))
::STMT
FLOAT:int455,int456,o_init,N,o
LITERAL_FLOAT:-1.0
/(*(-(*(int456,o_init),*(int455,o)),-1.0),N)
::STMT
MATRIX:confusionM
min(colSums(confusionM))
::STMT
MATRIX:parsertemp383011,X,X_nonzero_ind
LITERAL_FLOAT:2.0
sum(*(X_nonzero_ind,^(-(X,parsertemp383011),2.0)))
::STMT
MATRIX:parsertemp498248,m_iter_err_sum,m_err
FLOAT:int526,i_process_item
LITERAL_FLOAT:2.0
*(*(2.0,/(-(int526,parsertemp498248),i_process_item)),+(colSums(m_err),m_iter_err_sum))
::STMT
MATRIX:std,sts,rad
FLOAT:delta2
/(-(delta2,sts),+(std,rad))
::STMT
MATRIX:_sbcvar1708
LITERAL_FLOAT:105.0
+(105.0,nrow(_sbcvar1708))
::STMT
MATRIX:parsertemp414375,parsertemp414377,parsertemp414379
FLOAT:int577,int293
LITERAL_FLOAT:0.0,1.0,199.0
*(/(-(t(parsertemp414375),*(int577,parsertemp414377)),199.0),-(1.0,<=(/(parsertemp414379,int293),0.0)))
::STMT
MATRIX:maskNAN
LITERAL_FLOAT:0.0
!=(rowSums(maskNAN),0.0)
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:-2.0,-1.0
*(sqrt(*(-2.0,parsertemp171083)),-1.0)
::STMT
MATRIX:parsertemp170248,parsertemp170253,parsertemp170240,lt_pos_neg
FLOAT:float811,float257,float69
+(lt_pos_neg,*(*(-(float257,lt_pos_neg),exp(parsertemp170253)),*(/(float811,parsertemp170240),+(float69,parsertemp170248))))
::STMT
MATRIX:prec_chol,X,mu
FLOAT:int69
%*%(X,t(*(mu,^(prec_chol,int69))))
::STMT
MATRIX:parsertemp13624,_sbcvar11
FLOAT:int171
LITERAL_FLOAT:2.0,1000.0
/(^(-(_sbcvar11,/(parsertemp13624,int171)),2.0),/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0))
::STMT
MATRIX:r,Hd
FLOAT:parsertemp44049
LITERAL_FLOAT:2.0
sum(^(-(r,*(parsertemp44049,Hd)),2.0))
::STMT
MATRIX:tmp_Xw,parsertemp260747,Y,Xw
LITERAL_FLOAT:0.0,1.0
*(-(1.0,*(Y,+(Xw,parsertemp260747))),>(-(1.0,*(Y,tmp_Xw)),0.0))
::STMT
MATRIX:out2,parsertemp146942,184_dscores,maskd1,out1,W2
FLOAT:p,int336
LITERAL_FLOAT:0.0
*(*(>(out1,0.0),/(maskd1,p)),%*%(*(>(out2,int336),%*%(184_dscores,parsertemp146942)),t(W2)))
::STMT
MATRIX:is_LT_infinite,parsertemp171366,p_one_m_one
LITERAL_FLOAT:3.141592653589793,1.0,0.5
*(+(0.5,/(%*%(parsertemp171366,p_one_m_one),3.141592653589793)),-(1.0,rowSums(is_LT_infinite)))
::STMT
MATRIX:parsertemp231012
FLOAT:parsertemp231013
LITERAL_FLOAT:1.0,2.0
-(1.0,sum(^(/(parsertemp231012,parsertemp231013),2.0)))
::STMT
MATRIX:V,y
LITERAL_FLOAT:0.0,2.0
^(-(0.0,%*%(t(V),y)),2.0)
::STMT
MATRIX:c,x_r
LITERAL_FLOAT:2.0
-(*(2.0,x_r),c)
::STMT
MATRIX:X
FLOAT:int758
LITERAL_FLOAT:1.0
/(1.0,+(1.0,exp(*(X,int758))))
::STMT
MATRIX:vW1,W1,dW1
FLOAT:2727_mu,2727_lr
LITERAL_FLOAT:1.0
+(-(W1,*(2727_mu,vW1)),*(+(1.0,2727_mu),-(*(2727_mu,vW1),*(2727_lr,dW1))))
::STMT
MATRIX:W
FLOAT:m2,wt,float491
/(sqrt(/(*(m2,wt),-(wt,float491))),sqrt(sum(round(W))))
::STMT
MATRIX:P,Q
LITERAL_FLOAT:-2.0
+(*(-2.0,%*%(P,t(Q))),P)
::STMT
MATRIX:X,y
FLOAT:float984,float563
LITERAL_FLOAT:-1.0
INT:int154,int667
exp(*(*(y,-1.0),%*%(X,rand(int154,int667,float984,float563))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,1024.0
-(+(i,1024.0),1.0)
::STMT
MATRIX:y
LITERAL_FLOAT:1.0
/(1.0,nrow(y))
::STMT
MATRIX:X
*(nrow(X),ncol(X))
::STMT
MATRIX:_sbcvar78
LITERAL_FLOAT:10000.0
-(_sbcvar78,/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0))
::STMT
MATRIX:parsertemp43619
LITERAL_FLOAT:1.0
-(1.0,/(1.0,+(1.0,exp(parsertemp43619))))
::STMT
MATRIX:parsertemp383012,parsertemp383020,parsertemp383017,X_nonzero_ind
FLOAT:reg,int800
+(sum(*(X_nonzero_ind,^(parsertemp383012,int800))),*(reg,+(sum(parsertemp383017),sum(parsertemp383020))))
::STMT
MATRIX:parsertemp400673,W4_rand
FLOAT:int116,int619
LITERAL_FLOAT:0.08720414403938946
%*%(*(0.08720414403938946,W4_rand),t(/(-(parsertemp400673,int619),+(parsertemp400673,int116))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,1048.0
-(+(i,1048.0),1.0)
::STMT
MATRIX:parsertemp570381,parsertemp570372,parsertemp570376,parsertemp570377
FLOAT:int431,int433,int633,int645
+(parsertemp570381,-(*(/(int433,int431),parsertemp570372),*(/(int633,int645),%*%(parsertemp570376,parsertemp570377))))
::STMT
MATRIX:parsertemp389580,parsertemp389562,parsertemp389565,2365_delta3,W2,W3
FLOAT:int926
LITERAL_FLOAT:1.0,2.0
*(-(1.0,^(/(parsertemp389562,parsertemp389565),2.0)),%*%(*(-(int926,parsertemp389580),%*%(2365_delta3,W3)),W2))
::STMT
MATRIX:Y,parsertemp2798,Xw
FLOAT:int92
LITERAL_FLOAT:0.0,1.0,2.0
^(*(>(-(int92,parsertemp2798),0.0),-(1.0,*(Y,Xw))),2.0)
::STMT
MATRIX:s,d,alpha
t(-(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:parsertemp31189,parsertemp31187
FLOAT:int226,int613
LITERAL_FLOAT:1.0,2.0,7000.0
/(^(/(-(parsertemp31187,parsertemp31189),-(int226,int613)),2.0),*(^(7000.0,2.0),-(7000.0,1.0)))
::STMT
MATRIX:col,less_than_lb,parsertemp24102,parsertemp24103
FLOAT:int760,num_bins,int226
LITERAL_FLOAT:1.0
+(*(-(-(int226,less_than_lb),>(col,num_bins)),+(round(parsertemp24102),1.0)),*(>(+(parsertemp24103,int760),num_bins),num_bins))
::STMT
FLOAT:m2Y,sigmaX,covXY,parsertemp26584
/(covXY,*(sigmaX,sqrt(*(m2Y,parsertemp26584))))
::STMT
MATRIX:g,parsertemp169907
sqrt(sum(*(+(g,parsertemp169907),+(g,parsertemp169907))))
::STMT
MATRIX:2814_K,2814_X,2814_Y
FLOAT:int302
+(*(cast.FLOAT(-(int302,2814_K)),-(cast.FLOAT(2814_X),cast.FLOAT(2814_X))),-(cast.FLOAT(2814_Y),cast.FLOAT(2814_Y)))
::STMT
MATRIX:Y
cast.MATRIX(min(Y))
::STMT
MATRIX:tmp_Xw,parsertemp260749,Y
FLOAT:int438
LITERAL_FLOAT:0.0,1.0
*(*(-(1.0,*(Y,tmp_Xw)),>(-(int438,parsertemp260749),0.0)),Y)
::STMT
MATRIX:parsertemp31732,parsertemp31734,dssm,dsem
FLOAT:5_eAvg
LITERAL_FLOAT:1.0
-(/(/(-(parsertemp31734,dsem),-(parsertemp31732,dssm)),5_eAvg),1.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,133.0
*(133.0,-(i,1.0))
::STMT
MATRIX:out2,parsertemp146942,184_dscores,outd1
FLOAT:beta1,int17
LITERAL_FLOAT:1.0
*(-(1.0,beta1),%*%(t(outd1),*(>(out2,int17),%*%(184_dscores,parsertemp146942))))
::STMT
MATRIX:_sbcvar92
LITERAL_FLOAT:0.0
==(/(%*%(rowSums(_sbcvar92),colSums(_sbcvar92)),sum(_sbcvar92)),0.0)
::STMT
MATRIX:parsertemp382672,parsertemp382681,parsertemp382668,parsertemp382678
FLOAT:reg
LITERAL_FLOAT:0.5
+(*(0.5,sum(*(parsertemp382668,parsertemp382672))),*(*(0.5,reg),+(sum(parsertemp382678),sum(parsertemp382681))))
::STMT
MATRIX:intercept
FLOAT:int172,int470
INT:num_records,int150
%*%(rand(num_records,int150,int172,int470),intercept)
::STMT
MATRIX:neighbors
FLOAT:eps
<=(-(neighbors,diag(diag(neighbors))),eps)
::STMT
MATRIX:R,w
INT:parsertemp31673,int63
+(R,diag(rand(parsertemp31673,int63,cast.FLOAT(w),cast.FLOAT(w))))
::STMT
MATRIX:240_elt,240_ones_ctg
%*%(rowSums(240_elt),t(240_ones_ctg))
::STMT
MATRIX:p
FLOAT:eps
*(eps,p)
::STMT
MATRIX:sample_rec_ids
FLOAT:num_records
LITERAL_FLOAT:1.0
*(+(num_records,1.0),-(1.0,<=(sample_rec_ids,num_records)))
::STMT
MATRIX:s,parsertemp44005,d
FLOAT:parsertemp44004
cast.FLOAT(%*%(t(+(s,parsertemp44005)),+(s,*(parsertemp44004,d))))
::STMT
MATRIX:X_batch,2365_delta2,W2,parsertemp389567
FLOAT:int376
%*%(t(*(-(int376,parsertemp389567),%*%(2365_delta2,W2))),X_batch)
::STMT
MATRIX:A,b
LITERAL_FLOAT:-1.0
*(%*%(*(t(A),-1.0),b),-1.0)
::STMT
MATRIX:X,mu,precisions
LITERAL_FLOAT:2.0
*(2.0,%*%(X,t(*(mu,precisions))))
::STMT
FLOAT:var_power,link_power
LITERAL_FLOAT:2.0
-(/(-(2.0,var_power),link_power),2.0)
::STMT
MATRIX:Y,the_exp
FLOAT:int14
-(*(rowSums(Y),exp(-(int14,the_exp))),Y)
::STMT
MATRIX:cumHistMul,offset
<=(offset,cumHistMul)
::STMT
FLOAT:current_hash_value
LITERAL_FLOAT:1.0,33.0
-(33.0,+(current_hash_value,1.0))
::STMT
MATRIX:F,parsertemp27458
FLOAT:W
LITERAL_FLOAT:0.0,1.0E-4
+(*(==(/(parsertemp27458,W),0.0),1.0E-4),/(%*%(rowSums(F),colSums(F)),sum(F)))
::STMT
MATRIX:D,parsertemp570375,classMeans
LITERAL_FLOAT:0.5
*(0.5,%*%(%*%(-(D,classMeans),parsertemp570375),t(-(D,classMeans))))
::STMT
MATRIX:parsertemp393571,W3_rand,parsertemp393574
LITERAL_FLOAT:0.128920512778062
t(%*%(*(0.128920512778062,W3_rand),t(/(parsertemp393571,parsertemp393574))))
::STMT
MATRIX:_sbcvar1716
LITERAL_FLOAT:120.0
+(120.0,nrow(_sbcvar1716))
::STMT
MATRIX:negSampleMeans,negSamples
LITERAL_FLOAT:2.0,150.0
-(colSums(^(negSamples,2.0)),*(150.0,^(negSampleMeans,2.0)))
::STMT
MATRIX:Mask1
LITERAL_FLOAT:0.0
>(colSums(Mask1),0.0)
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0,1.0
INT:int942,m
-(%*%(X,rand(m,int942,0.0,1.0)),y)
::STMT
MATRIX:MDx,MUx,MLx
+(+(MUx,MDx),MLx)
::STMT
FLOAT:ssPrev,parsertemp265727,parsertemp265726
LITERAL_FLOAT:1.0
abs(-(1.0,/(/(parsertemp265726,parsertemp265727),ssPrev)))
::STMT
MATRIX:ytest
LITERAL_FLOAT:2.0
^(/(sum(ytest),nrow(ytest)),2.0)
::STMT
MATRIX:means,Y_counts,parsertemp560529
LITERAL_FLOAT:1.0
sum(<(*(means,%*%(Y_counts,parsertemp560529)),1.0))
::STMT
MATRIX:t,parsertemp171088,parsertemp171083,parsertemp171094
FLOAT:float707
LITERAL_FLOAT:0.0,1.0,2.515517
+(-(0.0,sqrt(*(float707,parsertemp171083))),/(+(2.515517,*(t,parsertemp171088)),+(1.0,*(t,parsertemp171094))))
::STMT
LITERAL_FLOAT:2000.0
sqrt(2000.0)
::STMT
MATRIX:parsertemp31024,parsertemp31022
FLOAT:int777
LITERAL_FLOAT:1.0,100.0
/(/(-(colSums(parsertemp31022),*(int777,parsertemp31024)),-(100.0,1.0)),100.0)
::STMT
MATRIX:r,d,parsertemp43999
cast.FLOAT(/(sum(*(r,r)),%*%(t(d),+(d,parsertemp43999))))
::STMT
MATRIX:C,parsertemp265706,parsertemp265704,Z,XtZ
FLOAT:ss,ZtZ_sum
trace(*(+(%*%(parsertemp265704,Z),*(parsertemp265706,ss)),%*%(t(C),/(XtZ,ZtZ_sum))))
::STMT
FLOAT:sample_frac
LITERAL_FLOAT:0.0,1.0
INT:parsertemp553005,int999
<=(rand(parsertemp553005,int999,0.0,1.0),sample_frac)
::STMT
MATRIX:classFeatureCounts
FLOAT:laplaceCorrection
+(classFeatureCounts,laplaceCorrection)
::STMT
MATRIX:U,row_nonzeros
LITERAL_FLOAT:2.0
*(^(U,2.0),row_nonzeros)
::STMT
MATRIX:184_probs,183_dpred,parsertemp146939,outr2
FLOAT:beta1
LITERAL_FLOAT:1.0
*(-(1.0,beta1),%*%(t(outr2),-(*(183_dpred,184_probs),*(184_probs,parsertemp146939))))
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0,-1.0
INT:int578,int705
*(*(y,-1.0),%*%(X,rand(int578,int705,0.0,0.0)))
::STMT
FLOAT:int625
LITERAL_FLOAT:-1.0
INT:int426,int191
+(diag(rand(int426,int191,-1.0,-1.0)),int625)
::STMT
MATRIX:Bxu,Bxd
LITERAL_FLOAT:2.0
diag(*(2.0,+(Bxd,Bxu)))
::STMT
MATRIX:45_CVars,45_CFreqs
FLOAT:float192,int474,parsertemp13703,int43,int766
LITERAL_FLOAT:1.0,1000.0
/(sum(*(-(45_CFreqs,int43),45_CVars)),*(-(1000.0,1.0),/(*(parsertemp13703,int766),-(int474,float192))))
::STMT
MATRIX:d,parsertemp43996,parsertemp43997
FLOAT:C
%*%(t(d),+(d,*(C,%*%(parsertemp43996,parsertemp43997))))
::STMT
MATRIX:p,parsertemp1936,parsertemp1937
FLOAT:norm_r2
/(norm_r2,cast.FLOAT(%*%(t(p),+(parsertemp1936,parsertemp1937))))
::STMT
MATRIX:parsertemp11741
LITERAL_FLOAT:1.0
+(1.0,parsertemp11741)
::STMT
MATRIX:distance_matrix,parsertemp447763,upper_triangle
+(+(distance_matrix,t(upper_triangle)),diag(parsertemp447763))
::STMT
MATRIX:s,parsertemp44016
FLOAT:delta2
-(delta2,cast.FLOAT(%*%(t(s),-(s,parsertemp44016))))
::STMT
LITERAL_FLOAT:2.225E-307
2.225E-307
::STMT
MATRIX:col,less_than_lb,parsertemp24102,parsertemp24103
FLOAT:int918,num_bins,int391
LITERAL_FLOAT:1.0
+(*(-(-(int391,less_than_lb),>(col,num_bins)),+(round(parsertemp24102),1.0)),*(>(+(parsertemp24103,int918),num_bins),num_bins))
::STMT
MATRIX:A,B
+(ncol(A),ncol(B))
::STMT
FLOAT:log_l,new_log_l
LITERAL_FLOAT:1.0E-14
*(+(abs(log_l),abs(new_log_l)),1.0E-14)
::STMT
LITERAL_FLOAT:1.0,50.0
*(50.0,1.0)
::STMT
MATRIX:X
abs(X)
::STMT
FLOAT:step
LITERAL_FLOAT:0.95
*(step,0.95)
::STMT
MATRIX:parsertemp415351,ytest
FLOAT:parsertemp415362,n
LITERAL_FLOAT:1.0
sqrt(/(-(sum(parsertemp415351),*(n,parsertemp415362)),-(nrow(ytest),1.0)))
::STMT
MATRIX:t_gp,parsertemp170245,parsertemp170239
FLOAT:float726
LITERAL_FLOAT:1.0,-0.284496736,0.254829592
+(0.254829592,*(/(1.0,+(float726,parsertemp170239)),+(-0.284496736,*(t_gp,parsertemp170245))))
::STMT
FLOAT:parsertemp557354,prob_true
LITERAL_FLOAT:0.6931471805599453
/(*(prob_true,parsertemp557354),0.6931471805599453)
::STMT
FLOAT:num_records,i
LITERAL_FLOAT:1.0
*(num_records,-(i,1.0))
::STMT
FLOAT:num_min,num_max
+(num_min,num_max)
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,253.0
-(n,-(+(i,253.0),1.0))
::STMT
MATRIX:tmp,Y
LITERAL_FLOAT:0.0
>(1-*(Y,tmp),0.0)
::STMT
MATRIX:b,X,sb
exp(%*%(X,+(b,sb)))
::STMT
MATRIX:parsertemp436668,X,parsertemp436672
LITERAL_FLOAT:1.0,2.0
INT:int254,parsertemp436666
-(*(rand(int254,parsertemp436666,1.0,1.0),t(rowSums(parsertemp436668))),*(2.0,%*%(X,t(parsertemp436672))))
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,256.0
-(n,-(+(i,256.0),1.0))
::STMT
LITERAL_FLOAT:4.0
INT:int785,int18
rand(int18,int785,4.0,4.0)
::STMT
MATRIX:parsertemp115858,X,parsertemp115862,parsertemp115860
FLOAT:parsertemp115863,n
LITERAL_FLOAT:0.0,1.0
*(/(-(t(parsertemp115858),*(n,parsertemp115860)),-(nrow(X),1.0)),-(1.0,<=(/(parsertemp115862,parsertemp115863),0.0)))
::STMT
MATRIX:obj,objnew,gs
cast.FLOAT(-(-(objnew,obj),gs))
::STMT
MATRIX:determinants
FLOAT:nFeats
LITERAL_FLOAT:6.283185307179586
*(^(6.283185307179586,nFeats),determinants)
::STMT
MATRIX:R
LITERAL_FLOAT:1.0,2.0
INT:parsertemp500303,int480
%*%(rowSums(^(R,2.0)),rand(int480,parsertemp500303,1.0,1.0))
::STMT
MATRIX:lambda,g,beta
*(+(g,*(lambda,beta)),+(g,*(lambda,beta)))
::STMT
MATRIX:s,d,alpha
FLOAT:parsertemp44004
%*%(t(+(s,*(parsertemp44004,d))),+(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:parsertemp31023,parsertemp31025,parsertemp31030,parsertemp31032
FLOAT:int254,int53,int315,int955
LITERAL_FLOAT:150.0,100.0
+(/(/(-(parsertemp31023,parsertemp31025),-(int955,int254)),100.0),/(/(-(parsertemp31030,parsertemp31032),-(int53,int315)),150.0))
::STMT
MATRIX:parsertemp146940,184_dtemp,outr2
FLOAT:beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,beta2),^(%*%(t(outr2),-(184_dtemp,parsertemp146940)),2.0))
::STMT
MATRIX:parsertemp40086,addedE,addedX2
/(t(%*%(t(addedE),addedX2)),t(parsertemp40086))
::STMT
MATRIX:lambda,parsertemp170067,scale_X,parsertemp170065,p_CG
+(*(cast.FLOAT(lambda),cast.FLOAT(p_CG)),*(cast.FLOAT(diag(scale_X)),cast.FLOAT(%*%(parsertemp170065,parsertemp170067))))
::STMT
MATRIX:e
LITERAL_FLOAT:4.0
*(4.0,e)
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.0002795638803466
sqrt(*(m2X,1.0002795638803466))
::STMT
FLOAT:parsertemp170147,parsertemp170145,p_CG,z
LITERAL_FLOAT:-1.0,2.0
/(+(*(*(z,p_CG),-1.0),sqrt(-(parsertemp170145,parsertemp170147))),sum(^(p_CG,2.0)))
::STMT
MATRIX:P,minD,D,X
%*%(t(/(<=(D,minD),rowSums(P))),X)
::STMT
MATRIX:present_domain_vals_mat,parsertemp27485
FLOAT:my
LITERAL_FLOAT:2.0
^(-(%*%(present_domain_vals_mat,parsertemp27485),my),2.0)
::STMT
MATRIX:D
LITERAL_FLOAT:1.0
/(1.0,+(D,1.0))
::STMT
MATRIX:Y
FLOAT:bernoulli_No_label
LITERAL_FLOAT:1.0
-(1.0,==(Y,bernoulli_No_label))
::STMT
FLOAT:window_size,k,n
LITERAL_FLOAT:2.0
-(+(-(n,window_size),2.0),k)
::STMT
MATRIX:tmp,w,out
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(out,out))),*(0.5,cast.FLOAT(%*%(w,tmp))))
::STMT
MATRIX:flip_neg,is_LT_infinite,Y,parsertemp171294
rowSums(*(Y,%*%(+(parsertemp171294,is_LT_infinite),flip_neg)))
::STMT
MATRIX:lambda,B,S
LITERAL_FLOAT:2.0
*(lambda,^(+(B,S),2.0))
::STMT
FLOAT:n_components,cov_param,n_features
LITERAL_FLOAT:1.0
-(+(+(cov_param,*(n_features,n_components)),n_components),1.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
*(-(0.0,sum(X)),-(0.0,sum(X)))
::STMT
FLOAT:sample_block_size,num_samples
LITERAL_FLOAT:1.0
-(*(sample_block_size,num_samples),1.0)
::STMT
MATRIX:R,parsertemp500359
LITERAL_FLOAT:2.0
%*%(rowSums(^(R,2.0)),parsertemp500359)
::STMT
MATRIX:intercept,X,beta
FLOAT:int198,int797
INT:num_records,int979
+(%*%(X,beta),%*%(rand(num_records,int979,int797,int198),intercept))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0
exp(-(0.0,exp(finite_linear_terms)))
::STMT
MATRIX:output_values
FLOAT:log_odds,learning_rate
LITERAL_FLOAT:2.7182818284
^(2.7182818284,+(log_odds,*(learning_rate,sum(output_values))))
::STMT
MATRIX:log_prob,X
FLOAT:parsertemp436712
LITERAL_FLOAT:-0.5
*(-0.5,+(*(ncol(X),parsertemp436712),log_prob))
::STMT
MATRIX:parsertemp174552
LITERAL_FLOAT:0.0
sum(abs(==(parsertemp174552,0.0)))
::STMT
MATRIX:dl_matrix
FLOAT:cost
+(cast.FLOAT(dl_matrix),cost)
::STMT
MATRIX:C,Xm,parsertemp265701
%*%(t(Xm),%*%(Xm,%*%(C,parsertemp265701)))
::STMT
LITERAL_FLOAT:6.0
sqrt(6.0)
::STMT
MATRIX:X
LITERAL_FLOAT:-1.0
exp(*(X,-1.0))
::STMT
MATRIX:parsertemp72202,subspace_idx
LITERAL_FLOAT:1.0
diag(/(1.0,<(-(subspace_idx,parsertemp72202),1.0)))
::STMT
MATRIX:y_corr
FLOAT:link_power
LITERAL_FLOAT:0.0
^(+(y_corr,==(y_corr,0.0)),link_power)
::STMT
MATRIX:prec_chol,X,parsertemp436696,bc_matrix,parsertemp436692
FLOAT:int149
LITERAL_FLOAT:2.0
+(-(*(bc_matrix,t(parsertemp436692)),*(2.0,%*%(X,parsertemp436696))),%*%(rowSums(*(X,X)),t(^(prec_chol,int149))))
::STMT
MATRIX:mean,X,weight,parsertemp437211,parsertemp437629
+(/(%*%(t(parsertemp437211),-(X,mean)),cast.FLOAT(weight)),diag(parsertemp437629))
::STMT
MATRIX:parsertemp170158,parsertemp170136
FLOAT:r_CG,g_reg,278_sq_root_d,z,parsertemp170171,parsertemp170150
LITERAL_FLOAT:0.5
+(*(0.5,*(cast.FLOAT(z),+(r_CG,g_reg))),*(+(+(parsertemp170171,z),sum(parsertemp170158)),/(-(parsertemp170150,278_sq_root_d),sum(parsertemp170136))))
::STMT
MATRIX:E,O
/(*(sum(-(O,E)),sum(-(O,E))),sum(E))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:2.0
exp(*(linear_terms,2.0))
::STMT
MATRIX:S,addedX2
FLOAT:level
rowSums(==(%*%(S,t(addedX2)),level))
::STMT
MATRIX:parsertemp410080,d_r_rev,parsertemp410079,parsertemp410090
LITERAL_FLOAT:-1.0
+(*(cast.FLOAT(%*%(parsertemp410079,parsertemp410080)),-1.0),cast.FLOAT(%*%(t(d_r_rev),parsertemp410090)))
::STMT
FLOAT:i,subvector_size
LITERAL_FLOAT:1.0
+(*(-(i,1.0),subvector_size),1.0)
::STMT
MATRIX:Y_prob
/(Y_prob,rowSums(Y_prob))
::STMT
MATRIX:scale_X,p_CG
*(cast.FLOAT(diag(scale_X)),p_CG)
::STMT
MATRIX:prob
FLOAT:threshold
LITERAL_FLOAT:0.0
==(>(prob,threshold),0.0)
::STMT
MATRIX:288_left,291_d,288_right
LITERAL_FLOAT:0.0,2.0
+(/(^(sum(288_left),2.0),+(sum(291_d),0.0)),/(^(sum(288_right),2.0),+(sum(291_d),0.0)))
::STMT
LITERAL_FLOAT:1.0E9
1.0E9
::STMT
MATRIX:y_corr
FLOAT:link_power
^(y_corr,link_power)
::STMT
MATRIX:X_batch,186_dX,parsertemp146949,parsertemp146957,parsertemp146955
LITERAL_FLOAT:2.0
^(%*%(t(X_batch),*(*(parsertemp146957,parsertemp146955),%*%(186_dX,parsertemp146949))),2.0)
::STMT
LITERAL_FLOAT:2.0
sqrt(2.0)
::STMT
MATRIX:W1_rand
LITERAL_FLOAT:0.086386842558136
*(0.086386842558136,W1_rand)
::STMT
MATRIX:S
FLOAT:level
LITERAL_FLOAT:2.0
==(%*%(S,t(S)),-(level,2.0))
::STMT
MATRIX:D,parsertemp220844,ZERODIAG,beta
*(*(exp(*(parsertemp220844,beta)),ZERODIAG),D)
::STMT
MATRIX:resp,mean,X
%*%(t(*(-(X,mean),resp)),-(X,mean))
::STMT
MATRIX:K_inv,scores,Ks
cast.FLOAT(%*%(%*%(t(Ks),K_inv),scores))
::STMT
MATRIX:parsertemp43993,s,d,alpha_deno
+(s,*(/(sum(parsertemp43993),cast.FLOAT(alpha_deno)),d))
::STMT
MATRIX:sb
FLOAT:delta
LITERAL_FLOAT:2.0
-(cast.FLOAT(%*%(t(sb),sb)),^(delta,2.0))
::STMT
MATRIX:surv,se_surv
FLOAT:z_alpha_2
exp(/(*(z_alpha_2,se_surv),surv))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005
*(1.0004995004995005,m2)
::STMT
MATRIX:X
FLOAT:val
<(X,val)
::STMT
MATRIX:parsertemp171366,p_one_m_one
LITERAL_FLOAT:3.141592653589793
/(%*%(parsertemp171366,p_one_m_one),3.141592653589793)
::STMT
MATRIX:W
FLOAT:int98,parsertemp97,int798,m4,int820,int239,wt
LITERAL_FLOAT:1.0
-(*(*(^(wt,int98),+(wt,int798)),m4),*(*(*(int820,parsertemp97),^(wt,int239)),-(sum(W),1.0)))
::STMT
MATRIX:184_probs,183_dpred,parsertemp146939
LITERAL_FLOAT:2.0
^(colSums(-(*(183_dpred,184_probs),*(184_probs,parsertemp146939))),2.0)
::STMT
MATRIX:p_CG,z
FLOAT:trust_delta_sq
LITERAL_FLOAT:2.0
*(sum(^(p_CG,2.0)),-(^(cast.FLOAT(z),2.0),trust_delta_sq))
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,96.0
*(96.0,-(run_index,1.0))
::STMT
MATRIX:X,Y
LITERAL_FLOAT:2.0
/(abs(-(X,Y)),/(+(abs(X),abs(Y)),2.0))
::STMT
FLOAT:padh,Hin,Hf
LITERAL_FLOAT:2.0
-(+(Hin,*(2.0,padh)),Hf)
::STMT
MATRIX:Grad
LITERAL_FLOAT:-1.0,2.0
^(*(Grad,-1.0),2.0)
::STMT
MATRIX:parsertemp389604,X_batch,2364_2361_Y,W4,parsertemp389601
FLOAT:int996
LITERAL_FLOAT:1.0
%*%(*(-(/(parsertemp389601,parsertemp389604),X_batch),-(1.0,^(2364_2361_Y,int996))),W4)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
*(exp(-(0.0,exp(linear_terms))),exp(linear_terms))
::STMT
MATRIX:parsertemp436667,precisions,bc_matrix
*(bc_matrix,t(rowSums(*(parsertemp436667,precisions))))
::STMT
MATRIX:_sbcvar96,_sbcvar95
LITERAL_FLOAT:-1.0
+(%*%(_sbcvar95,_sbcvar96),-1.0)
::STMT
FLOAT:D
LITERAL_FLOAT:0.5
*(0.5,sqrt(D))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),1.0),-(sum(W),2.0)),-(sum(round(W)),3.0))
::STMT
MATRIX:parsertemp496901
FLOAT:std,arch_coef
LITERAL_FLOAT:2.0
*(arch_coef,^(*(cast.FLOAT(parsertemp496901),std),2.0))
::STMT
MATRIX:parsertemp183431,X,mu
FLOAT:int754,N
LITERAL_FLOAT:1.0
-(/(%*%(t(X),X),-(N,1.0)),*(/(N,-(N,int754)),%*%(t(mu),/(parsertemp183431,N))))
::STMT
MATRIX:ss,X2
LITERAL_FLOAT:1.0
-(/(nrow(X2),ss),1.0)
::STMT
MATRIX:r_CG,q_CG
FLOAT:alpha_CG
sum(*(+(r_CG,*(alpha_CG,q_CG)),+(r_CG,*(alpha_CG,q_CG))))
::STMT
FLOAT:int528
LITERAL_FLOAT:0.0
INT:m,int848
sum(abs(rand(m,int848,0.0,int528)))
::STMT
FLOAT:ytest,yhat
LITERAL_FLOAT:1.0,2.0
*(1.0,^(/(-(ytest,yhat),1.0),2.0))
::STMT
MATRIX:z
sqrt(cast.FLOAT(%*%(t(z),z)))
::STMT
MATRIX:X_batch,W_1
LITERAL_FLOAT:0.0
+(%*%(X_batch,W_1),0.0)
::STMT
FLOAT:parsertemp169812
LITERAL_FLOAT:2.302585092994046,0.5
-(/(parsertemp169812,2.302585092994046),0.5)
::STMT
MATRIX:finite_linear_terms
FLOAT:int375
LITERAL_FLOAT:-1.0,2.0
exp(/(*(^(finite_linear_terms,int375),-1.0),2.0))
::STMT
MATRIX:ones_ctg
LITERAL_FLOAT:1.0
-(1.0,diag(ones_ctg))
::STMT
MATRIX:parsertemp11251
LITERAL_FLOAT:2.0
t(^(2.0,parsertemp11251))
::STMT
MATRIX:means,Y_counts,parsertemp560529
LITERAL_FLOAT:5.0
sum(<(*(means,%*%(Y_counts,parsertemp560529)),5.0))
::STMT
FLOAT:parsertemp83
-(cast.MATRIX(parsertemp83),parsertemp83)
::STMT
MATRIX:ts
LITERAL_FLOAT:1.0,4.0
+(-(length(ts),4.0),1.0)
::STMT
MATRIX:parsertemp389604,X_batch,2364_2361_Y,parsertemp389601
FLOAT:int323
LITERAL_FLOAT:1.0
t(*(-(/(parsertemp389601,parsertemp389604),X_batch),-(1.0,^(2364_2361_Y,int323))))
::STMT
MATRIX:parsertemp397824,W3_rand
FLOAT:int796,int27
LITERAL_FLOAT:0.5107539184552492
%*%(*(0.5107539184552492,W3_rand),t(/(-(parsertemp397824,int27),+(parsertemp397824,int796))))
::STMT
MATRIX:X
FLOAT:x
/(-(x,cast.FLOAT(X)),-(cast.FLOAT(X),cast.FLOAT(X)))
::STMT
MATRIX:parsertemp27718,_sbcvar92
FLOAT:220_W
LITERAL_FLOAT:0.0,1.0E-4
+(*(==(/(parsertemp27718,220_W),0.0),1.0E-4),/(%*%(rowSums(_sbcvar92),colSums(_sbcvar92)),sum(_sbcvar92)))
::STMT
MATRIX:Y,predicted_Y
LITERAL_FLOAT:0.0,1000.0
/(sum(==(-(predicted_Y,Y),0.0)),1000.0)
::STMT
FLOAT:x,parsertemp169817
LITERAL_FLOAT:10000.0
/(round(*(x,exp(parsertemp169817))),10000.0)
::STMT
FLOAT:e,decay
LITERAL_FLOAT:1.0
/(1.0,+(1.0,*(decay,e)))
::STMT
MATRIX:z
FLOAT:trust_delta_sq
-(cast.FLOAT(%*%(t(z),z)),trust_delta_sq)
::STMT
MATRIX:W
FLOAT:m2
LITERAL_FLOAT:1.0
/(*(m2,sum(round(W))),-(sum(round(W)),1.0))
::STMT
MATRIX:scale_X,beta
*(cast.FLOAT(diag(scale_X)),cast.FLOAT(beta))
::STMT
MATRIX:X,Y,K
LITERAL_FLOAT:-1.0
+(*(*(K,-1.0),-(X,X)),-(Y,Y))
::STMT
MATRIX:yhat
FLOAT:mean_y_test
LITERAL_FLOAT:2.0
sum(^(-(yhat,mean_y_test),2.0))
::STMT
MATRIX:parsertemp436669,prec_chol,X,parsertemp436673,bc_matrix
FLOAT:int367
LITERAL_FLOAT:2.0
+(-(*(bc_matrix,t(parsertemp436669)),*(2.0,%*%(X,parsertemp436673))),%*%(^(X,2.0),t(^(prec_chol,int367))))
::STMT
FLOAT:sd_Y,sd_X
abs(-(sqrt(sd_Y),sqrt(sd_X)))
::STMT
MATRIX:parsertemp231464
FLOAT:feature_frac
t(<=(parsertemp231464,feature_frac))
::STMT
MATRIX:m_correct
FLOAT:i,in_i_k_min
LITERAL_FLOAT:1.0
/(rowSums(m_correct),-(+(in_i_k_min,i),1.0))
::STMT
MATRIX:R,parsertemp503780
FLOAT:int440,int936
INT:int175,parsertemp503363
%*%(t(+(R,diag(parsertemp503780))),+(R,diag(rand(parsertemp503363,int175,int440,int936))))
::STMT
MATRIX:Q,R
LITERAL_FLOAT:2.0
*(2.0,%*%(R,t(Q)))
::STMT
MATRIX:C,X
LITERAL_FLOAT:-2.0
*(-2.0,%*%(X,t(C)))
::STMT
MATRIX:the_exp
FLOAT:int76,int968
LITERAL_FLOAT:1.0,1.0E7
*(-(1.0,==(+(int76,the_exp),1.0E7)),-(1.0,exp(*(the_exp,int968))))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0,1.0E-6
*(1.0E-6,sum(^(X,2.0)))
::STMT
MATRIX:2701_mask,2702_X
LITERAL_FLOAT:0.0,0.5
*(>(2702_X,0.0),/(2701_mask,0.5))
::STMT
MATRIX:svUpBnd,R,svLowBnd
diag(*(<=(R,cast.FLOAT(svUpBnd)),>(R,cast.FLOAT(svLowBnd))))
::STMT
MATRIX:X
rev(X)
::STMT
MATRIX:obj,parsertemp44077
FLOAT:C,float763,parsertemp44081
cast.FLOAT(-(obj,+(*(float763,parsertemp44077),*(C,parsertemp44081))))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:1.0,1.0E7
-(1.0,==(+(1.0E7,exp(finite_linear_terms)),1.0E7))
::STMT
MATRIX:ot2
FLOAT:int160
LITERAL_FLOAT:25.0,100.0
/(*(sum(>(ot2,int160)),100.0),25.0)
::STMT
FLOAT:link_power
LITERAL_FLOAT:0.5
^(0.5,link_power)
::STMT
MATRIX:prec_chol,mu
LITERAL_FLOAT:2.0
t(*(mu,^(prec_chol,2.0)))
::STMT
LITERAL_FLOAT:192.0
INT:int522,int415
rand(int522,int415,192.0,192.0)
::STMT
LITERAL_FLOAT:10000.0
10000.0
::STMT
MATRIX:U,V_sum
rowSums(rowSums(/(*(U,U),sum(V_sum))))
::STMT
FLOAT:num_records
LITERAL_FLOAT:1920.0,1.0
-(1.0,/(1920.0,num_records))
::STMT
MATRIX:Q3,IQR
LITERAL_FLOAT:1.5
+(Q3,*(1.5,IQR))
::STMT
MATRIX:F
LITERAL_FLOAT:1.0
*(-(nrow(F),1.0),-(ncol(F),1.0))
::STMT
MATRIX:ytest,yhat
FLOAT:mean_y_test
LITERAL_FLOAT:2.0
/(sum(^(-(yhat,mean_y_test),2.0)),sum(^(-(ytest,mean_y_test),2.0)))
::STMT
FLOAT:approx_sample_size,num_records
LITERAL_FLOAT:1.0
-(1.0,/(approx_sample_size,num_records))
::STMT
MATRIX:valueCount,parsertemp552531,resp,Y
rowSums(*(==(+(resp,parsertemp552531),Y),valueCount))
::STMT
MATRIX:pearson_residual_sq
FLOAT:num_records
LITERAL_FLOAT:1.0
/(sum(pearson_residual_sq),-(num_records,1.0))
::STMT
MATRIX:z,parsertemp285752
FLOAT:2234_sq_root_d,parsertemp285742,parsertemp285763,pp_CG
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(z,parsertemp285752))),*(parsertemp285763,/(-(parsertemp285742,2234_sq_root_d),pp_CG)))
::STMT
MATRIX:parsertemp539203,T,event
FLOAT:int631
LITERAL_FLOAT:2.0,0.6666666666666666
/(^(/(*(parsertemp539203,int631),2.0),0.6666666666666666),/(-(max(T),min(T)),sum(event)))
::STMT
MATRIX:prec_chol,parsertemp438810,X,bc_matrix,parsertemp438806
FLOAT:int230,int476
LITERAL_FLOAT:2.0
+(-(*(bc_matrix,t(parsertemp438806)),*(2.0,%*%(X,parsertemp438810))),%*%(rowSums(^(X,int230)),t(^(prec_chol,int476))))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.231641888
*(abs(finite_linear_terms),0.231641888)
::STMT
MATRIX:r_LS
FLOAT:alpha_LS,norm_r2_LS,p_LS
LITERAL_FLOAT:2.0
/(^(+(cast.FLOAT(r_LS),*(alpha_LS,p_LS)),2.0),norm_r2_LS)
::STMT
MATRIX:Y_counts,parsertemp560507,Y,parsertemp560512
-(sum(rowSums(*(Y,parsertemp560507))),sum(*(Y_counts,rowSums(parsertemp560512))))
::STMT
MATRIX:maskd1,out1,186_dX,parsertemp146949
FLOAT:p
LITERAL_FLOAT:0.0
colSums(*(>(out1,0.0),*(/(maskd1,p),%*%(186_dX,parsertemp146949))))
::STMT
LITERAL_FLOAT:6.0,2003.0
*(6.0,2003.0)
::STMT
MATRIX:col_nonzeros,U,parsertemp382849,V,parsertemp382852
FLOAT:reg
+(t(%*%(t(U),*(parsertemp382849,parsertemp382852))),*(*(reg,V),col_nonzeros))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
+(rowSums(classFeatureCounts),*(500.0,1.0))
::STMT
MATRIX:X,parsertemp471907
LITERAL_FLOAT:1.0E-14
sum(>(abs(-(X,parsertemp471907)),1.0E-14))
::STMT
FLOAT:42_m2Y,42_m2X
LITERAL_FLOAT:1.001001001001001
*(sqrt(*(42_m2X,1.001001001001001)),sqrt(*(42_m2Y,1.001001001001001)))
::STMT
MATRIX:posSampleVariances,negSampleMeans,posSampleMeans,negSampleVariances
FLOAT:int673,int18
/(-(posSampleMeans,negSampleMeans),sqrt(+(/(posSampleVariances,int673),/(negSampleVariances,int18))))
::STMT
MATRIX:parsertemp31908,e
FLOAT:l
/(t(%*%(t(e),==(parsertemp31908,l))),t(colSums(==(parsertemp31908,l))))
::STMT
MATRIX:scale_X,p_CG,shift_X
+(*(cast.FLOAT(diag(scale_X)),p_CG),*(cast.FLOAT(shift_X),p_CG))
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int970,int726
LITERAL_FLOAT:1.0,100.0
/(-(colSums(^(posSamples,int726)),*(100.0,^(posSampleMeans,int970))),-(100.0,1.0))
::STMT
MATRIX:X,parsertemp129018
LITERAL_FLOAT:1.0
*(max(parsertemp129018),-(ncol(X),1.0))
::STMT
MATRIX:ss,se
FLOAT:130_eAvg
LITERAL_FLOAT:1.0
-(/(/(se,ss),130_eAvg),1.0)
::STMT
MATRIX:X,parsertemp222929
*(cast.FLOAT(parsertemp222929),-(X,X))
::STMT
MATRIX:yhat
FLOAT:mean_y_test
LITERAL_FLOAT:2.0
^(-(yhat,mean_y_test),2.0)
::STMT
LITERAL_FLOAT:1.0E20
1.0E20
::STMT
MATRIX:Yhat_prime,E,H3
%*%(t(*(E,Yhat_prime)),H3)
::STMT
MATRIX:ssX_p,X
%*%(t(X),%*%(X,ssX_p))
::STMT
MATRIX:lambda,beta
LITERAL_FLOAT:0.0
%*%(t(+(0.0,*(lambda,beta))),+(0.0,*(lambda,beta)))
::STMT
MATRIX:Xm,parsertemp265718
abs(/(-(sum(parsertemp265718),sum(Xm)),sum(Xm)))
::STMT
MATRIX:feature
FLOAT:n_bins
/(-(max(feature),min(feature)),n_bins)
::STMT
MATRIX:2700_X,2700_W,parsertemp459178,2699_dtemp
FLOAT:lr
LITERAL_FLOAT:5.0E-4
*(lr,+(%*%(t(2700_X),-(2699_dtemp,parsertemp459178)),*(5.0E-4,2700_W)))
::STMT
MATRIX:foffb,foffe
LITERAL_FLOAT:1.0
-(cast.FLOAT(foffe),+(cast.FLOAT(foffb),1.0))
::STMT
MATRIX:p_CG
FLOAT:int351,trust_delta_sq,z
-(*(*(cast.FLOAT(z),sum(p_CG)),*(cast.FLOAT(z),sum(p_CG))),*(sum(^(p_CG,int351)),-(*(z,z),trust_delta_sq)))
::STMT
MATRIX:b,H
%*%(t(b),-(+(H,t(H)),diag(diag(H))))
::STMT
MATRIX:p_CG,z
FLOAT:trust_delta_sq
*(cast.FLOAT(%*%(t(p_CG),p_CG)),-(cast.FLOAT(%*%(z,z)),trust_delta_sq))
::STMT
FLOAT:eps
LITERAL_FLOAT:0.5
+(0.5,eps)
::STMT
MATRIX:z
FLOAT:pp,trust_delta_sq
*(pp,-(sum(*(z,z)),trust_delta_sq))
::STMT
MATRIX:n_risk_stratum,n_risk_i2j,V1
FLOAT:I_i1i2
*(V1,-(I_i1i2,/(n_risk_i2j,n_risk_stratum)))
::STMT
MATRIX:col,missing_indicator_mat
FLOAT:global_mean
+(col,*(missing_indicator_mat,global_mean))
::STMT
FLOAT:parsertemp539092,parsertemp539091,num_groups
LITERAL_FLOAT:1.0,2.0
-(+(+(*(parsertemp539091,parsertemp539092),1.0),num_groups),2.0)
::STMT
MATRIX:I,parsertemp472299
LITERAL_FLOAT:0.0
*(==(!=(*(parsertemp472299,I),0.0),0.0),I)
::STMT
MATRIX:Y,linear_terms
LITERAL_FLOAT:0.0
*(rowSums(Y),exp(-(0.0,exp(linear_terms))))
::STMT
MATRIX:W
FLOAT:m4
LITERAL_FLOAT:1.0,2.0
*(*(^(sum(W),2.0),+(sum(W),1.0)),m4)
::STMT
MATRIX:X_batch,dout1
LITERAL_FLOAT:2.0
^(%*%(t(X_batch),dout1),2.0)
::STMT
MATRIX:m_err
rowSums(colSums(m_err))
::STMT
FLOAT:int453,se_g1,int711,int305,int506,parsertemp113,wt
sqrt(/(*(*(int711,parsertemp113),^(se_g1,int453)),*(+(wt,int506),-(wt,int305))))
::STMT
MATRIX:X
FLOAT:N
LITERAL_FLOAT:1.0
/(%*%(t(X),X),-(N,1.0))
::STMT
FLOAT:277_sq_root_d,parsertemp170093,pp_CG,pq_CG
LITERAL_FLOAT:0.5
*(*(0.5,/(+(parsertemp170093,277_sq_root_d),pp_CG)),pq_CG)
::STMT
FLOAT:parsertemp191170,Wf
LITERAL_FLOAT:0.0,1.0,2.0
INT:parsertemp191169,F
*(rand(F,parsertemp191169,0.0,1.0),sqrt(/(2.0,*(parsertemp191170,Wf))))
::STMT
MATRIX:b,W,X
+(%*%(X,W),b)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.0,1.0
+(<=(y_corr,0.0),>=(y_corr,1.0))
::STMT
MATRIX:parsertemp231461
LITERAL_FLOAT:0.1
<=(parsertemp231461,0.1)
::STMT
MATRIX:C,Xm,parsertemp265701,XtZ
FLOAT:ZtZ_sum
%*%(%*%(%*%(Xm,%*%(C,parsertemp265701)),t(/(XtZ,ZtZ_sum))),t(Xm))
::STMT
MATRIX:X_batch,parsertemp146957,187_dX
FLOAT:beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,beta2),^(%*%(t(X_batch),*(parsertemp146957,187_dX)),2.0))
::STMT
MATRIX:parsertemp437305,_funvar2125,parsertemp437277,parsertemp437272
exp(-(+(_funvar2125,parsertemp437305),+(parsertemp437272,parsertemp437277)))
::STMT
MATRIX:W
FLOAT:m3
LITERAL_FLOAT:2.0
*(^(sum(round(W)),2.0),m3)
::STMT
MATRIX:pearson_residual_sq
FLOAT:num_features,num_records
/(sum(pearson_residual_sq),-(num_records,num_features))
::STMT
MATRIX:parsertemp12846,F,parsertemp12848
FLOAT:q,int265,W
LITERAL_FLOAT:1.0
/(sum(/(^(parsertemp12848,int265),/(parsertemp12846,W))),*(sum(F),-(q,1.0)))
::STMT
FLOAT:o_init,N
LITERAL_FLOAT:-2.0
/(*(-2.0,o_init),N)
::STMT
LITERAL_FLOAT:1.0
+(+(+(1.0,1.0),1.0),1.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
*(^(exp(linear_terms),1.0),exp(linear_terms))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
*(^(exp(linear_terms),-1.0),exp(linear_terms))
::STMT
MATRIX:X
FLOAT:2917_split
-($1:nrow(X),round(*($1,2917_split)))
::STMT
LITERAL_FLOAT:9999.0
9999.0
::STMT
MATRIX:prec_chol,mu
LITERAL_FLOAT:2.0
*(rowSums(^(mu,2.0)),^(prec_chol,2.0))
::STMT
LITERAL_FLOAT:0.01
0.01
::STMT
MATRIX:cm
FLOAT:n
==(t(cm),n)
::STMT
MATRIX:parsertemp389341,X,parsertemp389344
LITERAL_FLOAT:1.0
-(/(-(exp(parsertemp389341),1.0),+(exp(parsertemp389344),1.0)),X)
::STMT
LITERAL_FLOAT:100.0
+(100.0,100.0)
::STMT
MATRIX:b_cumulant,is_natural_parameter_log_zero,parsertemp560392,Y,natural_parameters
FLOAT:int562
LITERAL_FLOAT:1.0
-(-(*(Y,natural_parameters),b_cumulant),/(*(>(Y,int562),is_natural_parameter_log_zero),-(1.0,*(parsertemp560392,is_natural_parameter_log_zero))))
::STMT
MATRIX:X,Y
FLOAT:x
LITERAL_FLOAT:1.0
*(-(1.0,/(-(x,X),-(X,X))),Y)
::STMT
MATRIX:g_new,s,g_old
*(/(sum(*(g_new,g_new)),sum(*(g_old,g_old))),s)
::STMT
MATRIX:parsertemp265720,parsertemp265715,parsertemp265722
FLOAT:m,n
LITERAL_FLOAT:2.0
/(-(+(sum(parsertemp265722),trace(parsertemp265715)),*(2.0,sum(parsertemp265720))),*(n,m))
::STMT
MATRIX:I,y2
/(%*%(I,y2),rowSums(I))
::STMT
MATRIX:A,lambda
+(A,diag(lambda))
::STMT
MATRIX:X
abs(-(X,round(X)))
::STMT
MATRIX:C,Xm,parsertemp265702
sum(-(%*%(%*%(Xm,parsertemp265702),t(C)),Xm))
::STMT
MATRIX:objvals
LITERAL_FLOAT:10.0,1.5,-8.0
*(*(1.5,^(10.0,-8.0)),cast.FLOAT(objvals))
::STMT
FLOAT:parsertemp496689,parsertemp496690,parsertemp496694,int69,parsertemp496686,n
LITERAL_FLOAT:1.0,2.0
*(/(1.0,*(2.0,n)),+(parsertemp496694,/(^(parsertemp496686,int69),+(parsertemp496689,parsertemp496690))))
::STMT
MATRIX:p,lambda,X
+(%*%(t(X),%*%(X,p)),*(lambda,p))
::STMT
MATRIX:ot2
FLOAT:int689
LITERAL_FLOAT:200.0,100.0
/(*(sum(>(ot2,int689)),100.0),200.0)
::STMT
LITERAL_FLOAT:1.0,8.0
-(8.0,1.0)
::STMT
MATRIX:parsertemp171083
FLOAT:float666
LITERAL_FLOAT:0.001308,0.189269
+(0.189269,*(sqrt(*(float666,parsertemp171083)),0.001308))
::STMT
MATRIX:r_CG,q_CG
FLOAT:alpha_CG
*(+(r_CG,*(alpha_CG,q_CG)),+(r_CG,*(alpha_CG,q_CG)))
::STMT
MATRIX:parsertemp389329,parsertemp389332,W4
FLOAT:int14,int822
%*%(W4,t(/(-(parsertemp389329,int14),+(parsertemp389332,int822))))
::STMT
MATRIX:linear_terms
FLOAT:int6
LITERAL_FLOAT:1.0
/(1.0,-(exp(*(linear_terms,int6)),1.0))
::STMT
MATRIX:p_LS
FLOAT:alpha_LS,r_LS,norm_r2_LS
LITERAL_FLOAT:2.0
*(/(^(+(r_LS,alpha_LS),2.0),norm_r2_LS),cast.FLOAT(p_LS))
::STMT
MATRIX:simplex,parsertemp503570
LITERAL_FLOAT:2.0
-(*(2.0,/(-(parsertemp503570,simplex),nrow(simplex))),simplex)
::STMT
MATRIX:X_cluster,_funvar62
|(X_cluster,_funvar62)
::STMT
MATRIX:Y_counts,parsertemp560517,ent1_vec
FLOAT:int324
sum(*(Y_counts,-(rowSums(parsertemp560517),^(ent1_vec,int324))))
::STMT
MATRIX:parsertemp410246,parsertemp410249
LITERAL_FLOAT:0.6666666666666666
-(max(^(/(parsertemp410246,parsertemp410249),0.6666666666666666)),min(^(/(parsertemp410246,parsertemp410249),0.6666666666666666)))
::STMT
MATRIX:means,Y_counts,Y
/(colSums(-(Y,means)),sum(Y_counts))
::STMT
MATRIX:p,V
LITERAL_FLOAT:1.0E-8
%*%(t(p),+(%*%(t(V),%*%(V,p)),*(1.0E-8,p)))
::STMT
MATRIX:parsertemp171245,Y
LITERAL_FLOAT:1.0
*(Y,/(1.0,-(exp(parsertemp171245),1.0)))
::STMT
MATRIX:parsertemp410977,W,H,parsertemp410974
%*%(W,/(*(H,%*%(parsertemp410974,parsertemp410977)),t(colSums(W))))
::STMT
MATRIX:parsertemp31026,parsertemp31033
FLOAT:int225,int394
LITERAL_FLOAT:2.0,3352500.0,990000.0
+(/(^(/(parsertemp31026,int394),2.0),990000.0),/(^(/(parsertemp31033,int225),2.0),3352500.0))
::STMT
MATRIX:CFreqs1,parsertemp27492,present_domain_vals_mat
FLOAT:int634
LITERAL_FLOAT:1.0
/(sum(*(%*%(present_domain_vals_mat,CFreqs1),^(parsertemp27492,int634))),-(nrow(present_domain_vals_mat),1.0))
::STMT
MATRIX:log_prob,log_det_chol
FLOAT:parsertemp443052,float150
LITERAL_FLOAT:-0.5
+(*(-0.5,+(*(parsertemp443052,float150),log_prob)),cast.FLOAT(log_det_chol))
::STMT
FLOAT:s,i2,n
-(n,*(s,i2))
::STMT
FLOAT:num_records
LITERAL_FLOAT:100.0
/(100.0,num_records)
::STMT
MATRIX:parsertemp31115,parsertemp31108
FLOAT:int207,int915
LITERAL_FLOAT:7.996E9,2.0,3.37275E9
+(/(^(/(parsertemp31108,int915),2.0),7.996E9),/(^(/(parsertemp31115,int207),2.0),3.37275E9))
::STMT
MATRIX:uniqueValues,X
cast.FLOAT(==(X,uniqueValues))
::STMT
MATRIX:resp,X
LITERAL_FLOAT:2.22E-16
/(%*%(t(resp),X),t(+(colSums(resp),2.22E-16)))
::STMT
MATRIX:id
diag(diag(==(id,cast.FLOAT(id))))
::STMT
MATRIX:p_LS,X
*(cast.FLOAT(%*%(t(X),X)),p_LS)
::STMT
FLOAT:iter
LITERAL_FLOAT:5.0
/(iter,5.0)
::STMT
FLOAT:b,rad
LITERAL_FLOAT:-1.0
*(-(b,rad),-1.0)
::STMT
LITERAL_FLOAT:1.0,4.0
-(4.0,1.0)
::STMT
MATRIX:X
FLOAT:val
==(X,val)
::STMT
MATRIX:W,X,H
LITERAL_FLOAT:1.0E-8
%*%(t(W),/(X,+(%*%(W,H),1.0E-8)))
::STMT
FLOAT:sum_y_test,sum_sq_y_test,n
LITERAL_FLOAT:2.0
-(sum_sq_y_test,*(n,^(/(sum_y_test,n),2.0)))
::STMT
FLOAT:window_size
LITERAL_FLOAT:4.0
/(window_size,4.0)
::STMT
MATRIX:2696_mask,outr3
LITERAL_FLOAT:0.5
/(*(outr3,2696_mask),0.5)
::STMT
MATRIX:p,q,lambda,X
FLOAT:norm_r2
*(/(norm_r2,sum(*(p,q))),+(%*%(t(X),%*%(X,p)),*(lambda,p)))
::STMT
MATRIX:scale_X,X,beta
*(*(cast.FLOAT(diag(scale_X)),cast.FLOAT(beta)),X)
::STMT
MATRIX:Train,2342_m_colmax,2342_m_colmin
LITERAL_FLOAT:1.0,2.0
-(/(*(2.0,-(Train,2342_m_colmin)),-(2342_m_colmax,2342_m_colmin)),1.0)
::STMT
MATRIX:p,A
sum(*(p,%*%(t(A),%*%(A,p))))
::STMT
MATRIX:r,d,X,Hd,parsertemp44001
FLOAT:int656
*(/(sum(^(r,int656)),cast.FLOAT(%*%(parsertemp44001,Hd))),%*%(X,d))
::STMT
MATRIX:parsertemp393591,W4
LITERAL_FLOAT:2.0
exp(*(2.0,t(%*%(W4,parsertemp393591))))
::STMT
MATRIX:2701_mask,2700_W,2726_dpred,parsertemp459177,2699_probs
LITERAL_FLOAT:0.5
*(/(2701_mask,0.5),%*%(-(*(2726_dpred,2699_probs),*(2699_probs,parsertemp459177)),t(2700_W)))
::STMT
MATRIX:X,parsertemp386474
LITERAL_FLOAT:-2.0
+(+(*(-2.0,%*%(X,parsertemp386474)),X),t(X))
::STMT
FLOAT:strideh,Hin,Hf
LITERAL_FLOAT:1.0
+(/(-(Hin,Hf),strideh),1.0)
::STMT
MATRIX:P,D,Z,ZERODIAG
FLOAT:int934
LITERAL_FLOAT:1.0
*(-(P,/(*(Z,ZERODIAG),sum(Z))),*(/(1.0,+(D,int934)),ZERODIAG))
::STMT
MATRIX:W2_rand
LITERAL_FLOAT:0.16823164622761327
*(0.16823164622761327,W2_rand)
::STMT
MATRIX:parsertemp265709,Xm,tmp,Z,parsertemp265702
%*%(t(/(%*%(parsertemp265709,Z),sum(tmp))),/(%*%(t(Xm),%*%(Xm,parsertemp265702)),sum(tmp)))
::STMT
MATRIX:curr_prediction
FLOAT:int567,282_lambda
+(sum(*(curr_prediction,-(int567,curr_prediction))),282_lambda)
::STMT
MATRIX:X2
max(colSums(X2))
::STMT
MATRIX:parsertemp31115,parsertemp31108
FLOAT:parsertemp31116,parsertemp31109
LITERAL_FLOAT:2.0,1500.0,2000.0
^(+(/(/(parsertemp31108,parsertemp31109),2000.0),/(/(parsertemp31115,parsertemp31116),1500.0)),2.0)
::STMT
MATRIX:parsertemp106
LITERAL_FLOAT:10.0
*(10.0,parsertemp106)
::STMT
MATRIX:W
FLOAT:m2
LITERAL_FLOAT:1.0
sqrt(/(*(m2,sum(W)),-(sum(W),1.0)))
::STMT
LITERAL_FLOAT:128.0
INT:int502,int800
rand(int800,int502,128.0,128.0)
::STMT
MATRIX:parsertemp386440,parsertemp386441
LITERAL_FLOAT:1.0,5.0
>=(+(rowSums(*(parsertemp386440,parsertemp386441)),1.0),5.0)
::STMT
MATRIX:simplex
LITERAL_FLOAT:2.0
*(2.0,/(-(rowSums(simplex),simplex),nrow(simplex)))
::STMT
MATRIX:parsertemp169867
FLOAT:pp,zz,trust_delta_sq
sqrt(-(*(sum(parsertemp169867),sum(parsertemp169867)),*(pp,-(zz,trust_delta_sq))))
::STMT
MATRIX:X,permut
LITERAL_FLOAT:2.0
colSums(^(%*%(permut,X),2.0))
::STMT
MATRIX:2697_b,parsertemp459149,2697_W,outd3
exp(-(+(%*%(outd3,2697_W),2697_b),parsertemp459149))
::STMT
MATRIX:b,scale_X,shift_X,X,y
+(%*%(diag(scale_X),%*%(t(X),y)),*(cast.FLOAT(b),shift_X))
::STMT
MATRIX:parsertemp395001,W4_rand
FLOAT:int764,int842
LITERAL_FLOAT:0.08692913816996169
%*%(*(0.08692913816996169,W4_rand),t(/(-(parsertemp395001,int842),+(parsertemp395001,int764))))
::STMT
MATRIX:S,addedE,parsertemp31676
FLOAT:level
rowSums(*(==(%*%(S,parsertemp31676),level),t(addedE)))
::STMT
MATRIX:parsertemp421322
LITERAL_FLOAT:1.0,11.0
*(11.0,-(max(round(parsertemp421322)),1.0))
::STMT
MATRIX:dW,parsertemp459256
LITERAL_FLOAT:5.0E-4
+(dW,*(5.0E-4,parsertemp459256))
::STMT
MATRIX:R,HS
FLOAT:alpha
LITERAL_FLOAT:2.0
^(-(R,*(alpha,HS)),2.0)
::STMT
LITERAL_FLOAT:1.0,100.0
+(100.0,1.0)
::STMT
MATRIX:R,parsertemp40219,parsertemp40216,parsertemp40226,parsertemp40220,parsertemp40231
FLOAT:level
/(-(+(R,rowSums(parsertemp40226)),rowSums(*(parsertemp40220,parsertemp40231))),-(+(R,rowSums(parsertemp40216)),rowSums(==(parsertemp40219,level))))
::STMT
MATRIX:V
-(max(V),min(V))
::STMT
MATRIX:Y,linear_terms
LITERAL_FLOAT:0.0
*(rowSums(Y),>=(linear_terms,0.0))
::STMT
MATRIX:parsertemp285809,p_CG,z
FLOAT:parsertemp285799,parsertemp285820,2235_sq_root_d
LITERAL_FLOAT:0.5
+(*(0.5,cast.FLOAT(%*%(z,parsertemp285809))),*(parsertemp285820,/(-(parsertemp285799,2235_sq_root_d),cast.FLOAT(p_CG))))
::STMT
MATRIX:Y
==(Y,min(Y))
::STMT
FLOAT:i,num_runs,num_centroids
LITERAL_FLOAT:1.0
+(*(num_centroids,-(num_runs,1.0)),i)
::STMT
MATRIX:E,X
LITERAL_FLOAT:0.0
-(0.0,t(colSums(*(X,E))))
::STMT
MATRIX:p,e,u
LITERAL_FLOAT:0.15000000000000002
*(0.15000000000000002,%*%(%*%(e,u),p))
::STMT
FLOAT:iter
LITERAL_FLOAT:3.0
/(iter,3.0)
::STMT
MATRIX:t,parsertemp32854,parsertemp32848,Y,parsertemp32857,parsertemp32858
cast.FLOAT(+(+(*(parsertemp32848,Y),*(t,Y)),*(*(t,parsertemp32854),+(parsertemp32857,parsertemp32858))))
::STMT
MATRIX:parsertemp149335,LT,Y
LITERAL_FLOAT:-1.0
+(*(sum(*(Y,LT)),-1.0),sum(parsertemp149335))
::STMT
MATRIX:col
FLOAT:min_val,bin_width
LITERAL_FLOAT:0.5
round(-(/(-(col,min_val),bin_width),0.5))
::STMT
FLOAT:lambda
LITERAL_FLOAT:2.0
/(lambda,2.0)
::STMT
MATRIX:diff
LITERAL_FLOAT:2.0
sqrt(rowSums(^(diff,2.0)))
::STMT
MATRIX:F,parsertemp12916,parsertemp12915
FLOAT:int496,int64,meanX
LITERAL_FLOAT:1.0
*(/(F,-(sum(F),1.0)),-(+(-(parsertemp12915,parsertemp12916),/(int496,int64)),meanX))
::STMT
MATRIX:W,X,H
FLOAT:eps
/(X,+(%*%(W,H),eps))
::STMT
MATRIX:lambda,parsertemp149338,parsertemp149335,parsertemp149331
LITERAL_FLOAT:-1.0,0.5
+(+(*(sum(parsertemp149331),-1.0),sum(parsertemp149335)),*(0.5,sum(*(lambda,parsertemp149338))))
::STMT
MATRIX:R,3_ss,dsep
FLOAT:3_eAvg
LITERAL_FLOAT:1.0
-(/(/(+(R,dsep),3_ss),3_eAvg),1.0)
::STMT
MATRIX:S,V,W
%*%(*(W,%*%(S,t(V))),V)
::STMT
MATRIX:parsertemp389339
LITERAL_FLOAT:1.0,2.0
-(exp(*(2.0,t(parsertemp389339))),1.0)
::STMT
LITERAL_FLOAT:1.0,1500.0
-(1500.0,1.0)
::STMT
LITERAL_FLOAT:-1.0,1.0
INT:int633,n
+(diag(rand(n,int633,-1.0,-1.0)),1.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0,0.5
-(>=(linear_terms,0.0),0.5)
::STMT
MATRIX:posSampleMeans
LITERAL_FLOAT:2.0,2000.0
*(2000.0,^(posSampleMeans,2.0))
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,96.0
+(*(96.0,-(run_index,1.0)),1.0)
::STMT
MATRIX:dout,mask
FLOAT:p
*(/(mask,p),dout)
::STMT
MATRIX:parsertemp13725,parsertemp13720,45_CVars,45_CFreqs
LITERAL_FLOAT:1.0,1000.0
/(/(sum(*(45_CFreqs,parsertemp13720)),-(nrow(45_CFreqs),1.0)),/(sum(*(parsertemp13725,45_CVars)),-(1000.0,nrow(45_CFreqs))))
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:0.0
>=(finite_linear_terms,0.0)
::STMT
MATRIX:parsertemp170246,parsertemp170240,parsertemp170238
FLOAT:float336,float335,float235
LITERAL_FLOAT:1.0,0.254829592
*(/(1.0,+(1.0,*(parsertemp170238,float235))),+(0.254829592,*(/(float336,parsertemp170240),+(float335,parsertemp170246))))
::STMT
MATRIX:m_iter_err_sum,parsertemp379567,m_err
FLOAT:i_process_item
LITERAL_FLOAT:2.0
-(*(^(/(parsertemp379567,i_process_item),2.0),i_process_item),*(*(2.0,/(parsertemp379567,i_process_item)),+(colSums(m_err),m_iter_err_sum)))
::STMT
MATRIX:parsertemp539204
FLOAT:float280,float688,int423,float881,float839,int969
-(max(^(/(parsertemp539204,float688),/(int423,float839))),min(^(/(parsertemp539204,float881),/(int969,float280))))
::STMT
MATRIX:parsertemp171367,is_LT_infinite
FLOAT:float643
LITERAL_FLOAT:1.0,0.5
+(*(+(0.5,/(parsertemp171367,float643)),-(1.0,rowSums(is_LT_infinite))),is_LT_infinite)
::STMT
MATRIX:w,yt,Xt
LITERAL_FLOAT:0.0
>(*(yt,%*%(Xt,w)),0.0)
::STMT
MATRIX:A,parsertemp12899,CVars,CFreqs,parsertemp12904
LITERAL_FLOAT:1.0
/(/(sum(*(CFreqs,parsertemp12899)),-(nrow(CFreqs),1.0)),/(sum(*(parsertemp12904,CVars)),-(nrow(A),nrow(CFreqs))))
::STMT
MATRIX:parsertemp456742,r,y
LITERAL_FLOAT:0.0
-(0.0,cast.FLOAT(%*%(t(r),%*%(parsertemp456742,y))))
::STMT
MATRIX:W,H
FLOAT:eps
+(%*%(%*%(t(W),W),H),eps)
::STMT
FLOAT:F1
LITERAL_FLOAT:2.0
*(*(*(F1,2.0),2.0),2.0)
::STMT
LITERAL_FLOAT:10000.0,0.8
*(10000.0,0.8)
::STMT
MATRIX:grad
LITERAL_FLOAT:0.0
-(0.0,grad)
::STMT
MATRIX:parsertemp31111,parsertemp31113
FLOAT:int50
LITERAL_FLOAT:1.0,2.0,1500.0
^(/(-(colSums(parsertemp31111),*(int50,parsertemp31113)),-(1500.0,1.0)),2.0)
::STMT
MATRIX:X
LITERAL_FLOAT:4.0
>=(X,4.0)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,11.0
-(+(i,11.0),1.0)
::STMT
MATRIX:xs
LITERAL_FLOAT:4.5
>=(xs,4.5)
::STMT
MATRIX:elt,ones_ctg
LITERAL_FLOAT:1.0
%*%(/(elt,%*%(rowSums(elt),t(ones_ctg))),-(1.0,diag(ones_ctg)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,3.0
*(3.0,-(i,1.0))
::STMT
MATRIX:grad
LITERAL_FLOAT:-1.0
sum(*(*(grad,-1.0),*(grad,-1.0)))
::STMT
MATRIX:m_err_for_order,m_active_flag
LITERAL_FLOAT:0.0
*(m_err_for_order,t(==(m_active_flag,0.0)))
::STMT
LITERAL_FLOAT:3.141592653589793
3.141592653589793
::STMT
MATRIX:parsertemp31111,parsertemp31113
FLOAT:int73
LITERAL_FLOAT:1.0,1500.0
/(/(-(colSums(parsertemp31111),*(int73,parsertemp31113)),-(1500.0,1.0)),1500.0)
::STMT
MATRIX:R,B,parsertemp503364
LITERAL_FLOAT:0.0
-(0.0,%*%(t(+(R,parsertemp503364)),B))
::STMT
MATRIX:ss,map
LITERAL_FLOAT:1.0
*(map,/(1.0,t(ss)))
::STMT
MATRIX:w_X,z_LS,X
*(/(nrow(X),*(cast.FLOAT(w_X),cast.FLOAT(z_LS))),z_LS)
::STMT
MATRIX:parsertemp220853,W,sum_Pi,beta
LITERAL_FLOAT:3.4011973816621555
-(+(parsertemp220853,*(beta,/(W,sum_Pi))),3.4011973816621555)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
>=(X,1.0)
::STMT
LITERAL_FLOAT:6.283185307179586
6.283185307179586
::STMT
LITERAL_FLOAT:0.15915494309189535
0.15915494309189535
::STMT
FLOAT:arch_coef,var_coef
LITERAL_FLOAT:1.0
-(-(1.0,arch_coef),var_coef)
::STMT
MATRIX:log_l_part_saturated,log_l_part
LITERAL_FLOAT:2.0
-(*(2.0,sum(log_l_part_saturated)),*(2.0,sum(log_l_part)))
::STMT
MATRIX:X
FLOAT:x
-(x,cast.FLOAT(X))
::STMT
MATRIX:parsertemp220863,parsertemp220864,Hdiff,betamax,beta
FLOAT:INF,int45
LITERAL_FLOAT:2.0
/(*(*(>=(Hdiff,int45),!=(betamax,INF)),+(beta,+(parsertemp220863,parsertemp220864))),2.0)
::STMT
MATRIX:parsertemp222331
FLOAT:sample_block_size
LITERAL_FLOAT:0.5
round(+(0.5,/(parsertemp222331,sample_block_size)))
::STMT
MATRIX:parsertemp75086
LITERAL_FLOAT:1.0,32.0
+(*(parsertemp75086,32.0),1.0)
::STMT
MATRIX:parsertemp496901
FLOAT:std
LITERAL_FLOAT:2.0
^(*(cast.FLOAT(parsertemp496901),std),2.0)
::STMT
LITERAL_FLOAT:512.0,0.8
*(512.0,0.8)
::STMT
MATRIX:ss
LITERAL_FLOAT:1.0,20.0
-(/(20.0,ss),1.0)
::STMT
MATRIX:R
LITERAL_FLOAT:32.0
>=(R,32.0)
::STMT
LITERAL_FLOAT:6.144102863722254
6.144102863722254
::STMT
MATRIX:y_prob,parsertemp560892,linear_terms,elt
FLOAT:int566,int338,int507
LITERAL_FLOAT:1.0
+(*(-(1.0,==(parsertemp560892,int566)),-(1.0,y_prob)),*(*(==(parsertemp560892,int338),exp(linear_terms)),-(1.0,/(elt,int507))))
::STMT
FLOAT:float982,parsertemp169812
LITERAL_FLOAT:4.0,0.5
-(4.0,round(-(/(parsertemp169812,float982),0.5)))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
+(/(1.0,cast.FLOAT(A)),/(1.0,cast.FLOAT(A)))
::STMT
MATRIX:W,H,X,parsertemp411102
FLOAT:eps
*(H,/(%*%(t(W),X),+(%*%(parsertemp411102,H),eps)))
::STMT
MATRIX:parsertemp170101
FLOAT:r_CG,g_reg,z,277_sq_root_d,parsertemp170108,parsertemp170093,pp_CG
LITERAL_FLOAT:0.5
+(*(0.5,*(cast.FLOAT(z),+(r_CG,g_reg))),*(+(+(parsertemp170108,z),sum(parsertemp170101)),/(+(parsertemp170093,277_sq_root_d),pp_CG)))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,12.0
-(+(i,12.0),1.0)
::STMT
FLOAT:max_iter
LITERAL_FLOAT:100.0
/(max_iter,100.0)
::STMT
FLOAT:sample_block_size
LITERAL_FLOAT:1.0,3.0
-(*(sample_block_size,3.0),1.0)
::STMT
MATRIX:p,A
sum(*(p,%*%(t(A),%*%(A,p))))
::STMT
FLOAT:idx
LITERAL_FLOAT:1.0,256.0
+(-(256.0,idx),1.0)
::STMT
MATRIX:Xm,parsertemp265717,Z
LITERAL_FLOAT:2.0
*(2.0,sum(%*%(%*%(Z,parsertemp265717),t(Xm))))
::STMT
MATRIX:X
FLOAT:x
-(nrow(X),sum(>=(X,x)))
::STMT
MATRIX:W
sqrt(sum(round(W)))
::STMT
MATRIX:linear_terms,Y
FLOAT:var_power
LITERAL_FLOAT:1.0
*(^(exp(linear_terms),-(1.0,var_power)),-(Y,exp(linear_terms)))
::STMT
MATRIX:surv,se_surv
FLOAT:z_alpha_2,int420
exp(/(*(*(z_alpha_2,int420),se_surv),surv))
::STMT
MATRIX:WM
FLOAT:m2X
LITERAL_FLOAT:1.0
*(m2X,/(sum(WM),-(sum(WM),1.0)))
::STMT
MATRIX:X2,85_s
LITERAL_FLOAT:1.0
*(/(1.0,85_s),nrow(X2))
::STMT
MATRIX:X
FLOAT:eps
*(eps,nrow(X))
::STMT
MATRIX:W
FLOAT:int246,parsertemp65,int96,parsertemp66,wt
LITERAL_FLOAT:3.0,4.0
*(*(*(-(wt,int96),-(wt,int246)),-(sum(W),3.0)),^(sqrt(/(parsertemp65,parsertemp66)),4.0))
::STMT
LITERAL_FLOAT:2.0,100.0
^(100.0,2.0)
::STMT
FLOAT:parsertemp65,parsertemp66,mu
LITERAL_FLOAT:5.0
-(mu,*(5.0,sqrt(/(parsertemp65,parsertemp66))))
::STMT
MATRIX:F
LITERAL_FLOAT:1.0
/(F,-(sum(F),1.0))
::STMT
MATRIX:mat_chol
/(nrow(mat_chol),ncol(mat_chol))
::STMT
MATRIX:g_reg,p_CG
FLOAT:parsertemp170148,parsertemp170164,q_CG,z,int13,pq_CG,int470
*(+(+(*(parsertemp170164,pq_CG),*(z,q_CG)),sum(*(g_reg,p_CG))),/(+(*(z,int470),sqrt(parsertemp170148)),sum(^(p_CG,int13))))
::STMT
FLOAT:num_records,i
LITERAL_FLOAT:1.0
+(*(num_records,-(i,1.0)),1.0)
::STMT
MATRIX:R
FLOAT:int595,int353
INT:parsertemp503361,int790
+(R,diag(rand(parsertemp503361,int790,int595,int353)))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
t(!=(X,0.0))
::STMT
FLOAT:offset_x
round(offset_x)
::STMT
MATRIX:X,tS
FLOAT:l
colSums(==(%*%(X,tS),l))
::STMT
FLOAT:C,Hf,Wf
*(*(C,Hf),Wf)
::STMT
MATRIX:f,parsertemp472177,parsertemp472179
-(%*%(f,parsertemp472177),t(parsertemp472179))
::STMT
MATRIX:obj,objnew
-(cast.FLOAT(objnew),cast.FLOAT(obj))
::STMT
MATRIX:lambda,g,beta
t(+(g,*(lambda,beta)))
::STMT
MATRIX:WM,CVars,CFreqs
FLOAT:int548
/(sum(*(-(CFreqs,int548),CVars)),-(sum(WM),nrow(CFreqs)))
::STMT
MATRIX:X,W1,b1
+(%*%(W1,t(X)),b1)
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:1.0
^(exp(linear_terms),-(1.0,var_power))
::STMT
FLOAT:current_hash_value
LITERAL_FLOAT:1.0,9.0
-(9.0,+(current_hash_value,1.0))
::STMT
MATRIX:z
FLOAT:trust_delta_sq,pp_CG
*(pp_CG,-(*(cast.FLOAT(z),cast.FLOAT(z)),trust_delta_sq))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,6.0
*(*(6.0,sum(round(W))),-(sum(round(W)),1.0))
::STMT
MATRIX:S
FLOAT:delta2
LITERAL_FLOAT:2.0
-(delta2,sum(^(S,2.0)))
::STMT
MATRIX:X
FLOAT:parsertemp72162,M
LITERAL_FLOAT:1.0
-(*(+(parsertemp72162,1.0),M),ncol(X))
::STMT
FLOAT:s,g,int170,num_groups
LITERAL_FLOAT:1.0,7.0
+(*(*(-(s,int170),num_groups),7.0),*(-(g,1.0),7.0))
::STMT
MATRIX:r,Hd
FLOAT:c
%*%(t(+(r,*(c,Hd))),+(r,*(c,Hd)))
::STMT
LITERAL_FLOAT:0.0,1.0,0.282842712474619
INT:int945,int604
*(rand(int945,int604,0.0,1.0),0.282842712474619)
::STMT
LITERAL_FLOAT:0.08333333333333333
0.08333333333333333
::STMT
MATRIX:resp,mean,X,weight
/(*(mean,%*%(t(resp),X)),t(weight))
::STMT
LITERAL_FLOAT:-1.0E30
INT:int924,M
rand(M,int924,-1.0E30,-1.0E30)
::STMT
FLOAT:x1,x2
LITERAL_FLOAT:2.0
^(-(x1,x2),2.0)
::STMT
MATRIX:r,scale_X,shift_X,y,parsertemp116004
LITERAL_FLOAT:0.0
-(0.0,+(*(scale_X,%*%(parsertemp116004,y)),*(cast.FLOAT(r),shift_X)))
::STMT
MATRIX:R,dssp
FLOAT:4_n,4_alpha
LITERAL_FLOAT:1.0
*(-(1.0,4_alpha),-(/(4_n,+(R,dssp)),1.0))
::STMT
LITERAL_FLOAT:0.6666666666666666
0.6666666666666666
::STMT
MATRIX:xs
FLOAT:254_x
LITERAL_FLOAT:1.0,100.0
+(-(100.0,sum(>=(xs,254_x))),1.0)
::STMT
MATRIX:parsertemp109934
LITERAL_FLOAT:1.0,42.0
+(*(parsertemp109934,42.0),1.0)
::STMT
MATRIX:r
FLOAT:int435,tolerance
LITERAL_FLOAT:2.0
sqrt(*(sum(^(r,int435)),^(tolerance,2.0)))
::STMT
MATRIX:Y
-(length(Y),sum(Y))
::STMT
MATRIX:R,parsertemp40226,parsertemp40220
FLOAT:eAvg
/(/(+(R,rowSums(parsertemp40226)),-(R,rowSums(parsertemp40220))),eAvg)
::STMT
MATRIX:P,Y,parsertemp221025,Z,ZERODIAG
FLOAT:int525
LITERAL_FLOAT:1.0,4.0
*(-(*(P,4.0),/(*(Z,ZERODIAG),sum(Z))),*(/(1.0,+(Y,int525)),+(diag(parsertemp221025),1.0)))
::STMT
MATRIX:r,parsertemp1945
FLOAT:norm_r2
/(sum(*(+(r,parsertemp1945),+(r,parsertemp1945))),norm_r2)
::STMT
MATRIX:p,q,lambda
+(q,*(lambda,p))
::STMT
MATRIX:r,g,z
*(z,+(r,g))
::STMT
MATRIX:parsertemp72333
FLOAT:int203,rows
/(colSums(rowSums(^(parsertemp72333,int203))),rows)
::STMT
FLOAT:parsertemp40813,m2,m3
LITERAL_FLOAT:3.0
/(m3,^(sqrt(*(parsertemp40813,m2)),3.0))
::STMT
MATRIX:s,w
FLOAT:lambda
*(lambda,sum(*(w,s)))
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int771,parsertemp31048,int464,parsertemp31047,int798,int713,parsertemp31053,parsertemp31052
LITERAL_FLOAT:2.0
/(^(+(/(posSampleVariances,int464),/(negSampleVariances,int713)),2.0),+(/(^(posSampleVariances,int771),*(parsertemp31047,parsertemp31048)),/(^(negSampleVariances,int798),*(parsertemp31052,parsertemp31053))))
::STMT
MATRIX:y_hat,b,parsertemp31748
sum(*(-(-(b,parsertemp31748),y_hat),-(-(b,parsertemp31748),y_hat)))
::STMT
FLOAT:parsertemp40813,m2,m4
LITERAL_FLOAT:4.0
/(m4,^(sqrt(*(parsertemp40813,m2)),4.0))
::STMT
MATRIX:I,y2
LITERAL_FLOAT:2.0
sum(^(/(%*%(I,y2),sum(I)),2.0))
::STMT
MATRIX:parsertemp500607,X,y,parsertemp500610,wnew
%*%(t(-(%*%(X,wnew),y)),-(%*%(X,*(parsertemp500607,parsertemp500610)),y))
::STMT
LITERAL_FLOAT:0.1093262138242341
0.1093262138242341
::STMT
MATRIX:linear_terms
FLOAT:int267
LITERAL_FLOAT:1.0,2.0
-(1.0,-(*(2.0,>=(linear_terms,int267)),1.0))
::STMT
MATRIX:parsertemp27546
FLOAT:labelCorrection
t(-(parsertemp27546,labelCorrection))
::STMT
MATRIX:parsertemp16959,id
-(==(id,t(id)),diag(diag(==(id,parsertemp16959))))
::STMT
MATRIX:A,scale_X,shift_X,X
+(%*%(diag(scale_X),%*%(t(X),X)),%*%(shift_X,A))
::STMT
FLOAT:191_beta2,191_t
LITERAL_FLOAT:1.0
-(1.0,^(191_beta2,+(191_t,1.0)))
::STMT
FLOAT:parsertemp557354,weight,parsertemp557358,prob_true,prob_false
LITERAL_FLOAT:-1.0,0.6931471805599453
*(*(-1.0,weight),+(/(*(prob_true,parsertemp557354),0.6931471805599453),/(*(prob_false,parsertemp557358),0.6931471805599453)))
::STMT
MATRIX:parsertemp31188,parsertemp31186
FLOAT:int441
LITERAL_FLOAT:6999.0,7000.0
/(/(-(colSums(parsertemp31186),*(int441,parsertemp31188)),6999.0),7000.0)
::STMT
FLOAT:parsertemp40936,parsertemp40941,int194
LITERAL_FLOAT:2.0,3.0,4.0,5.0,2001.0
/(*(*(4.0,-(parsertemp40941,int194)),^(sqrt(parsertemp40936),2.0)),*(+(2001.0,5.0),-(2001.0,3.0)))
::STMT
MATRIX:prevTK2,X2
==(%*%(X2,t(prevTK2)),t(rowSums(prevTK2)))
::STMT
MATRIX:sv,Xd
FLOAT:dd
+(dd,sum(*(*(Xd,sv),Xd)))
::STMT
FLOAT:num_records
LITERAL_FLOAT:1.0,3840.0
-(1.0,/(3840.0,num_records))
::STMT
MATRIX:parsertemp389217,parsertemp389216
FLOAT:n
LITERAL_FLOAT:1.0
sqrt(/(*(-(parsertemp389216,parsertemp389217),n),-(n,1.0)))
::STMT
MATRIX:parsertemp171346,parsertemp171344,linear_terms,the_exp
FLOAT:int422,int41
LITERAL_FLOAT:1.0,1.0E7
/(*(-(1.0,==(parsertemp171346,int422)),-(1.0,exp(parsertemp171344))),+(exp(linear_terms),==(+(int41,the_exp),1.0E7)))
::STMT
FLOAT:parsertemp166531
LITERAL_FLOAT:2.0,10.0
+(2.0,*(10.0,parsertemp166531))
::STMT
FLOAT:parsertemp40837,parsertemp40832,int270
LITERAL_FLOAT:2.0,3.0,4.0,5.0,2000.0
/(*(*(4.0,-(parsertemp40837,int270)),^(sqrt(parsertemp40832),2.0)),*(+(2000.0,5.0),-(2000.0,3.0)))
::STMT
FLOAT:num_strata,num_groups
LITERAL_FLOAT:7.0
*(*(num_groups,num_strata),7.0)
::STMT
FLOAT:run_index
LITERAL_FLOAT:1.0,2.0
*(2.0,-(run_index,1.0))
::STMT
MATRIX:output,mask
LITERAL_FLOAT:0.0,1.0
&(==(output,0.0),==(mask,1.0))
::STMT
MATRIX:p,G
LITERAL_FLOAT:0.85
*(0.85,%*%(G,p))
::STMT
FLOAT:parsertemp31330
LITERAL_FLOAT:1.0,10000.0
*(-(10000.0,1.0),/(*(parsertemp31330,10000.0),-(10000.0,1.0)))
::STMT
MATRIX:parsertemp220867,parsertemp220866,Hdiff,parsertemp220871,parsertemp220872,beta,betamin
FLOAT:int591
LITERAL_FLOAT:2.0
+(+(*(*(parsertemp220866,parsertemp220867),beta),/(*(parsertemp220871,parsertemp220872),2.0)),/(*(<(Hdiff,int591),+(beta,betamin)),2.0))
::STMT
MATRIX:parsertemp382671,X
FLOAT:int751,int347
LITERAL_FLOAT:0.5
*(0.5,sum(*(!=(X,int347),^(parsertemp382671,int751))))
::STMT
MATRIX:is_LT_infinite,Y_prob
LITERAL_FLOAT:1.0
+(*(/(Y_prob,rowSums(Y_prob)),-(1.0,rowSums(is_LT_infinite))),is_LT_infinite)
::STMT
MATRIX:M2
LITERAL_FLOAT:0.0
&(!(!=(M2,0.0)),!=(M2,0.0))
::STMT
FLOAT:parsertemp41040,int116,parsertemp41045
LITERAL_FLOAT:2.0,3.0,4.0,5.0,2003.0
/(*(*(4.0,-(parsertemp41045,int116)),^(sqrt(parsertemp41040),2.0)),*(+(2003.0,5.0),-(2003.0,3.0)))
::STMT
MATRIX:S,col_nonzeros,parsertemp382922,parsertemp382920
sum(*(S,+(t(parsertemp382920),*(parsertemp382922,col_nonzeros))))
::STMT
MATRIX:r,s,grad
-(cast.FLOAT(%*%(t(s),grad)),cast.FLOAT(%*%(t(s),r)))
::STMT
FLOAT:s,num_groups
LITERAL_FLOAT:1.0
+(*(-(s,1.0),-(num_groups,1.0)),1.0)
::STMT
MATRIX:parsertemp1904,y
LITERAL_FLOAT:0.0,2.0
sum(^(-(0.0,%*%(parsertemp1904,y)),2.0))
::STMT
MATRIX:A
*(cast.FLOAT(A),cast.FLOAT(A))
::STMT
MATRIX:parsertemp42200,F
LITERAL_FLOAT:1.0,2.0
+(-(parsertemp42200,/(rowSums(F),2.0)),/(1.0,2.0))
::STMT
MATRIX:tmp
FLOAT:N
LITERAL_FLOAT:1.0
/(tmp,-(N,1.0))
::STMT
MATRIX:C,Xm,parsertemp265702
-(sum(%*%(%*%(Xm,parsertemp265702),t(C))),sum(Xm))
::STMT
MATRIX:sig,parsertemp181037
FLOAT:window_size,q
/(-(q,*(window_size,cast.FLOAT(parsertemp181037))),*(window_size,cast.FLOAT(*(sig,sig))))
::STMT
MATRIX:parsertemp163760
FLOAT:bin_length
/(rowSums(parsertemp163760),bin_length)
::STMT
MATRIX:X
FLOAT:value
!(<(X,value))
::STMT
MATRIX:cumHistMul,offset,parsertemp132494,histMul,outBucket
-(offset,%*%(==(outBucket,t(parsertemp132494)),-(cumHistMul,histMul)))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
/(nrow(X),-(nrow(X),1.0))
::STMT
MATRIX:y_hat,A,B
-(-(B,%*%(A,y_hat)),y_hat)
::STMT
FLOAT:int395,Hin,Win
LITERAL_FLOAT:2.0,64.0
*(*(64.0,/(/(Hin,int395),2.0)),/(/(Win,2.0),2.0))
::STMT
MATRIX:R
FLOAT:s,i8
-(nrow(R),*(s,i8))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,1.0E-6
/(*(1.0E-6,cast.FLOAT(%*%(X,X))),1.0)
::STMT
MATRIX:_sbcvar12
LITERAL_FLOAT:999.0
/(_sbcvar12,999.0)
::STMT
MATRIX:std,rad,dtd
/(-(rad,cast.FLOAT(std)),cast.FLOAT(dtd))
::STMT
MATRIX:parsertemp79022
LITERAL_FLOAT:1270.0
/(parsertemp79022,1270.0)
::STMT
MATRIX:p,V
FLOAT:eps
%*%(t(p),+(%*%(t(V),%*%(V,p)),*(eps,p)))
::STMT
MATRIX:prec,X,mu
rowSums(*(-(%*%(X,prec),%*%(mu,prec)),-(%*%(X,prec),%*%(mu,prec))))
::STMT
MATRIX:w
FLOAT:tau
*(tau,sum(abs(w)))
::STMT
MATRIX:p_CG
FLOAT:parsertemp170148,int652,z,int229
LITERAL_FLOAT:0.5
*(0.5,/(+(*(z,int652),sqrt(parsertemp170148)),sum(^(p_CG,int229))))
::STMT
FLOAT:window_size,k
LITERAL_FLOAT:1.0
-(+(k,window_size),1.0)
::STMT
FLOAT:m2,mu
LITERAL_FLOAT:1.0004995004995005
/(sqrt(*(1.0004995004995005,m2)),mu)
::STMT
MATRIX:tmp,X,Y,out
-(%*%(t(X),*(out,Y)),tmp)
::STMT
MATRIX:_sbcvar92,parsertemp27718,parsertemp27720
FLOAT:220_W,float581
LITERAL_FLOAT:2.0
^(-(_sbcvar92,+(*(parsertemp27720,float581),/(parsertemp27718,220_W))),2.0)
::STMT
MATRIX:f
LITERAL_FLOAT:1.0,2.0
-(1.0,rowSums(^(f,2.0)))
::STMT
MATRIX:Xm,Z,parsertemp265713
/(-(sum(%*%(Z,parsertemp265713)),sum(Xm)),sum(Xm))
::STMT
MATRIX:B,X,y
LITERAL_FLOAT:2.0
sum(^(-(y,%*%(X,B)),2.0))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
INT:int354,int611
%*%(+(rowSums(classFeatureCounts),*(750.0,1.0)),rand(int354,int611,1.0,1.0))
::STMT
MATRIX:curr_prediction
LITERAL_FLOAT:1.0
sum(*(curr_prediction,-(1.0,curr_prediction)))
::STMT
LITERAL_FLOAT:1.001001001001001
1.001001001001001
::STMT
MATRIX:scale_X,X,y
LITERAL_FLOAT:0.0
*(scale_X,%*%(-(0.0,t(X)),y))
::STMT
MATRIX:vectors,pq_result
LITERAL_FLOAT:2.0
rowSums(^(-(vectors,pq_result),2.0))
::STMT
MATRIX:R,parsertemp72406
LITERAL_FLOAT:2.0
^(-(%*%(t(R),R),diag(parsertemp72406)),2.0)
::STMT
MATRIX:A,scale_X,shift_X
+(%*%(diag(scale_X),A),%*%(shift_X,A))
::STMT
FLOAT:i7
LITERAL_FLOAT:1.0
+(1.0,i7)
::STMT
MATRIX:out2,parsertemp146940,184_dtemp,outd1,W3
LITERAL_FLOAT:0.0
%*%(t(outd1),*(>(out2,0.0),%*%(-(184_dtemp,parsertemp146940),t(W3))))
::STMT
MATRIX:parsertemp42200,_sbcvar330
LITERAL_FLOAT:2.0,0.5
+(-(parsertemp42200,/(rowSums(_sbcvar330),2.0)),0.5)
::STMT
LITERAL_FLOAT:0.07261134713572442
0.07261134713572442
::STMT
FLOAT:int671,int784,parsertemp86,parsertemp87,int369,wt
sqrt(/(*(*(int369,wt),-(wt,int784)),*(*(parsertemp86,parsertemp87),+(wt,int671))))
::STMT
MATRIX:U,V,X,parsertemp382840
LITERAL_FLOAT:0.0
%*%(*(!=(X,0.0),-(%*%(U,parsertemp382840),X)),V)
::STMT
MATRIX:P,D,beta
LITERAL_FLOAT:1.0E-12
*(beta,/(rowSums(*(P,D)),+(rowSums(P),1.0E-12)))
::STMT
MATRIX:B,_sbcvar887
+(%*%(_sbcvar887,B),cast.FLOAT(B))
::STMT
MATRIX:R2,R1
LITERAL_FLOAT:1.0E-6
sum(<(abs(-(R1,R2)),1.0E-6))
::STMT
MATRIX:resp,X
LITERAL_FLOAT:2.0,2.22E-16
/(%*%(t(resp),^(X,2.0)),t(+(colSums(resp),2.22E-16)))
::STMT
MATRIX:linear_terms
FLOAT:int323
LITERAL_FLOAT:3.141592653589793,1.0,2.0
^(*(+(1.0,^(linear_terms,int323)),3.141592653589793),2.0)
::STMT
MATRIX:parsertemp409054,ctab
LITERAL_FLOAT:0.6
>(/(parsertemp409054,rowSums(ctab)),0.6)
::STMT
MATRIX:parsertemp1654,A,scale_X,shift_X
%*%(diag(scale_X),t(+(%*%(parsertemp1654,A),%*%(shift_X,A))))
::STMT
MATRIX:131_s,parsertemp115723
FLOAT:eAvg
LITERAL_FLOAT:1.0,0.95
*(0.95,-(/(/(parsertemp115723,131_s),eAvg),1.0))
::STMT
MATRIX:W
LITERAL_FLOAT:6.0
*(6.0,sum(round(W)))
::STMT
MATRIX:minD,D
t(/(<=(D,minD),rowSums(<=(D,minD))))
::STMT
MATRIX:termination_bitmap,parsertemp222665
FLOAT:num_successful_runs
/(sum(*(parsertemp222665,termination_bitmap)),num_successful_runs)
::STMT
MATRIX:tpr,fpr
LITERAL_FLOAT:2.0
sum(/(*(-(fpr,fpr),+(tpr,tpr)),2.0))
::STMT
MATRIX:d,parsertemp43998
FLOAT:int458
cast.FLOAT(%*%(t(d),+(d,*(int458,parsertemp43998))))
::STMT
FLOAT:i8
LITERAL_FLOAT:1.0,24.0
+(1.0,*(24.0,i8))
::STMT
MATRIX:Y,parsertemp2798,Xw
FLOAT:int484,int328
LITERAL_FLOAT:0.0,1.0
*(*(>(-(int328,parsertemp2798),0.0),-(1.0,*(Y,Xw))),*(>(-(int484,parsertemp2798),0.0),-(1.0,*(Y,Xw))))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626,44.721359549995796
/(sqrt(*(1.0005002501250626,m2)),44.721359549995796)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,133.0
+(*(133.0,-(i,1.0)),1.0)
::STMT
MATRIX:X2,85_s
LITERAL_FLOAT:1.0
-(*(/(1.0,85_s),nrow(X2)),1.0)
::STMT
FLOAT:df
LITERAL_FLOAT:4.890349128221754
*(df,4.890349128221754)
::STMT
FLOAT:P,pIn,qIn,i8
+(+(+(P,pIn),qIn),i8)
::STMT
FLOAT:i,k
LITERAL_FLOAT:2.0
-(+(i,k),2.0)
::STMT
MATRIX:Y_row_norm,parsertemp16881
FLOAT:epsilon
t(+(sqrt(rowSums(parsertemp16881)),*(<(Y_row_norm,epsilon),epsilon)))
::STMT
MATRIX:parsertemp387154,y
LITERAL_FLOAT:2.0
cast.MATRIX(sum(^(-(y,parsertemp387154),2.0)))
::STMT
FLOAT:o_init,o
LITERAL_FLOAT:2.0
-(*(2.0,o_init),*(2.0,o))
::STMT
MATRIX:parsertemp149248,V,X,P_1K
-(*(P_1K,%*%(X,V)),*(P_1K,rowSums(*(P_1K,parsertemp149248))))
::STMT
MATRIX:xs
FLOAT:254_x
LITERAL_FLOAT:100.0
-(100.0,sum(>=(xs,254_x)))
::STMT
MATRIX:s,d,parsertemp44021
FLOAT:delta2
*(cast.FLOAT(%*%(t(d),d)),-(delta2,cast.FLOAT(%*%(parsertemp44021,s))))
::STMT
MATRIX:w,ones_ns
*(ones_ns,cast.FLOAT(w))
::STMT
MATRIX:parsertemp1511,X
FLOAT:int967,n
LITERAL_FLOAT:2.0
-(t(colSums(^(X,int967))),*(n,^(/(parsertemp1511,n),2.0)))
::STMT
MATRIX:r,s,grad
-(%*%(t(s),grad),%*%(t(s),r))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
+(/(1.0,cast.FLOAT(A)),/(1.0,cast.FLOAT(A)))
::STMT
MATRIX:p,w,parsertemp1940
FLOAT:norm_r2
+(w,*(/(norm_r2,cast.FLOAT(parsertemp1940)),p))
::STMT
LITERAL_FLOAT:1.0,2.0
-(2.0,1.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
sum(<(linear_terms,0.0))
::STMT
LITERAL_FLOAT:0.0,1.0
INT:parsertemp557199,int866
==(diag(rand(parsertemp557199,int866,1.0,1.0)),0.0)
::STMT
MATRIX:X_row_norm,parsertemp16875,parsertemp16884,parsertemp16882
FLOAT:epsilon
%*%(+(sqrt(rowSums(parsertemp16875)),*(<(X_row_norm,epsilon),epsilon)),t(+(sqrt(parsertemp16882),*(parsertemp16884,epsilon))))
::STMT
MATRIX:parsertemp437548,pred,parsertemp437666
colSums(==(*(parsertemp437666,t(parsertemp437548)),pred))
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,1048.0
-(n,-(+(i,1048.0),1.0))
::STMT
LITERAL_FLOAT:2003.0
sqrt(2003.0)
::STMT
LITERAL_FLOAT:0.0,1.0,0.05
INT:int670,int414
*(rand(int670,int414,0.0,1.0),0.05)
::STMT
MATRIX:selCols2
FLOAT:n
-(n,sum(selCols2))
::STMT
MATRIX:ytest,yhat
FLOAT:int551,mean_y_test,int687
LITERAL_FLOAT:2.0
/(sum(^(-(ytest,yhat),2.0)),-(sum(^(ytest,int551)),*(nrow(ytest),^(mean_y_test,int687))))
::STMT
MATRIX:B
FLOAT:M
*(ncol(B),M)
::STMT
MATRIX:s,w
cast.FLOAT(%*%(t(+(w,s)),+(w,s)))
::STMT
FLOAT:int99,arch_coef,var_coef,int481,a0
INT:int876,int329
rand(int876,int329,/(a0,-(-(int99,arch_coef),var_coef)),/(a0,-(-(int481,arch_coef),var_coef)))
::STMT
MATRIX:X
FLOAT:int675
LITERAL_FLOAT:0.0
sum(!=(rowSums(!=(X,int675)),0.0))
::STMT
FLOAT:i,n
LITERAL_FLOAT:1.0,1024.0
-(n,-(+(i,1024.0),1.0))
::STMT
MATRIX:Y_counts
FLOAT:num_features
-(sum(Y_counts),num_features)
::STMT
MATRIX:ss,se
FLOAT:130_eAvg
/(/(se,ss),130_eAvg)
::STMT
MATRIX:adjacency
LITERAL_FLOAT:0.0
>(rowSums(adjacency),0.0)
::STMT
MATRIX:parsertemp477718,parsertemp477715,X,Y
FLOAT:x
LITERAL_FLOAT:1.0
+(*(-(1.0,/(parsertemp477715,parsertemp477718)),Y),*(/(-(x,X),-(X,X)),Y))
::STMT
MATRIX:parsertemp11509
LITERAL_FLOAT:1.0,2.0
+(1.0,*(2.0,parsertemp11509))
::STMT
MATRIX:finite_linear_terms,the_exp
FLOAT:int960
LITERAL_FLOAT:1.0,2.0,1.0E7
*(*(==(+(int960,the_exp),1.0E7),exp(finite_linear_terms)),-(1.0,/(exp(finite_linear_terms),2.0)))
::STMT
MATRIX:p,V
LITERAL_FLOAT:1.0E-8
+(%*%(t(V),%*%(V,p)),*(1.0E-8,p))
::STMT
MATRIX:linear_terms,Y
FLOAT:parsertemp171225,link_power,float353
LITERAL_FLOAT:1.0
*(^(linear_terms,-(/(parsertemp171225,link_power),1.0)),-(Y,^(linear_terms,/(float353,link_power))))
::STMT
MATRIX:s,d
FLOAT:norm_r2,alpha_deno
t(+(s,*(/(norm_r2,alpha_deno),d)))
::STMT
MATRIX:X
FLOAT:x
-(nrow(X),sum(>=(X,x)))
::STMT
MATRIX:F,parsertemp42207
LITERAL_FLOAT:2.0
-(parsertemp42207,/(t(colSums(F)),2.0))
::STMT
MATRIX:parsertemp389218
FLOAT:int263,n
LITERAL_FLOAT:1.0E-17
+(sqrt(/(*(parsertemp389218,n),-(n,int263))),1.0E-17)
::STMT
FLOAT:parsertemp170472,parsertemp170473,log_odds,learning_rate
LITERAL_FLOAT:1.0,2.7182818284
/(^(2.7182818284,+(log_odds,*(learning_rate,parsertemp170472))),+(1.0,^(2.7182818284,+(log_odds,parsertemp170473))))
::STMT
MATRIX:y_corr
LITERAL_FLOAT:0.0,1.0,0.5
*(0.5,+(<=(y_corr,0.0),>=(y_corr,1.0)))
::STMT
FLOAT:parsertemp169814
LITERAL_FLOAT:2.302585092994046,4.0
exp(*(2.302585092994046,-(4.0,round(parsertemp169814))))
::STMT
FLOAT:s
LITERAL_FLOAT:81.0,-1.0,3.0
*(81.0,^(3.0,*(s,-1.0)))
::STMT
MATRIX:F
/(%*%(rowSums(F),colSums(F)),sum(F))
::STMT
MATRIX:Yhat_prime,E,W4
%*%(*(E,Yhat_prime),W4)
::STMT
MATRIX:d,parsertemp43996,parsertemp43997
LITERAL_FLOAT:2.0
%*%(t(d),+(d,*(2.0,%*%(parsertemp43996,parsertemp43997))))
::STMT
LITERAL_FLOAT:1.0,10000.0
/(10000.0,-(10000.0,1.0))
::STMT
MATRIX:X,Y
LITERAL_FLOAT:2.0
/(+(abs(X),abs(Y)),2.0)
::STMT
FLOAT:end_stepsize,k,kmax,start_stepsize
LITERAL_FLOAT:1.0
+(*(-(1.0,/(k,kmax)),start_stepsize),*(/(k,kmax),end_stepsize))
::STMT
FLOAT:int764,tau,int900
INT:int902,m
*(tau,sum(abs(rand(m,int902,int764,int900))))
::STMT
MATRIX:parsertemp13627,43_E
FLOAT:int232,43_q
LITERAL_FLOAT:1000.0
sqrt(/(sum(/(parsertemp13627,43_E)),*(1000.0,-(43_q,int232))))
::STMT
MATRIX:parsertemp31112,parsertemp31114,parsertemp31105,parsertemp31107
LITERAL_FLOAT:1499.0,1999.0,1500.0,2000.0
+(/(/(-(parsertemp31105,parsertemp31107),1999.0),2000.0),/(/(-(parsertemp31112,parsertemp31114),1499.0),1500.0))
::STMT
MATRIX:l1,l2
cast.FLOAT(<(l1,l2))
::STMT
MATRIX:D,ZERODIAG,beta
FLOAT:int333
*(exp(*(*(D,int333),beta)),ZERODIAG)
::STMT
MATRIX:y_hat,A,B
LITERAL_FLOAT:2.0
^(-(-(B,%*%(A,y_hat)),y_hat),2.0)
::STMT
MATRIX:missing_indicator_mat
FLOAT:global_mean
*(missing_indicator_mat,global_mean)
::STMT
MATRIX:surv,se_surv
FLOAT:parsertemp538723
*(surv,exp(/(*(parsertemp538723,se_surv),surv)))
::STMT
MATRIX:parsertemp31026,parsertemp31033
FLOAT:parsertemp31034,parsertemp31027
LITERAL_FLOAT:2.0,150.0,100.0
^(+(/(/(parsertemp31026,parsertemp31027),100.0),/(/(parsertemp31033,parsertemp31034),150.0)),2.0)
::STMT
MATRIX:Y
LITERAL_FLOAT:1.0
+(-(ncol(Y),1.0),1.0)
::STMT
MATRIX:parsertemp396410,parsertemp396407,W3_rand
LITERAL_FLOAT:0.16823164622761327
t(%*%(*(0.16823164622761327,W3_rand),t(/(parsertemp396407,parsertemp396410))))
::STMT
MATRIX:g_Y,scale_X,X
LITERAL_FLOAT:0.0
*(cast.FLOAT(diag(scale_X)),%*%(-(0.0,t(X)),g_Y))
::STMT
MATRIX:parsertemp429917,parsertemp429915
LITERAL_FLOAT:0.0,1.0,299.0
-(1.0,<=(/(-(parsertemp429915,parsertemp429917),299.0),0.0))
::STMT
MATRIX:r,g,z
sum(*(z,+(r,g)))
::STMT
FLOAT:delta
LITERAL_FLOAT:0.25
*(0.25,delta)
::STMT
FLOAT:arch_coef,int306,var_coef,a0
sqrt(/(a0,-(-(int306,arch_coef),var_coef)))
::STMT
MATRIX:parsertemp149323,LT,Y
LITERAL_FLOAT:-1.0
*(sum(*(Y,-(LT,parsertemp149323))),-1.0)
::STMT
MATRIX:p_CG,z
LITERAL_FLOAT:-1.0
*(*(cast.FLOAT(z),sum(p_CG)),-1.0)
::STMT
MATRIX:parsertemp24101
FLOAT:num_bins,float936
LITERAL_FLOAT:1.0
>(+(round(-(parsertemp24101,float936)),1.0),num_bins)
::STMT
MATRIX:parsertemp459193,2700_dX,2703_X,2703_W
FLOAT:lr
LITERAL_FLOAT:5.0E-4
*(lr,+(%*%(t(2703_X),*(parsertemp459193,2700_dX)),*(5.0E-4,2703_W)))
::STMT
MATRIX:Y
FLOAT:parsertemp185166
>(-(cast.MATRIX(max(Y)),parsertemp185166),-(parsertemp185166,min(Y)))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0,2001.0
*(/(2001.0,-(2001.0,1.0)),m2)
::STMT
MATRIX:w,parsertemp43626
FLOAT:int200,float862,float690
LITERAL_FLOAT:2.0,0.5
INT:int774,int235
+(*(0.5,%*%(t(w),rand(int774,int235,float690,float862))),*(2.0,sum(*(parsertemp43626,int200))))
::STMT
MATRIX:R,parsertemp40216,parsertemp40225
/(+(R,rowSums(*(parsertemp40216,parsertemp40225))),R)
::STMT
FLOAT:max_depth
LITERAL_FLOAT:1.0,2.0
-(^(2.0,max_depth),1.0)
::STMT
LITERAL_FLOAT:1.0,2001.0
/(2001.0,-(2001.0,1.0))
::STMT
FLOAT:int154,i
LITERAL_FLOAT:1.0,100.0
+(*(*(-(i,int154),100.0),100.0),1.0)
::STMT
MATRIX:131_s
FLOAT:n2,int815
LITERAL_FLOAT:0.050000000000000044,1.0
*(0.050000000000000044,-(*(/(int815,131_s),n2),1.0))
::STMT
MATRIX:b,E,X,sb
%*%(colSums(*(X,E)),+(b,sb))
::STMT
MATRIX:p,r,Z
FLOAT:norm_r2,parsertemp503396
LITERAL_FLOAT:-1.0
*(+(r,*(/(norm_r2,parsertemp503396),%*%(Z,p))),-1.0)
::STMT
FLOAT:obj,obj_new,gs
LITERAL_FLOAT:-0.5
/(*(-0.5,gs),-(-(obj_new,obj),gs))
::STMT
FLOAT:step
LITERAL_FLOAT:0.85
*(step,0.85)
::STMT
MATRIX:w_X,z_LS,X
/(nrow(X),sum(*(w_X,z_LS)))
::STMT
MATRIX:parsertemp285531,z,parsertemp285533
FLOAT:pp,sq_root_d,zq,parsertemp285523,parsertemp285538
LITERAL_FLOAT:0.5
+(*(0.5,sum(*(z,parsertemp285533))),*(+(+(parsertemp285538,zq),sum(parsertemp285531)),/(+(parsertemp285523,sq_root_d),pp)))
::STMT
FLOAT:191_beta2,191_t
LITERAL_FLOAT:1.0
^(191_beta2,+(191_t,1.0))
::STMT
MATRIX:2814_K
LITERAL_FLOAT:0.0
cast.FLOAT(-(0.0,2814_K))
::STMT
MATRIX:dw,history
FLOAT:sigma,float741,alpha
-(max(history),*(*(*(float741,sigma),alpha),sum(*(dw,dw))))
::STMT
MATRIX:X,parsertemp222929
+(X,*(cast.FLOAT(parsertemp222929),-(X,X)))
::STMT
MATRIX:dout1
FLOAT:192_beta1
LITERAL_FLOAT:1.0
*(-(1.0,192_beta1),colSums(dout1))
::STMT
FLOAT:lambda,beta
LITERAL_FLOAT:0.0,2.0
sqrt(^(+(0.0,*(lambda,beta)),2.0))
::STMT
MATRIX:C,parsertemp11064
LITERAL_FLOAT:10000.0,100.0
*(/(sum(==(parsertemp11064,C)),10000.0),100.0)
::STMT
FLOAT:N
LITERAL_FLOAT:1.0
/(N,-(N,1.0))
::STMT
MATRIX:residual_matrix
LITERAL_FLOAT:2.0
^(sum(residual_matrix),2.0)
::STMT
MATRIX:E,F
LITERAL_FLOAT:0.001
sum(<(-(E,F),0.001))
::STMT
MATRIX:parsertemp170505
LITERAL_FLOAT:-1.0,2.0
sum(^(*(t(parsertemp170505),-1.0),2.0))
::STMT
MATRIX:parsertemp1518,parsertemp1516,parsertemp1514
FLOAT:parsertemp1519,n
LITERAL_FLOAT:0.0,1.0
*(/(-(t(parsertemp1514),*(n,parsertemp1516)),-(n,1.0)),-(1.0,<=(/(parsertemp1518,parsertemp1519),0.0)))
::STMT
MATRIX:resp,X,parsertemp437188
FLOAT:float191
*(/(%*%(t(resp),X),t(+(parsertemp437188,float191))),%*%(t(resp),X))
::STMT
LITERAL_FLOAT:225.0
INT:int873,int730
rand(int873,int730,225.0,225.0)
::STMT
MATRIX:X_batch,parsertemp389606,2364_2361_Y,parsertemp389586
FLOAT:int440
LITERAL_FLOAT:1.0
%*%(t(*(-(2364_2361_Y,X_batch),-(int440,parsertemp389606))),/(-(exp(parsertemp389586),1.0),+(exp(parsertemp389586),1.0)))
::STMT
LITERAL_FLOAT:1.0
+(+(1.0,1.0),1.0)
::STMT
MATRIX:2846_Q,X
FLOAT:int123,int579
LITERAL_FLOAT:2.0
-(+(rowSums(^(X,int123)),sum(^(2846_Q,int579))),*(2.0,%*%(X,t(2846_Q))))
::STMT
MATRIX:s,w
LITERAL_FLOAT:0.5
*(0.5,%*%(t(+(w,s)),+(w,s)))
::STMT
FLOAT:FN,FP,TN,TP
*(*(+(TP,FP),+(TP,FN)),+(TN,FP))
::STMT
MATRIX:r,w
FLOAT:tau
LITERAL_FLOAT:0.5
+(*(0.5,sum(*(r,r))),*(tau,sum(abs(w))))
::STMT
MATRIX:parsertemp31190,parsertemp31197
FLOAT:parsertemp31191,parsertemp31198
LITERAL_FLOAT:2.0,1500.0,7000.0
^(+(/(/(parsertemp31190,parsertemp31191),7000.0),/(/(parsertemp31197,parsertemp31198),1500.0)),2.0)
::STMT
MATRIX:flip_neg,is_LT_infinite,Y_prob,parsertemp171292,parsertemp171290
FLOAT:float877
%*%(+(*(/(Y_prob,parsertemp171290),-(float877,parsertemp171292)),is_LT_infinite),flip_neg)
::STMT
MATRIX:parsertemp171090,is_one_y_corr,t,parsertemp171096,parsertemp171080
FLOAT:int787,float950
LITERAL_FLOAT:1.0
+(*(+(-(int787,t),/(parsertemp171090,parsertemp171096)),-(1.0,*(float950,parsertemp171080))),/(is_one_y_corr,-(1.0,is_one_y_corr)))
::STMT
MATRIX:simplex
FLOAT:num_func_invoc
LITERAL_FLOAT:1.0
+(num_func_invoc,-(ncol(simplex),1.0))
::STMT
MATRIX:parsertemp220848,parsertemp220853,parsertemp220850,beta
FLOAT:float768
+(parsertemp220853,*(beta,/(rowSums(parsertemp220850),+(parsertemp220848,float768))))
::STMT
MATRIX:W
FLOAT:m2
LITERAL_FLOAT:1.0
sqrt(/(*(m2,sum(W)),-(sum(W),1.0)))
::STMT
MATRIX:neighbors
diag(diag(neighbors))
::STMT
MATRIX:X,y
LITERAL_FLOAT:0.0,2.0
^(%*%(-(0.0,t(X)),y),2.0)
::STMT
MATRIX:S,addedX2
FLOAT:level
==(%*%(S,t(addedX2)),level)
::STMT
MATRIX:p,e,u,G
LITERAL_FLOAT:0.15000000000000002,0.85
+(*(0.85,%*%(G,p)),*(0.15000000000000002,%*%(%*%(e,u),p)))
::STMT
MATRIX:C,tmp,parsertemp265713
FLOAT:Xm
+(Xm,trace(*(tmp,%*%(parsertemp265713,C))))
::STMT
MATRIX:parsertemp42190,X
LITERAL_FLOAT:2.0
-(parsertemp42190,/(X,2.0))
::STMT
MATRIX:s
LITERAL_FLOAT:2.0
sum(^(s,2.0))
::STMT
MATRIX:lambda,g,beta
%*%(t(+(g,*(lambda,beta))),+(g,*(lambda,beta)))
::STMT
MATRIX:dW2
FLOAT:193_beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,193_beta2),^(dW2,2.0))
::STMT
MATRIX:parsertemp163717,p_gaps_vector
t(*(parsertemp163717,p_gaps_vector))
::STMT
MATRIX:img_in1
FLOAT:weight
LITERAL_FLOAT:1.0
*(-(1.0,weight),img_in1)
::STMT
MATRIX:dout1,mb1
FLOAT:parsertemp147007,192_t,192_lr,192_beta1,int736
LITERAL_FLOAT:1.0
*(/(*(192_lr,sqrt(parsertemp147007)),-(1.0,^(192_beta1,192_t))),+(*(192_beta1,mb1),*(-(int736,192_beta1),colSums(dout1))))
::STMT
FLOAT:parsertemp169812
LITERAL_FLOAT:2.302585092994046
/(parsertemp169812,2.302585092994046)
::STMT
MATRIX:residuals_vector
LITERAL_FLOAT:0.0
/(sum(residuals_vector),+(nrow(residuals_vector),0.0))
::STMT
MATRIX:ZtZ,parsertemp265709,Xm,parsertemp265707,parsertemp265705,Z,parsertemp265702
%*%(t(/(%*%(parsertemp265709,Z),sum(ZtZ))),/(%*%(t(Xm),%*%(Xm,parsertemp265702)),sum(+(parsertemp265705,parsertemp265707))))
::STMT
FLOAT:dd,step_sz
*(step_sz,dd)
::STMT
MATRIX:WM,CVars,CFreqs
FLOAT:parsertemp31268,int795,W,float277
LITERAL_FLOAT:1.0
/(sum(*(-(CFreqs,int795),CVars)),*(-(sum(WM),1.0),/(*(parsertemp31268,W),-(W,float277))))
::STMT
MATRIX:ss,se
/(se,ss)
::STMT
MATRIX:g_Y,scale_X,X
LITERAL_FLOAT:-1.0
%*%(diag(scale_X),%*%(*(t(X),-1.0),g_Y))
::STMT
MATRIX:maskd1,out1
FLOAT:p
LITERAL_FLOAT:0.0
*(>(out1,0.0),/(maskd1,p))
::STMT
MATRIX:V,W,parsertemp10741,H
LITERAL_FLOAT:1.0E-8
*(H,/(%*%(t(W),V),+(%*%(parsertemp10741,H),1.0E-8)))
::STMT
MATRIX:parsertemp386448,withinEps
LITERAL_FLOAT:0.0,1.0
>(colSums(>(*(parsertemp386448,withinEps),0.0)),1.0)
::STMT
MATRIX:finite_linear_terms
LITERAL_FLOAT:-1.0
*(exp(finite_linear_terms),-1.0)
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
+(-(nrow(X),sum(>=(X,x))),1.0)
::STMT
MATRIX:parsertemp122290,X2
LITERAL_FLOAT:0.0,4.0
|(<(t(colSums(X2)),4.0),==(t(%*%(parsertemp122290,X2)),0.0))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
INT:int258,int270
%*%(+(rowSums(classFeatureCounts),*(50.0,1.0)),rand(int270,int258,1.0,1.0))
::STMT
MATRIX:f,parsertemp472177,I,parsertemp472179
LITERAL_FLOAT:2.0
^(*(I,-(%*%(f,parsertemp472177),t(parsertemp472179))),2.0)
::STMT
MATRIX:parsertemp387552
LITERAL_FLOAT:10.0
^(10.0,parsertemp387552)
::STMT
MATRIX:parsertemp72182
FLOAT:subvector_size
LITERAL_FLOAT:1.0
+(*(parsertemp72182,subvector_size),1.0)
::STMT
MATRIX:Y,parsertemp282723
==(Y,cast.FLOAT(parsertemp282723))
::STMT
MATRIX:Xm,parsertemp265733
abs(/(sum(-(parsertemp265733,Xm)),sum(Xm)))
::STMT
FLOAT:end_stepsize,k,kmax
*(/(k,kmax),end_stepsize)
::STMT
MATRIX:parsertemp271862,parsertemp271860
FLOAT:obj,parsertemp271888
LITERAL_FLOAT:-0.5
/(-(obj,parsertemp271888),*(-0.5,-(sum(parsertemp271860),sum(parsertemp271862))))
::STMT
MATRIX:parsertemp500606,parsertemp500604,w
FLOAT:int50
t(-(*(*(parsertemp500604,parsertemp500606),>(parsertemp500606,int50)),w))
::STMT
MATRIX:binary_array
LITERAL_FLOAT:1.0
+(1.0,cast.FLOAT(binary_array))
::STMT
MATRIX:R,dssp,dsep,parsertemp40232,parsertemp40220
FLOAT:eAvg
/(/(-(+(R,dsep),rowSums(parsertemp40232)),-(+(R,dssp),rowSums(parsertemp40220))),eAvg)
::STMT
MATRIX:parsertemp386457,parsertemp386459,neighbors,corePts,withinEps,parsertemp386456
LITERAL_FLOAT:0.0
*(>(*(*(neighbors,corePts),withinEps),0.0),==(-(*(parsertemp386456,parsertemp386457),parsertemp386459),0.0))
::STMT
MATRIX:parsertemp222331
LITERAL_FLOAT:200.0,0.5
round(+(0.5,/(parsertemp222331,200.0)))
::STMT
MATRIX:CFreqs1,present_domain_vals_mat,parsertemp27487
LITERAL_FLOAT:1.0
*(-(%*%(present_domain_vals_mat,CFreqs1),1.0),%*%(present_domain_vals_mat,parsertemp27487))
::STMT
MATRIX:p,e,u
%*%(%*%(e,u),p)
::STMT
MATRIX:parsertemp220853,parsertemp220854,betamin
FLOAT:logU
LITERAL_FLOAT:0.0
*(<(-(+(parsertemp220853,parsertemp220854),logU),0.0),betamin)
::STMT
MATRIX:b,E,X,sb
cast.FLOAT(%*%(colSums(*(X,E)),+(b,sb)))
::STMT
MATRIX:sb
FLOAT:delta
LITERAL_FLOAT:2.0
-(sum(^(sb,2.0)),^(delta,2.0))
::STMT
MATRIX:parsertemp171084,parsertemp171083
LITERAL_FLOAT:0.010328,-2.0,0.802853
*(sqrt(*(-2.0,parsertemp171083)),+(0.802853,*(sqrt(parsertemp171084),0.010328)))
::STMT
MATRIX:c,G
*(G,t(c))
::STMT
MATRIX:parsertemp399242,W3_rand
FLOAT:int741,int312
LITERAL_FLOAT:0.6546536707079771
%*%(*(0.6546536707079771,W3_rand),t(/(-(parsertemp399242,int741),+(parsertemp399242,int312))))
::STMT
FLOAT:parsertemp164939
LITERAL_FLOAT:2.0,100.0
+(2.0,*(100.0,parsertemp164939))
::STMT
MATRIX:p,p2
LITERAL_FLOAT:1.0E8
>(abs(-(p2,p)),1.0E8)
::STMT
MATRIX:ytest,yhat
sum(-(ytest,yhat))
::STMT
MATRIX:parsertemp221021
LITERAL_FLOAT:1.0
+(diag(parsertemp221021),1.0)
::STMT
MATRIX:CFreqs1,present_domain_vals_mat
LITERAL_FLOAT:1.0
-(%*%(present_domain_vals_mat,CFreqs1),1.0)
::STMT
MATRIX:G,authorities
/(%*%(G,authorities),max(%*%(G,authorities)))
::STMT
LITERAL_FLOAT:1.0,2003.0
-(2003.0,1.0)
::STMT
MATRIX:parsertemp137847,keyPos1
*(t(parsertemp137847),keyPos1)
::STMT
MATRIX:s,w,wnew,parsertemp44079
LITERAL_FLOAT:-1.0,2.0,0.5
+(*(0.5,%*%(t(wnew),+(w,s))),*(2.0,*(-1.0,sum(parsertemp44079))))
::STMT
MATRIX:m_iter_err_sum_squared,parsertemp379562,parsertemp379571,m_iter_err_sum,parsertemp379569
FLOAT:i_process_item
LITERAL_FLOAT:1.0
/(+(-(*(parsertemp379569,i_process_item),*(parsertemp379571,m_iter_err_sum)),+(colSums(parsertemp379562),m_iter_err_sum_squared)),-(i_process_item,1.0))
::STMT
MATRIX:p,r,Z
FLOAT:norm_r2,parsertemp503396
LITERAL_FLOAT:2.0
^(+(r,*(/(norm_r2,parsertemp503396),%*%(Z,p))),2.0)
::STMT
MATRIX:dX,v
FLOAT:lr,mu
-(*(mu,v),*(lr,dX))
::STMT
FLOAT:246_AIC_best,246_thr
abs(*(246_thr,246_AIC_best))
::STMT
MATRIX:X,Centering,ScaleFactor
%*%(t(/(-(X,Centering),ScaleFactor)),/(-(X,Centering),ScaleFactor))
::STMT
MATRIX:d,X,logisticD
LITERAL_FLOAT:2.0
*(2.0,%*%(t(X),*(logisticD,%*%(X,d))))
::STMT
MATRIX:U,row_nonzeros
LITERAL_FLOAT:2.0
sum(*(^(U,2.0),row_nonzeros))
::STMT
MATRIX:s,w
LITERAL_FLOAT:0.5
*(0.5,%*%(t(+(w,s)),+(w,s)))
::STMT
MATRIX:parsertemp410979,W,X,H,parsertemp410981,parsertemp410984
/(*(W,%*%(/(X,parsertemp410984),t(H))),t(rowSums(/(parsertemp410979,parsertemp410981))))
::STMT
MATRIX:S,parsertemp382904,V,W,row_nonzeros
LITERAL_FLOAT:1.0E-6
+(%*%(*(W,%*%(S,parsertemp382904)),V),*(*(1.0E-6,S),row_nonzeros))
::STMT
FLOAT:parsertemp31330
LITERAL_FLOAT:9999.0,10000.0
*(9999.0,/(*(parsertemp31330,10000.0),9999.0))
::STMT
LITERAL_FLOAT:3.0,2003.0
-(2003.0,3.0)
::STMT
MATRIX:out
LITERAL_FLOAT:0.5
*(0.5,cast.FLOAT(%*%(t(out),out)))
::STMT
MATRIX:upd_W1,W1_grad,W1
FLOAT:parsertemp389637,mu,step
+(W1,-(*(mu,upd_W1),*(/(step,parsertemp389637),W1_grad)))
::STMT
MATRIX:ones,classFeatureCounts
FLOAT:float714,int456
LITERAL_FLOAT:1.0
/(+(classFeatureCounts,1.0),%*%(+(rowSums(classFeatureCounts),*(int456,float714)),ones))
::STMT
LITERAL_FLOAT:2.0,2001.0
^(2001.0,2.0)
::STMT
MATRIX:W1_rand,X,parsertemp400556,parsertemp400566
FLOAT:float936
LITERAL_FLOAT:0.08333333333333333
%*%(*(0.08333333333333333,W1_rand),t(/(-(X,parsertemp400556),+(parsertemp400566,float936))))
::STMT
FLOAT:avg_res,ytest,mean_y_test,int765,yhat,int958
LITERAL_FLOAT:1.0,2.0
/(-(^(-(ytest,yhat),2.0),*(1.0,^(avg_res,int958))),-(^(cast.FLOAT(ytest),2.0),*(1.0,^(mean_y_test,int765))))
::STMT
MATRIX:X
FLOAT:x
/(-(x,X),-(cast.FLOAT(X),cast.FLOAT(X)))
::STMT
MATRIX:col_nonzeros,U,V,row_nonzeros
FLOAT:int917,int674
+(sum(*(^(U,int917),row_nonzeros)),sum(*(^(V,int674),col_nonzeros)))
::STMT
MATRIX:parsertemp24102
FLOAT:num_bins
LITERAL_FLOAT:1.0
*(>(+(round(parsertemp24102),1.0),num_bins),num_bins)
::STMT
MATRIX:parsertemp539204
FLOAT:float276,float683
LITERAL_FLOAT:0.6666666666666666
-(max(^(/(parsertemp539204,float276),0.6666666666666666)),min(^(/(parsertemp539204,float683),0.6666666666666666)))
::STMT
MATRIX:r,d,Hd,parsertemp44001
FLOAT:int112
*(/(sum(^(r,int112)),cast.FLOAT(%*%(parsertemp44001,Hd))),d)
::STMT
MATRIX:m_active_flag
LITERAL_FLOAT:0.0
t(==(m_active_flag,0.0))
::STMT
LITERAL_FLOAT:1.0005002501250626
1.0005002501250626
::STMT
MATRIX:parsertemp170242,parsertemp170240,parsertemp170238
FLOAT:float516,float545,float457
LITERAL_FLOAT:1.0,1.421413741
*(/(1.0,+(1.0,*(parsertemp170238,float545))),+(1.421413741,*(/(float457,parsertemp170240),+(float516,parsertemp170242))))
::STMT
LITERAL_FLOAT:2.0,2003.0
-(2003.0,2.0)
::STMT
MATRIX:t_gp,parsertemp170243,parsertemp170239
FLOAT:float433
LITERAL_FLOAT:1.0,1.421413741,-0.284496736
+(-0.284496736,*(/(1.0,+(float433,parsertemp170239)),+(1.421413741,*(t_gp,parsertemp170243))))
::STMT
MATRIX:X
FLOAT:int432
LITERAL_FLOAT:1.0E-6
<(sqrt(rowSums(^(X,int432))),1.0E-6)
::STMT
MATRIX:A
LITERAL_FLOAT:1.0
>=(rowSums(abs(A)),1.0)
::STMT
FLOAT:int709,b
LITERAL_FLOAT:2.0
-(^(b,2.0),int709)
::STMT
MATRIX:B
FLOAT:M
/(nrow(B),M)
::STMT
MATRIX:simplex
LITERAL_FLOAT:0.0
+(0.0,ncol(simplex))
::STMT
MATRIX:minD
FLOAT:sumXsq
+(sumXsq,sum(minD))
::STMT
MATRIX:H,parsertemp220860,parsertemp220861,beta
FLOAT:logU
LITERAL_FLOAT:0.0,2.0
/(*(<(-(H,logU),0.0),+(beta,+(parsertemp220860,parsertemp220861))),2.0)
::STMT
MATRIX:output1,dataset
LITERAL_FLOAT:0.16
<(abs(-(output1,dataset)),0.16)
::STMT
MATRIX:r,s,grad
LITERAL_FLOAT:-0.5
*(-0.5,-(%*%(t(s),grad),%*%(t(s),r)))
::STMT
MATRIX:parsertemp131907,cumHistMul,offset,parsertemp132092,histMul,outBucket
-(offset,%*%(==(outBucket,%*%(parsertemp132092,parsertemp131907)),-(cumHistMul,histMul)))
::STMT
LITERAL_FLOAT:-1.0,0.001
*(0.001,-1.0)
::STMT
MATRIX:centroid_placer,X_samples
%*%(centroid_placer,%*%(centroid_placer,X_samples))
::STMT
LITERAL_FLOAT:0.0,1.0
/(1.0,0.0)
::STMT
LITERAL_FLOAT:1.0,2.0
/(1.0,2.0)
::STMT
LITERAL_FLOAT:-1.0,2.0
/(-1.0,2.0)
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,2.0
/(*($1:ncol(X),+($1,1.0)),2.0)
::STMT
MATRIX:parsertemp165076,X,y
LITERAL_FLOAT:2.0
/(sum(^(-(y,parsertemp165076),2.0)),nrow(X))
::STMT
MATRIX:parsertemp170277
LITERAL_FLOAT:3.141592653589793
/(parsertemp170277,3.141592653589793)
::STMT
MATRIX:parsertemp403497,parsertemp403500,W3_rand
LITERAL_FLOAT:0.1651445647689541
t(%*%(*(0.1651445647689541,W3_rand),t(/(parsertemp403497,parsertemp403500))))
::STMT
MATRIX:parsertemp286536,parsertemp286535
FLOAT:float220
sqrt(cast.FLOAT(%*%(t(parsertemp286536),+(float220,parsertemp286535))))
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
/(*(n_risk,n_event_stratum),n_risk_stratum)
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,80656.0
*(-(i,1.0),80656.0)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:1.0
-(1.0,>=(y_corr,1.0))
::STMT
MATRIX:means,parsertemp389215
FLOAT:n
LITERAL_FLOAT:1.0
/(*(-(/(parsertemp389215,n),*(means,means)),n),-(n,1.0))
::STMT
FLOAT:max_depth
LITERAL_FLOAT:1.0,2.0
*(2.0,-(^(2.0,max_depth),1.0))
::STMT
LITERAL_FLOAT:1.0,1.5
/(1.0,1.5)
::STMT
FLOAT:e,mu
LITERAL_FLOAT:0.999,4.0
+(mu,/(-(0.999,mu),-(4.0,e)))
::STMT
MATRIX:B2,ytest,Xtest,parsertemp387577
cast.FLOAT(%*%(t(-(ytest,parsertemp387577)),-(ytest,%*%(Xtest,B2))))
::STMT
MATRIX:r,obj,parsertemp44063,parsertemp44077,parsertemp44065,grad
FLOAT:float27,C,parsertemp44081
LITERAL_FLOAT:-0.5
/(-(obj,+(*(float27,parsertemp44077),*(C,parsertemp44081))),*(-0.5,-(%*%(parsertemp44063,grad),%*%(parsertemp44065,r))))
::STMT
MATRIX:LT,parsertemp149320,parsertemp150469
exp(-(LT,%*%(parsertemp149320,parsertemp150469)))
::STMT
FLOAT:i
LITERAL_FLOAT:80656.0
*(i,80656.0)
::STMT
MATRIX:r,d,parsertemp43998
FLOAT:C
/(sum(*(r,r)),%*%(t(d),+(d,*(C,parsertemp43998))))
::STMT
MATRIX:X,parsertemp220785
FLOAT:int457,int358
LITERAL_FLOAT:-2.0
+(+(*(-2.0,%*%(X,parsertemp220785)),rowSums(^(X,int457))),t(rowSums(^(X,int358))))
::STMT
MATRIX:D,parsertemp10961,parsertemp10958
+(%*%(D,t(parsertemp10958)),t(parsertemp10961))
::STMT
LITERAL_FLOAT:1.0,10.0
/(1.0,10.0)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:105.0,1.0
INT:int623,int718
%*%(+(rowSums(classFeatureCounts),*(105.0,1.0)),rand(int623,int718,1.0,1.0))
::STMT
MATRIX:237_present_domain_vals_mat
LITERAL_FLOAT:10000.0
-(10000.0,nrow(237_present_domain_vals_mat))
::STMT
MATRIX:F
LITERAL_FLOAT:1.0
/(F,-(sum(F),1.0))
::STMT
MATRIX:Q
FLOAT:int677
LITERAL_FLOAT:1.0
INT:int897,parsertemp500306
%*%(rand(parsertemp500306,int897,1.0,1.0),t(rowSums(^(Q,int677))))
::STMT
LITERAL_FLOAT:1.0,2001.0
+(2001.0,1.0)
::STMT
MATRIX:r,g,z
LITERAL_FLOAT:0.5
*(0.5,sum(*(z,+(r,g))))
::STMT
LITERAL_FLOAT:1.0E-14
1.0E-14
::STMT
LITERAL_FLOAT:9.999999999999998E-15
9.999999999999998E-15
::STMT
MATRIX:pearson_residual_sq
LITERAL_FLOAT:9950.0
/(sum(pearson_residual_sq),9950.0)
::STMT
FLOAT:parsertemp72162,M
LITERAL_FLOAT:1.0
*(+(parsertemp72162,1.0),M)
::STMT
MATRIX:g_Y,lambda,parsertemp171599,scale_X,beta
FLOAT:int223
+(*(cast.FLOAT(diag(scale_X)),%*%(-(int223,parsertemp171599),g_Y)),*(cast.FLOAT(lambda),cast.FLOAT(beta)))
::STMT
MATRIX:S
LITERAL_FLOAT:2.0
^(diag(S),2.0)
::STMT
MATRIX:R,ones
%*%(t(+(R,diag(ones))),+(R,diag(ones)))
::STMT
MATRIX:scale_X,shift_X,X
LITERAL_FLOAT:2.0
%*%(X,*(*(2.0,scale_X),shift_X))
::STMT
MATRIX:P
LITERAL_FLOAT:1.0
<=(rowSums(P),1.0)
::STMT
MATRIX:ytest
LITERAL_FLOAT:1.0,2.0
*(1.0,^(/(cast.FLOAT(ytest),1.0),2.0))
::STMT
LITERAL_FLOAT:5.0,2001.0
+(2001.0,5.0)
::STMT
MATRIX:out1,187_dX,parsertemp146955
FLOAT:beta1,int533
LITERAL_FLOAT:1.0
*(-(1.0,beta1),colSums(*(>(out1,int533),*(parsertemp146955,187_dX))))
::STMT
LITERAL_FLOAT:3.0,2001.0
+(2001.0,3.0)
::STMT
MATRIX:d,od,X,logisticD
FLOAT:C
+(d,*(C,%*%(t(X),*(logisticD,od))))
::STMT
MATRIX:M
LITERAL_FLOAT:2.0
/(ncol(M),2.0)
::STMT
MATRIX:X_batch,maskd1,out1,185_dX,parsertemp146947,W2
FLOAT:p,int850
%*%(t(X_batch),*(*(>(out1,int850),/(maskd1,p)),%*%(*(parsertemp146947,185_dX),t(W2))))
::STMT
MATRIX:M
sum(exp(-(M,max(M))))
::STMT
FLOAT:int134,z,pp_CG,parsertemp170091
LITERAL_FLOAT:0.5
*(0.5,/(-(*(z,int134),sqrt(parsertemp170091)),pp_CG))
::STMT
MATRIX:Grad
LITERAL_FLOAT:-1.0,2.0
sum(^(*(Grad,-1.0),2.0))
::STMT
MATRIX:sums
LITERAL_FLOAT:4.0
/(sums,4.0)
::STMT
MATRIX:parsertemp221417
FLOAT:float22
LITERAL_FLOAT:0.1,2.0
*(sum(^(-(float22,parsertemp221417),2.0)),0.1)
::STMT
MATRIX:t,parsertemp32854,parsertemp32848,Y,parsertemp32857,parsertemp32858
cast.FLOAT(+(+(*(parsertemp32848,Y),*(t,Y)),*(*(t,parsertemp32854),+(parsertemp32857,parsertemp32858))))
::STMT
MATRIX:lambda,parsertemp286549
FLOAT:new_log_l
LITERAL_FLOAT:0.5
-(new_log_l,*(0.5,cast.FLOAT(%*%(lambda,parsertemp286549))))
::STMT
MATRIX:parsertemp220786,parsertemp220783
FLOAT:int927
sqrt(+(+(*(int927,parsertemp220786),rowSums(parsertemp220783)),t(rowSums(parsertemp220783))))
::STMT
MATRIX:parsertemp500607,X,y,parsertemp500610
t(-(%*%(X,*(parsertemp500607,parsertemp500610)),y))
::STMT
MATRIX:s,parsertemp44016,d
LITERAL_FLOAT:2.0
^(%*%(t(-(s,parsertemp44016)),d),2.0)
::STMT
MATRIX:output_values
FLOAT:log_odds,learning_rate
+(log_odds,*(learning_rate,sum(output_values)))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
/(X,2.0)
::STMT
MATRIX:parsertemp561025
LITERAL_FLOAT:0.0
/(parsertemp561025,0.0)
::STMT
MATRIX:y_corr
LITERAL_FLOAT:1.0,2.0,0.5
*(-(1.0,*(2.0,y_corr)),>(y_corr,0.5))
::STMT
MATRIX:prec_chol
LITERAL_FLOAT:2.0
t(^(prec_chol,2.0))
::STMT
MATRIX:g_reg,p_CG
FLOAT:parsertemp170113,q_CG,int940,z,pq_CG,pp_CG,parsertemp170091
*(+(+(*(parsertemp170113,pq_CG),*(z,q_CG)),sum(*(g_reg,p_CG))),/(-(*(z,int940),sqrt(parsertemp170091)),pp_CG))
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:0.010328,-2.0
*(sqrt(*(-2.0,parsertemp171083)),0.010328)
::STMT
FLOAT:parsertemp22454,parsertemp22485
LITERAL_FLOAT:2.0
exp(-(parsertemp22485,*(2.0,sqrt(parsertemp22454))))
::STMT
MATRIX:sig_sq
sqrt(sig_sq)
::STMT
MATRIX:parsertemp171083
LITERAL_FLOAT:-2.0
sqrt(*(-2.0,parsertemp171083))
::STMT
MATRIX:parsertemp31910,X
FLOAT:alpha
LITERAL_FLOAT:1.0
*(-(1.0,alpha),-(/(nrow(X),t(parsertemp31910)),1.0))
::STMT
MATRIX:252_Y,252_X,252_K
LITERAL_FLOAT:0.0
+(*(-(0.0,cast.FLOAT(252_K)),-(cast.FLOAT(252_X),cast.FLOAT(252_X))),-(cast.FLOAT(252_Y),cast.FLOAT(252_Y)))
::STMT
LITERAL_FLOAT:1.0,2.0,3.0,2000.0
*(*(-(2000.0,2.0),+(2000.0,1.0)),+(2000.0,3.0))
::STMT
MATRIX:R,S,Grad
-(sum(*(S,Grad)),sum(*(S,R)))
::STMT
MATRIX:p,e,u,G
LITERAL_FLOAT:0.15000000000000002,0.85
+(*(0.85,%*%(G,p)),*(0.15000000000000002,%*%(%*%(e,u),p)))
::STMT
MATRIX:f,parsertemp472172
LITERAL_FLOAT:0.0
rowSums(*(-(0.0,f),parsertemp472172))
::STMT
FLOAT:int780,ss2,ssPrev,Xm,parsertemp265718
LITERAL_FLOAT:4000.0
/(/(-(+(Xm,ss2),*(int780,parsertemp265718)),4000.0),ssPrev)
::STMT
MATRIX:parsertemp107030
LITERAL_FLOAT:1.0,7.0
+(*(parsertemp107030,7.0),1.0)
::STMT
MATRIX:X,K
*(cast.FLOAT(K),-(cast.FLOAT(X),cast.FLOAT(X)))
::STMT
MATRIX:Xm
rowSums(t(Xm))
::STMT
MATRIX:parsertemp436659
t(rowSums(parsertemp436659))
::STMT
LITERAL_FLOAT:1.0E-5
1.0E-5
::STMT
MATRIX:r,d,parsertemp43998
FLOAT:int550
LITERAL_FLOAT:2.0
/(sum(^(r,2.0)),%*%(t(d),+(d,*(int550,parsertemp43998))))
::STMT
LITERAL_FLOAT:32.0
INT:int197,int136
rand(int197,int136,32.0,32.0)
::STMT
MATRIX:X,tS
FLOAT:l
t(colSums(==(%*%(X,tS),l)))
::STMT
MATRIX:Y_prob,Y
LITERAL_FLOAT:0.0
sum(*(<=(Y_prob,0.0),abs(Y)))
::STMT
MATRIX:jaccardDist,adjacency
FLOAT:threshold
&(adjacency,>=(jaccardDist,threshold))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626,4.0
^(sqrt(*(1.0005002501250626,m2)),4.0)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,750.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),750.0))
::STMT
MATRIX:_sbcvar11,43_r,43_c
LITERAL_FLOAT:2.0,1000.0
^(-(_sbcvar11,/(%*%(43_r,43_c),1000.0)),2.0)
::STMT
MATRIX:G,authorities,hubs
LITERAL_FLOAT:2.0
^(-(/(%*%(G,authorities),max(hubs)),hubs),2.0)
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626,3.0
^(sqrt(*(1.0005002501250626,m2)),3.0)
::STMT
MATRIX:surv,n_risk
FLOAT:int594
/(*(surv,sqrt(-(int594,surv))),sqrt(n_risk))
::STMT
FLOAT:so_linear_approx
LITERAL_FLOAT:-0.5
*(-0.5,so_linear_approx)
::STMT
FLOAT:delta
LITERAL_FLOAT:0.5
*(0.5,delta)
::STMT
MATRIX:se_surv
FLOAT:z_alpha_2
LITERAL_FLOAT:-1.0
*(*(z_alpha_2,-1.0),se_surv)
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0004995004995005
sqrt(*(1.0004995004995005,m2))
::STMT
MATRIX:classCounts
LITERAL_FLOAT:80.0
/(classCounts,80.0)
::STMT
MATRIX:parsertemp379565,m_iter_err_sum
FLOAT:i_process_item
LITERAL_FLOAT:-1.0,2.0
*(2.0,/(*(-(parsertemp379565,m_iter_err_sum),-1.0),i_process_item))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,2.0
/(colSums(^(X,2.0)),-(nrow(X),1.0))
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int681,int584,int92,int34
LITERAL_FLOAT:7.996E9,2.0,3.37275E9
/(^(+(/(posSampleVariances,int681),/(negSampleVariances,int34)),2.0),+(/(^(posSampleVariances,int584),7.996E9),/(^(negSampleVariances,int92),3.37275E9)))
::STMT
LITERAL_FLOAT:1.0,20.0
-(20.0,1.0)
::STMT
MATRIX:scores,parsertemp145878
/(exp(-(scores,parsertemp145878)),rowSums(exp(-(scores,parsertemp145878))))
::STMT
MATRIX:t_gp,parsertemp171332,pt_gp,parsertemp171331,Y,the_gauss_exp,parsertemp171327,parsertemp171316
FLOAT:one_over_sqrt_two_pi
LITERAL_FLOAT:2.0,0.25
/(*(one_over_sqrt_two_pi,+(-(Y,parsertemp171327),*(parsertemp171331,parsertemp171332))),*(*(0.25,*(t_gp,parsertemp171316)),-(2.0,*(the_gauss_exp,pt_gp))))
::STMT
MATRIX:ss
FLOAT:alpha
LITERAL_FLOAT:1.0,40.0
*(-(1.0,alpha),-(/(40.0,ss),1.0))
::STMT
LITERAL_FLOAT:0.3989422804014327
0.3989422804014327
::STMT
LITERAL_FLOAT:0.1
0.1
::STMT
LITERAL_FLOAT:-0.1
-0.1
::STMT
MATRIX:X
FLOAT:var_lag,parsertemp496688,parsertemp496694,var_coef,a0
LITERAL_FLOAT:2.0
+(parsertemp496694,/(^(cast.FLOAT(X),2.0),+(+(a0,parsertemp496688),*(var_coef,var_lag))))
::STMT
MATRIX:parsertemp222331
LITERAL_FLOAT:200.0
/(parsertemp222331,200.0)
::STMT
MATRIX:parsertemp220903
FLOAT:float857
LITERAL_FLOAT:2.0,1.0E-5
*(sum(^(-(float857,parsertemp220903),2.0)),1.0E-5)
::STMT
MATRIX:parsertemp399255,W4_rand
FLOAT:int818,int687
LITERAL_FLOAT:0.08725945907447251
%*%(*(0.08725945907447251,W4_rand),t(/(-(parsertemp399255,int687),+(parsertemp399255,int818))))
::STMT
MATRIX:tmp
FLOAT:N,parsertemp274090
LITERAL_FLOAT:0.0,1.0
*(/(tmp,-(N,1.0)),-(1.0,<=(/(tmp,parsertemp274090),0.0)))
::STMT
MATRIX:W,H,parsertemp411105
LITERAL_FLOAT:1.0E-8
+(%*%(W,%*%(*(H,parsertemp411105),t(H))),1.0E-8)
::STMT
MATRIX:log_prob,X
LITERAL_FLOAT:1.8378770664093453,-0.5
*(-0.5,+(*(ncol(X),1.8378770664093453),log_prob))
::STMT
LITERAL_FLOAT:1.5000000000000002E-8
1.5000000000000002E-8
::STMT
MATRIX:parsertemp539203
FLOAT:int993
LITERAL_FLOAT:1.0,2.0,1.5
max(^(/(*(parsertemp539203,int993),2.0),/(1.0,1.5)))
::STMT
FLOAT:width,x1,x2
LITERAL_FLOAT:-1.0,2.0
/(*(-1.0,^(-(x1,x2),2.0)),*(2.0,^(width,2.0)))
::STMT
MATRIX:images
LITERAL_FLOAT:255.0
/(images,255.0)
::STMT
MATRIX:W,parsertemp411110,X,H
FLOAT:eps
*(W,/(%*%(X,t(H)),+(%*%(W,parsertemp411110),eps)))
::STMT
MATRIX:ytest
LITERAL_FLOAT:1.0
/(cast.FLOAT(ytest),1.0)
::STMT
LITERAL_FLOAT:1.0,2.0,4.0,2003.0
*(4.0,-(^(2003.0,2.0),1.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0,1.0
-(exp(-(0.0,linear_terms)),1.0)
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.0002795638803466
*(m2X,1.0002795638803466)
::STMT
MATRIX:classCounts
LITERAL_FLOAT:100.0
/(classCounts,100.0)
::STMT
MATRIX:parsertemp1904,y
LITERAL_FLOAT:-1.0
sum(*(*(%*%(parsertemp1904,y),-1.0),*(%*%(parsertemp1904,y),-1.0)))
::STMT
MATRIX:means,Y,vars
LITERAL_FLOAT:2.0
sum(/(^(-(Y,means),2.0),vars))
::STMT
MATRIX:parsertemp409788,parsertemp409797
LITERAL_FLOAT:0.0
t(+(-(0.0,t(parsertemp409788)),t(colSums(parsertemp409797))))
::STMT
MATRIX:parsertemp386438,neighbors
FLOAT:eps
LITERAL_FLOAT:0.0
rowSums(*(<=(-(neighbors,parsertemp386438),eps),<(0.0,-(neighbors,parsertemp386438))))
::STMT
MATRIX:obj,parsertemp44077
FLOAT:int642,parsertemp44079
LITERAL_FLOAT:2.0,0.5
-(cast.FLOAT(obj),+(*(0.5,cast.FLOAT(parsertemp44077)),*(2.0,*(int642,parsertemp44079))))
::STMT
MATRIX:weight
LITERAL_FLOAT:133.0
/(weight,133.0)
::STMT
MATRIX:F
/(%*%(rowSums(F),colSums(F)),sum(F))
::STMT
LITERAL_FLOAT:0.025
0.025
::STMT
FLOAT:42_m2X
LITERAL_FLOAT:1.001001001001001
sqrt(*(42_m2X,1.001001001001001))
::STMT
MATRIX:Y_Train,Y_Test
FLOAT:sumY,sumX,parsertemp251796,parsertemp251795
abs(-(-(+(sumX,sumY),+(parsertemp251795,parsertemp251796)),+(sum(Y_Train),sum(Y_Test))))
::STMT
MATRIX:V
FLOAT:var,mu
LITERAL_FLOAT:5.0
>(V,+(mu,*(5.0,sqrt(var))))
::STMT
MATRIX:V
FLOAT:var,mu
LITERAL_FLOAT:5.0
<(V,-(mu,*(5.0,sqrt(var))))
::STMT
MATRIX:p_CG
FLOAT:trust_delta_sq,z,pp_CG
sqrt(-(*(cast.FLOAT(p_CG),cast.FLOAT(p_CG)),*(pp_CG,-(z,trust_delta_sq))))
::STMT
MATRIX:parsertemp171326,is_lt_pos,parsertemp171323,Y
FLOAT:float940
LITERAL_FLOAT:0.3989422804014327
*(0.3989422804014327,+(-(Y,*(parsertemp171326,is_lt_pos)),*(*(parsertemp171323,parsertemp171326),-(is_lt_pos,float940))))
::STMT
FLOAT:vicinity,target_a0,a0
LITERAL_FLOAT:1.0
+(*(vicinity,target_a0),*(-(1.0,vicinity),a0))
::STMT
MATRIX:_sbcvar92,220_r,220_c
LITERAL_FLOAT:0.0,1.0E-4
*(==(/(%*%(220_r,220_c),sum(_sbcvar92)),0.0),1.0E-4)
::STMT
MATRIX:p,q,lambda
FLOAT:norm_r2
*(/(norm_r2,cast.FLOAT(%*%(p,q))),+(q,*(lambda,p)))
::STMT
MATRIX:r
FLOAT:int383
LITERAL_FLOAT:2.0,9.999999999999998E-15
*(sum(^(-(int383,r),2.0)),9.999999999999998E-15)
::STMT
LITERAL_FLOAT:1.0,2.0,1500.0
*(^(1500.0,2.0),-(1500.0,1.0))
::STMT
MATRIX:B,parsertemp410245,X_t
LITERAL_FLOAT:0.0,2.0
/(-(0.0,parsertemp410245),*(2.0,exp(%*%(X_t,B))))
::STMT
MATRIX:r,Hd
FLOAT:c
LITERAL_FLOAT:0.0
-(0.0,+(r,*(c,Hd)))
::STMT
MATRIX:Y
FLOAT:class
LITERAL_FLOAT:2.0
*(2.0,==(Y,class))
::STMT
MATRIX:qLow,length,qUp
LITERAL_FLOAT:0.0
>(rowSums(|(<(length,qLow),>(length,qUp))),0.0)
::STMT
MATRIX:var_X_cols,parsertemp429917,parsertemp429915
FLOAT:int636
LITERAL_FLOAT:0.0,1.0,299.0
+(*(/(-(parsertemp429915,parsertemp429917),299.0),-(1.0,<=(var_X_cols,int636))),<=(/(-(parsertemp429915,parsertemp429917),299.0),0.0))
::STMT
MATRIX:parsertemp43635
FLOAT:float100
LITERAL_FLOAT:2.0
sqrt(sum(^(+(float100,parsertemp43635),2.0)))
::STMT
FLOAT:window_size,n
LITERAL_FLOAT:2.0
+(-(n,window_size),2.0)
::STMT
MATRIX:R,w
FLOAT:int794,int742
INT:parsertemp31673,int163
+(R,diag(*(rand(parsertemp31673,int163,int742,int794),cast.FLOAT(w))))
::STMT
MATRIX:cumLeftHist,parsertemp132494,parsertemp132506,leftHist,outBucket
+(%*%(==(outBucket,t(parsertemp132494)),-(cumLeftHist,leftHist)),parsertemp132506)
::STMT
MATRIX:parsertemp72182
LITERAL_FLOAT:1.0,8.0
+(*(parsertemp72182,8.0),1.0)
::STMT
FLOAT:idx
LITERAL_FLOAT:1048.0
-(1048.0,idx)
::STMT
MATRIX:parsertemp13626,parsertemp13624
FLOAT:int992,43_q,int581
LITERAL_FLOAT:1.0,1000.0
/(sum(/(^(parsertemp13626,int581),/(parsertemp13624,int992))),*(1000.0,-(43_q,1.0)))
::STMT
MATRIX:subspace_idx,parsertemp72201
FLOAT:subvector_size
LITERAL_FLOAT:1.0
<(-(subspace_idx,*(parsertemp72201,subvector_size)),1.0)
::STMT
MATRIX:os,y,o
LITERAL_FLOAT:-1.0
exp(*(*(y,-1.0),+(o,os)))
::STMT
MATRIX:atan_linear_terms
LITERAL_FLOAT:3.141592653589793,0.5
-(0.5,/(atan_linear_terms,3.141592653589793))
::STMT
MATRIX:linear_terms,Y
FLOAT:var_power
LITERAL_FLOAT:-1.0
*(^(linear_terms,*(var_power,-1.0)),-(Y,linear_terms))
::STMT
MATRIX:w,X,y
%*%(t(-(%*%(X,w),y)),-(%*%(X,w),y))
::STMT
MATRIX:H,betamax,Hneg,Hpos,beta
FLOAT:INF,logU
LITERAL_FLOAT:0.0,2.0
*(*(2.0,>=(-(H,logU),0.0)),==(+(*(Hpos,betamax),*(Hneg,beta)),INF))
::STMT
LITERAL_FLOAT:1.0E-4
1.0E-4
::STMT
MATRIX:X,parsertemp16876
FLOAT:epsilon,int288
+(sqrt(rowSums(^(X,int288))),*(<(sqrt(parsertemp16876),epsilon),epsilon))
::STMT
LITERAL_FLOAT:1400.0,20.0
*(1400.0,20.0)
::STMT
MATRIX:lt_pos_neg
LITERAL_FLOAT:0.5
-(0.5,lt_pos_neg)
::STMT
MATRIX:parsertemp389219,tmp,X,parsertemp389212
FLOAT:int464
LITERAL_FLOAT:1.0E-17
/(-(%*%(tmp,X),parsertemp389212),+(sqrt(/(parsertemp389219,int464)),1.0E-17))
::STMT
MATRIX:Y,linear_terms,vec1,is_y_0,parsertemp171270
LITERAL_FLOAT:0.0
-(-(/(+(Y,is_y_0),+(parsertemp171270,is_y_0)),==(Y,0.0)),*(*(Y,vec1),linear_terms))
::STMT
MATRIX:Bx,Yd,Yu
/(-(Yu,Yd),*(Bx,Bx))
::STMT
MATRIX:W
LITERAL_FLOAT:1.0,2.0,3.0
*(*(-(sum(W),2.0),+(sum(W),1.0)),+(sum(round(W)),3.0))
::STMT
MATRIX:cm,FD
FLOAT:n
LITERAL_FLOAT:1.0
+(+(FD,==(cm,1.0)),==(t(cm),n))
::STMT
MATRIX:r,alpha,Hd
*(-(r,*(cast.FLOAT(alpha),Hd)),-(r,*(cast.FLOAT(alpha),Hd)))
::STMT
MATRIX:X
LITERAL_FLOAT:2.0
exp(*(2.0,X))
::STMT
MATRIX:g,parsertemp169907
FLOAT:parsertemp169913
*(sum(*(+(g,parsertemp169907),+(g,parsertemp169907))),parsertemp169913)
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp171113
LITERAL_FLOAT:1.0,-0.36651292058166435
+(-(parsertemp171113,*(-0.36651292058166435,+(is_zero_y_corr,is_one_y_corr))),/(is_one_y_corr,-(1.0,is_one_y_corr)))
::STMT
FLOAT:int112
LITERAL_FLOAT:2.0
INT:int809,parsertemp282730
rand(parsertemp282730,int809,int112,2.0)
::STMT
MATRIX:vI
FLOAT:beg
LITERAL_FLOAT:1.0
-(+(cast.FLOAT(vI),beg),1.0)
::STMT
MATRIX:parsertemp557211
LITERAL_FLOAT:0.0
==(diag(parsertemp557211),0.0)
::STMT
FLOAT:var,m4
LITERAL_FLOAT:3.0,4.0
-(/(m4,^(sqrt(var),4.0)),3.0)
::STMT
MATRIX:lambda,B_new
FLOAT:int37
LITERAL_FLOAT:0.5
*(0.5,sum(*(lambda,^(B_new,int37))))
::STMT
MATRIX:parsertemp413082
LITERAL_FLOAT:1.0
-(max(round(parsertemp413082)),1.0)
::STMT
MATRIX:parsertemp410190,b,parsertemp410188
cast.FLOAT(%*%(%*%(t(b),-(parsertemp410188,parsertemp410190)),b))
::STMT
MATRIX:_sbcvar96,_sbcvar95,221_CMeans
FLOAT:int455
LITERAL_FLOAT:2.0
sum(*(%*%(_sbcvar95,_sbcvar96),^(+(221_CMeans,int455),2.0)))
::STMT
MATRIX:X_Xd_exp_Xb_rev_agg,parsertemp410050,d_r_rev,Hd_2_num,D_r_rev
colSums(*(-(/(X_Xd_exp_Xb_rev_agg,D_r_rev),/(Hd_2_num,parsertemp410050)),d_r_rev))
::STMT
MATRIX:scale_X,w,ssX_p_CG,X
%*%(diag(scale_X),%*%(t(X),*(w,%*%(X,ssX_p_CG))))
::STMT
MATRIX:lambda,parsertemp148883,parsertemp148882
FLOAT:int12
LITERAL_FLOAT:2.0
sum(^(+(%*%(parsertemp148882,parsertemp148883),*(lambda,int12)),2.0))
::STMT
MATRIX:img_in
FLOAT:h
LITERAL_FLOAT:2.0
/(-(nrow(img_in),h),2.0)
::STMT
FLOAT:var_power,link_power
LITERAL_FLOAT:2.0
/(-(2.0,var_power),link_power)
::STMT
FLOAT:dummy_coding_beg_col,dummy_coding_end_col
LITERAL_FLOAT:1.0
+(-(dummy_coding_end_col,dummy_coding_beg_col),1.0)
::STMT
MATRIX:y_batch,parsertemp146892
FLOAT:int243
/(sum(*(-(int243,y_batch),parsertemp146892)),nrow(y_batch))
::STMT
LITERAL_FLOAT:1.421413741
1.421413741
::STMT
MATRIX:P,parsertemp220889,Z,parsertemp220891
FLOAT:int562,int464,int63,parsertemp220894
rowSums(*(-(*(P,int562),/(Z,parsertemp220894)),*(/(int464,parsertemp220891),+(parsertemp220889,int63))))
::STMT
MATRIX:316_unnorm_probs,316_scores
abs(-(/(exp(316_scores),rowSums(316_unnorm_probs)),/(exp(316_scores),rowSums(316_unnorm_probs))))
::STMT
MATRIX:ss
LITERAL_FLOAT:1.0,40.0
-(/(40.0,ss),1.0)
::STMT
FLOAT:idx
LITERAL_FLOAT:1024.0
-(1024.0,idx)
::STMT
FLOAT:current_hash_value
LITERAL_FLOAT:1.0,3.0
-(3.0,+(current_hash_value,1.0))
::STMT
MATRIX:tmp
FLOAT:int239,N
LITERAL_FLOAT:0.0,1.0
-(1.0,<=(/(tmp,-(N,int239)),0.0))
::STMT
MATRIX:r,d,parsertemp43999
LITERAL_FLOAT:2.0
/(sum(^(r,2.0)),cast.FLOAT(%*%(t(d),+(d,parsertemp43999))))
::STMT
MATRIX:parsertemp387501
LITERAL_FLOAT:1.0
cast.FLOAT(+(parsertemp387501,1.0))
::STMT
FLOAT:cvk
LITERAL_FLOAT:300.0
/(300.0,cvk)
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:105.0,1.0
+(rowSums(classFeatureCounts),*(105.0,1.0))
::STMT
MATRIX:w_X,z_LS
LITERAL_FLOAT:1000.0
*(/(1000.0,cast.FLOAT(%*%(w_X,z_LS))),z_LS)
::STMT
MATRIX:addedE,addedX
/(sum(addedE),nrow(addedX))
::STMT
MATRIX:X_Train,X_Test,X,Y,Y_Train,Y_Test
-(-(+(sum(X),sum(Y)),+(sum(X_Train),sum(X_Test))),+(sum(Y_Train),sum(Y_Test)))
::STMT
MATRIX:resp
LITERAL_FLOAT:2.22E-16
+(colSums(resp),2.22E-16)
::STMT
MATRIX:X_train
LITERAL_FLOAT:2.0
sqrt(/(2.0,ncol(X_train)))
::STMT
FLOAT:b,c,rad
LITERAL_FLOAT:-1.0,2.0
/(*(*(2.0,c),-1.0),+(b,rad))
::STMT
LITERAL_FLOAT:0.802853
0.802853
::STMT
MATRIX:parsertemp394992,parsertemp394989,W3_rand
LITERAL_FLOAT:0.21483446221182986
t(%*%(*(0.21483446221182986,W3_rand),t(/(parsertemp394989,parsertemp394992))))
::STMT
MATRIX:Y
FLOAT:check_max,check_min
LITERAL_FLOAT:2.0
-(*(/(2.0,-(check_max,check_min)),Y),/(+(check_min,check_max),-(check_max,check_min)))
::STMT
MATRIX:2434_2432_Y,W4_rand
FLOAT:float108
LITERAL_FLOAT:2.0
*(2.0,t(%*%(*(float108,W4_rand),t(2434_2432_Y))))
::STMT
MATRIX:inactive_set,w
LITERAL_FLOAT:0.0
abs(-(inactive_set,!=(w,0.0)))
::STMT
MATRIX:p,e,u,G
FLOAT:alpha
LITERAL_FLOAT:1.0
+(*(alpha,%*%(G,p)),*(-(1.0,alpha),%*%(%*%(e,u),p)))
::STMT
LITERAL_FLOAT:80.0,1200.0
*(1200.0,80.0)
::STMT
FLOAT:n
LITERAL_FLOAT:1.0,2.0,4.0
-(+(-(n,4.0),1.0),2.0)
::STMT
MATRIX:parsertemp443564,parsertemp443530,parsertemp443567,mean,parsertemp443973,X
FLOAT:float834
+(/(-(%*%(parsertemp443564,X),%*%(parsertemp443567,mean)),sum(+(parsertemp443530,float834))),diag(parsertemp443973))
::STMT
MATRIX:2701_mask
LITERAL_FLOAT:0.5
/(2701_mask,0.5)
::STMT
MATRIX:X,mask
FLOAT:p
/(*(X,mask),p)
::STMT
MATRIX:X,parsertemp382984
LITERAL_FLOAT:0.0
-(ncol(X),sum(!=(t(parsertemp382984),0.0)))
::STMT
MATRIX:parsertemp2782,parsertemp2786
FLOAT:dd,parsertemp2779,step_sz,wd
-(step_sz,/(-(+(wd,parsertemp2779),sum(parsertemp2782)),+(dd,sum(parsertemp2786))))
::STMT
MATRIX:parsertemp410245,parsertemp410247
LITERAL_FLOAT:0.0,2.0,0.6666666666666666
^(/(-(0.0,parsertemp410245),*(2.0,exp(parsertemp410247))),0.6666666666666666)
::STMT
FLOAT:factor_up,parsertemp195892,int529
LITERAL_FLOAT:1.0,2.0
/(-(-(*(int529,factor_up),parsertemp195892),1.0),2.0)
::STMT
MATRIX:p,q,V,parsertemp1939
FLOAT:norm_r2
LITERAL_FLOAT:1.0E-8
*(/(norm_r2,cast.FLOAT(%*%(parsertemp1939,q))),+(%*%(t(V),%*%(V,p)),*(1.0E-8,p)))
::STMT
MATRIX:upd_W1
LITERAL_FLOAT:0.8
*(0.8,upd_W1)
::STMT
MATRIX:X
FLOAT:x
/(-(x,X),-(X,X))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,50.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(50.0,1.0)))
::STMT
FLOAT:C,Hf,Wf
LITERAL_FLOAT:2.0
sqrt(/(2.0,*(*(C,Hf),Wf)))
::STMT
MATRIX:R
FLOAT:int548
LITERAL_FLOAT:0.0
sum(==(colSums(!=(R,int548)),0.0))
::STMT
MATRIX:parsertemp539203
LITERAL_FLOAT:-1.0,1.0,2.0,1.5
^(/(*(parsertemp539203,-1.0),2.0),/(1.0,1.5))
::STMT
MATRIX:X,Y,K
FLOAT:x,int118
*(+(*(*(K,int118),-(X,X)),-(Y,Y)),/(-(x,X),-(X,X)))
::STMT
MATRIX:cdf_min_distances
LITERAL_FLOAT:0.0,1.0
INT:int159,num_runs
*(rand(int159,num_runs,0.0,1.0),cdf_min_distances)
::STMT
FLOAT:m2X,m2Y
LITERAL_FLOAT:1.000010000100001
*(sqrt(*(m2X,1.000010000100001)),sqrt(*(m2Y,1.000010000100001)))
::STMT
MATRIX:Y,linear_terms
LITERAL_FLOAT:-1.0
*(rowSums(Y),exp(*(exp(linear_terms),-1.0)))
::STMT
FLOAT:cmLabels
LITERAL_FLOAT:1.000100010001
*(cmLabels,1.000100010001)
::STMT
MATRIX:sv,out
LITERAL_FLOAT:0.5
*(0.5,sum(*(*(sv,out),*(sv,out))))
::STMT
MATRIX:y
LITERAL_FLOAT:1.0,-1.0
*(/(1.0,nrow(y)),*(y,-1.0))
::STMT
MATRIX:current_node
FLOAT:cur_node_index
+(cur_node_index,cast.FLOAT(current_node))
::STMT
MATRIX:Kss,parsertemp387410
sqrt(abs(-(cast.FLOAT(Kss),cast.FLOAT(parsertemp387410))))
::STMT
MATRIX:resp
LITERAL_FLOAT:2.22E-16
sum(+(colSums(resp),2.22E-16))
::STMT
MATRIX:xs
LITERAL_FLOAT:100.0,4.5
-(100.0,sum(>=(xs,4.5)))
::STMT
MATRIX:parsertemp410978,W,H
rowSums(/(*(H,t(parsertemp410978)),t(colSums(W))))
::STMT
MATRIX:z,beta
+(beta,cast.FLOAT(z))
::STMT
MATRIX:X
FLOAT:int902
t(sqrt(rowSums(^(X,int902))))
::STMT
MATRIX:R
FLOAT:minSup
LITERAL_FLOAT:0.0
&(>=(R,minSup),>(R,0.0))
::STMT
MATRIX:parsertemp12898,CFreqs
FLOAT:int517
LITERAL_FLOAT:1.0
/(sum(*(CFreqs,^(parsertemp12898,int517))),-(nrow(CFreqs),1.0))
::STMT
FLOAT:float605,int893,float444,int152
LITERAL_FLOAT:1.0,3.0,6.0,2001.0
/(*(*(6.0,2001.0),-(2001.0,1.0)),*(*(-(int893,float444),+(int152,float605)),+(2001.0,3.0)))
::STMT
MATRIX:parsertemp150380
LITERAL_FLOAT:0.0,0.16
sum(==(<(abs(parsertemp150380),0.16),0.0))
::STMT
MATRIX:237_CVars,parsertemp29525,237_CFreqs,parsertemp29520
LITERAL_FLOAT:1.0,10000.0
/(/(sum(*(237_CFreqs,parsertemp29520)),-(nrow(237_CFreqs),1.0)),/(sum(*(parsertemp29525,237_CVars)),-(10000.0,nrow(237_CFreqs))))
::STMT
LITERAL_FLOAT:96.0
INT:int523,int607
rand(int523,int607,96.0,96.0)
::STMT
MATRIX:colDuplicates,adjacency
LITERAL_FLOAT:0.0
*(colDuplicates,>(rowSums(adjacency),0.0))
::STMT
MATRIX:cdf_min_distances,random_row
t(colSums(<(cdf_min_distances,*(random_row,cdf_min_distances))))
::STMT
MATRIX:s,d,alpha
t(+(s,*(cast.FLOAT(alpha),d)))
::STMT
MATRIX:parsertemp472298,I
LITERAL_FLOAT:0.0
==(!=(*(t(parsertemp472298),I),0.0),0.0)
::STMT
MATRIX:parsertemp171318
FLOAT:int591
LITERAL_FLOAT:2.0,0.15915494309189535
*(exp(/(-(int591,parsertemp171318),2.0)),0.15915494309189535)
::STMT
FLOAT:m2X
LITERAL_FLOAT:1.0005
*(m2X,1.0005)
::STMT
MATRIX:H,betamax,beta
FLOAT:logU
LITERAL_FLOAT:0.0
+(*(>=(-(H,logU),0.0),betamax),*(<(-(H,logU),0.0),beta))
::STMT
MATRIX:key_unique,key
==(key_unique,t(key))
::STMT
MATRIX:e_r_rev_agg,parsertemp409787,parsertemp409796
LITERAL_FLOAT:0.0
+(-(0.0,t(colSums(parsertemp409787))),t(colSums(/(parsertemp409796,e_r_rev_agg))))
::STMT
MATRIX:parsertemp132498,offset,parsertemp132494,rightHist,mask,outBucket
LITERAL_FLOAT:1.0
/(-(-(offset,%*%(mask,parsertemp132498)),1.0),%*%(==(outBucket,t(parsertemp132494)),rightHist))
::STMT
MATRIX:r,parsertemp44050
FLOAT:norm_r2
LITERAL_FLOAT:2.0
/(sum(^(-(r,parsertemp44050),2.0)),norm_r2)
::STMT
MATRIX:y_prob,ones_ctg
LITERAL_FLOAT:1.0
*(y_prob,%*%(y_prob,-(1.0,diag(ones_ctg))))
::STMT
MATRIX:tmp
LITERAL_FLOAT:1.0
*(1.0,cast.FLOAT(%*%(t(tmp),tmp)))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0,2.0
-(exp(*(2.0,X)),1.0)
::STMT
MATRIX:X
FLOAT:x
LITERAL_FLOAT:1.0
-(1.0,/(-(x,X),-(X,X)))
::STMT
MATRIX:p,A,r,parsertemp51660
FLOAT:norm_r2
+(r,*(/(norm_r2,sum(parsertemp51660)),%*%(t(A),%*%(A,p))))
::STMT
MATRIX:dout1,mb1
FLOAT:192_beta1
LITERAL_FLOAT:1.0
+(*(192_beta1,mb1),*(-(1.0,192_beta1),colSums(dout1)))
::STMT
FLOAT:parsertemp31330
LITERAL_FLOAT:9999.0,10000.0
/(*(parsertemp31330,10000.0),9999.0)
::STMT
MATRIX:X
LITERAL_FLOAT:0.0,2.0
^(-(0.0,sum(X)),2.0)
::STMT
MATRIX:w
sum(abs(w))
::STMT
MATRIX:ytest,yhat
LITERAL_FLOAT:1.0
/(-(cast.FLOAT(ytest),cast.FLOAT(yhat)),1.0)
::STMT
LITERAL_FLOAT:1.00001
1.00001
::STMT
MATRIX:ss,se,e
LITERAL_FLOAT:1.0,20.0
-(/(/(se,ss),/(sum(e),20.0)),1.0)
::STMT
FLOAT:parsertemp65,parsertemp66,mu
LITERAL_FLOAT:5.0
+(mu,*(5.0,sqrt(/(parsertemp65,parsertemp66))))
::STMT
MATRIX:BLOCKS
FLOAT:current_hash_value
LITERAL_FLOAT:1.0
-(nrow(BLOCKS),+(current_hash_value,1.0))
::STMT
MATRIX:parsertemp170158,parsertemp170136
FLOAT:r_CG,g_reg,parsertemp170165,278_sq_root_d,z,parsertemp170150
LITERAL_FLOAT:0.5
+(*(0.5,*(cast.FLOAT(z),+(r_CG,g_reg))),*(+(+(parsertemp170165,z),sum(parsertemp170158)),/(+(parsertemp170150,278_sq_root_d),sum(parsertemp170136))))
::STMT
MATRIX:W,parsertemp411198,X,H,parsertemp411200
LITERAL_FLOAT:1.0E-8
%*%(/(X,+(%*%(W,H),1.0E-8)),t(/(*(H,parsertemp411198),t(parsertemp411200))))
::STMT
FLOAT:num_records
LITERAL_FLOAT:1.0,960.0
-(1.0,/(960.0,num_records))
::STMT
MATRIX:H2_prime,H3_prime,W2,W3,parsertemp389610
%*%(*(H2_prime,%*%(*(H3_prime,parsertemp389610),W3)),W2)
::STMT
MATRIX:R,dssp
FLOAT:4_n
LITERAL_FLOAT:1.0
-(/(4_n,+(R,dssp)),1.0)
::STMT
FLOAT:neg_log_l_change_predicted,log_l_change
LITERAL_FLOAT:-1.0
/(*(log_l_change,-1.0),neg_log_l_change_predicted)
::STMT
MATRIX:tmp_c
FLOAT:i
LITERAL_FLOAT:1.0,12.0
+(tmp_c,*(-(i,1.0),12.0))
::STMT
LITERAL_FLOAT:300.0,1.0
+(300.0,1.0)
::STMT
MATRIX:s,sts,d,parsertemp44023
FLOAT:delta2
LITERAL_FLOAT:2.0
+(^(%*%(t(s),d),2.0),*(cast.FLOAT(%*%(parsertemp44023,d)),-(delta2,cast.FLOAT(sts))))
::STMT
MATRIX:U,V,X,parsertemp382841,row_nonzeros
FLOAT:reg,int524
+(%*%(*(!=(X,int524),-(parsertemp382841,X)),V),*(*(reg,U),row_nonzeros))
::STMT
MATRIX:C,Xm,parsertemp265702
%*%(colSums(%*%(%*%(Xm,parsertemp265702),t(C))),rowSums(t(Xm)))
::STMT
MATRIX:Y
FLOAT:parsertemp185166
-(cast.MATRIX(max(Y)),parsertemp185166)
::STMT
MATRIX:V,y
LITERAL_FLOAT:-1.0
*(*(%*%(t(V),y),-1.0),-1.0)
::STMT
MATRIX:n_event_stratum,n_risk_stratum,n_risk
LITERAL_FLOAT:2.0
*(*(^(n_risk_stratum,2.0),*(n_risk,n_event_stratum)),-(n_risk_stratum,n_event_stratum))
::STMT
MATRIX:A,scale_lambda,scale_X,shift_X,parsertemp115882
LITERAL_FLOAT:0.001
+(+(%*%(diag(scale_X),t(parsertemp115882)),%*%(shift_X,A)),diag(*(scale_lambda,0.001)))
::STMT
MATRIX:parsertemp286680,lambda,scale_X,gXY,beta
cast.FLOAT(%*%(t(+(scale_X,parsertemp286680)),+(*(scale_X,gXY),*(lambda,beta))))
::STMT
MATRIX:parsertemp443534,resp,parsertemp443566,parsertemp443533,X,weight
LITERAL_FLOAT:2.22E-16
/(-(%*%(t(X),X),%*%(*(parsertemp443566,weight),/(parsertemp443533,parsertemp443534))),sum(+(colSums(resp),2.22E-16)))
::STMT
MATRIX:_funvar2124,parsertemp437267,parsertemp437277,parsertemp437272
-(+(_funvar2124,parsertemp437267),+(parsertemp437272,parsertemp437277))
::STMT
LITERAL_FLOAT:0.19999999999999996
0.19999999999999996
::STMT
MATRIX:m_err
/(colSums(m_err),sum(colSums(m_err)))
::STMT
FLOAT:check_max,check_min
/(+(check_min,check_max),-(check_max,check_min))
::STMT
MATRIX:p_CG,z
*(*(cast.FLOAT(z),sum(p_CG)),*(cast.FLOAT(z),sum(p_CG)))
::STMT
LITERAL_FLOAT:100.0,0.8
*(100.0,0.8)
::STMT
MATRIX:s,w
cast.FLOAT(%*%(t(+(w,s)),+(w,s)))
::STMT
FLOAT:int443,int775,weight,prob_true,prob_false
LITERAL_FLOAT:1.0
*(weight,-(1.0,+(^(prob_true,int443),^(prob_false,int775))))
::STMT
MATRIX:prec_chol,X
LITERAL_FLOAT:2.0
%*%(rowSums(*(X,X)),t(^(prec_chol,2.0)))
::STMT
MATRIX:tmp,leftIdx
%*%(tmp,%*%(t(tmp),leftIdx))
::STMT
LITERAL_FLOAT:0.2
0.2
::STMT
MATRIX:w,X,y
LITERAL_FLOAT:-1.0
*(*(y,-1.0),%*%(X,w))
::STMT
MATRIX:parsertemp220844,ZERODIAG,beta
rowSums(*(exp(*(parsertemp220844,beta)),ZERODIAG))
::STMT
MATRIX:scale_X,w,ssX_p_CG,X
*(scale_X,%*%(t(X),*(w,%*%(X,ssX_p_CG))))
::STMT
MATRIX:newbeta,lambda
FLOAT:int214
LITERAL_FLOAT:0.5
*(0.5,cast.FLOAT(%*%(t(lambda),^(newbeta,int214))))
::STMT
MATRIX:79_77_X_row_norm,Y_block,parsertemp17170,79_77_Y_row_norm,X_block
LITERAL_FLOAT:0.9
>(/(%*%(X_block,t(Y_block)),%*%(+(79_77_X_row_norm,parsertemp17170),t(79_77_Y_row_norm))),0.9)
::STMT
LITERAL_FLOAT:0.0
INT:int576,int409
cast.FLOAT(rand(int409,int576,0.0,0.0))
::STMT
MATRIX:var_X_cols,parsertemp1517,parsertemp1515
FLOAT:int932,int191,int490,n
LITERAL_FLOAT:0.0,1.0
+(*(/(-(parsertemp1515,parsertemp1517),-(n,int932)),-(1.0,<=(var_X_cols,int191))),<=(/(-(parsertemp1515,parsertemp1517),-(n,int490)),0.0))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
*(^(exp(linear_terms),0.0),exp(linear_terms))
::STMT
MATRIX:parsertemp42200,parsertemp42201,_sbcvar330
FLOAT:meanX
LITERAL_FLOAT:1.0,0.5
*(/(_sbcvar330,-(sum(_sbcvar330),1.0)),-(+(-(parsertemp42200,parsertemp42201),0.5),meanX))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
*(exp(*(linear_terms,-1.0)),-1.0)
::STMT
MATRIX:parsertemp552345,tab,catTotal
LITERAL_FLOAT:-1.0
*(*(/(tab,catTotal),-1.0),parsertemp552345)
::STMT
MATRIX:m_active_flag_tmp,m_active_flag
LITERAL_FLOAT:1.0
-(>=(+(m_active_flag,m_active_flag_tmp),1.0),1.0)
::STMT
FLOAT:n_false,n_true,n_vars
/(+(n_true,n_false),n_vars)
::STMT
MATRIX:G,minDist
LITERAL_FLOAT:0.0
*(!=(G,0.0),minDist)
::STMT
LITERAL_FLOAT:0.05
0.05
::STMT
LITERAL_FLOAT:-0.05
-0.05
::STMT
MATRIX:id
diag(==(id,cast.FLOAT(id)))
::STMT
MATRIX:grad
LITERAL_FLOAT:2.0
sqrt(sum(^(grad,2.0)))
::STMT
MATRIX:select,d_r_rev,X_exp_Xb_rev_agg,D_r_rev
colSums(*(/(%*%(select,X_exp_Xb_rev_agg),D_r_rev),d_r_rev))
::STMT
MATRIX:parsertemp43993,d,X,Hd,parsertemp44001
*(cast.FLOAT(/(sum(parsertemp43993),%*%(parsertemp44001,Hd))),%*%(X,d))
::STMT
MATRIX:parsertemp10964,C
LITERAL_FLOAT:100.0
*(/(sum(==(parsertemp10964,C)),100.0),100.0)
::STMT
MATRIX:parsertemp31024,parsertemp31022
FLOAT:int113
LITERAL_FLOAT:2.0,99.0
^(/(-(colSums(parsertemp31022),*(int113,parsertemp31024)),99.0),2.0)
::STMT
MATRIX:r,parsertemp44050
LITERAL_FLOAT:2.0
sqrt(sum(^(-(r,parsertemp44050),2.0)))
::STMT
MATRIX:Y_counts,Y
%*%(Y_counts,/(colSums(Y),sum(Y_counts)))
::STMT
MATRIX:prec_chol,mu
LITERAL_FLOAT:2.0
*(mu,^(prec_chol,2.0))
::STMT
LITERAL_FLOAT:0.4
0.4
::STMT
MATRIX:classFeatureCounts
rowSums(classFeatureCounts)
::STMT
MATRIX:parsertemp116065,p,r,lambda,shift_X,parsertemp116069
FLOAT:norm_r2
+(r,*(/(norm_r2,sum(parsertemp116069)),+(+(parsertemp116065,shift_X),*(lambda,p))))
::STMT
MATRIX:TKC
cast.FLOAT(/(TKC,TKC))
::STMT
MATRIX:p_LS,X
%*%(%*%(t(X),X),p_LS)
::STMT
FLOAT:m2,wt,float608
LITERAL_FLOAT:3.0
^(sqrt(/(*(m2,wt),-(wt,float608))),3.0)
::STMT
MATRIX:p_LS,tmp
FLOAT:norm_r2_LS
/(norm_r2_LS,cast.FLOAT(%*%(t(p_LS),tmp)))
::STMT
LITERAL_FLOAT:0.6546536707079771
0.6546536707079771
::STMT
FLOAT:parsertemp149336,obj,parsertemp149333,float101,qk,parsertemp149340
/(-(obj,+(+(parsertemp149333,parsertemp149336),*(float101,parsertemp149340))),qk)
::STMT
MATRIX:d_r_rev,X_exp_Xb_rev_agg,D_r_rev
t(colSums(*(/(X_exp_Xb_rev_agg,D_r_rev),d_r_rev)))
::STMT
FLOAT:log_l,new_log_l
+(abs(log_l),abs(new_log_l))
::STMT
MATRIX:d,parsertemp410053
cast.FLOAT(%*%(t(d),t(colSums(parsertemp410053))))
::STMT
MATRIX:Y_counts,means,parsertemp560511
sum(*(Y_counts,rowSums(*(means,parsertemp560511))))
::STMT
MATRIX:Y,Xd,Xw
FLOAT:step_sz
*(Y,+(Xw,*(step_sz,Xd)))
::STMT
MATRIX:2697_b,parsertemp459149,2697_W,outd3
-(+(%*%(outd3,2697_W),2697_b),parsertemp459149)
::STMT
MATRIX:B,X_t
LITERAL_FLOAT:2.0
*(2.0,exp(%*%(X_t,B)))
::STMT
MATRIX:D,beta
LITERAL_FLOAT:0.0
exp(*(-(0.0,D),beta))
::STMT
MATRIX:r,s,grad
LITERAL_FLOAT:-0.5
*(-0.5,-(%*%(t(s),grad),%*%(t(s),r)))
::STMT
MATRIX:p,lambda,parsertemp1590,parsertemp1589
sum(*(p,+(%*%(parsertemp1589,parsertemp1590),*(lambda,p))))
::STMT
LITERAL_FLOAT:0.050000000000000044
0.050000000000000044
::STMT
FLOAT:m2,float774,wt
LITERAL_FLOAT:4.0
^(sqrt(/(*(m2,wt),-(wt,float774))),4.0)
::STMT
MATRIX:d,parsertemp43996,parsertemp43997
FLOAT:C
%*%(t(d),+(d,*(C,%*%(parsertemp43996,parsertemp43997))))
::STMT
LITERAL_FLOAT:750.0
*(750.0,750.0)
::STMT
MATRIX:X_Xd_exp_Xb_rev_agg,select,d_r_rev,X_exp_Xb_rev_agg,D_r_rev,Xd_exp_Xb_rev_agg
FLOAT:int929
*(-(/(%*%(select,X_Xd_exp_Xb_rev_agg),D_r_rev),/(*(X_exp_Xb_rev_agg,Xd_exp_Xb_rev_agg),^(D_r_rev,int929))),d_r_rev)
::STMT
MATRIX:dout1
LITERAL_FLOAT:2.0
^(colSums(dout1),2.0)
::STMT
MATRIX:X
FLOAT:int174
max(sqrt(rowSums(^(X,int174))))
::STMT
MATRIX:p_LS,parsertemp170552
FLOAT:lambda_LS
*(cast.FLOAT(p_LS),+(*(cast.FLOAT(parsertemp170552),cast.FLOAT(p_LS)),*(lambda_LS,cast.FLOAT(p_LS))))
::STMT
LITERAL_FLOAT:2.0,0.5,-0.5
INT:int818,int737
sum(^(rand(int737,int818,-0.5,0.5),2.0))
::STMT
FLOAT:nFeats
LITERAL_FLOAT:3.141592653589793,2.0
^(*(2.0,3.141592653589793),nFeats)
::STMT
MATRIX:2701_mask,2700_W,parsertemp459178,2699_dtemp,2703_X,2702_X
FLOAT:float56,int493
%*%(t(2703_X),*(*(>(2702_X,int493),/(2701_mask,float56)),%*%(-(2699_dtemp,parsertemp459178),t(2700_W))))
::STMT
FLOAT:i
LITERAL_FLOAT:1.0,64.0
-(+(i,64.0),1.0)
::STMT
LITERAL_FLOAT:0.8
0.8
::STMT
MATRIX:rowSums_X_sq
LITERAL_FLOAT:6.144102863722254
/(6.144102863722254,max(sqrt(rowSums_X_sq)))
::STMT
MATRIX:parsertemp44025,s,d
FLOAT:delta2
+(*(%*%(t(s),d),%*%(t(s),d)),*(%*%(t(d),d),-(delta2,%*%(parsertemp44025,s))))
::STMT
FLOAT:sample_block_size,num_samples
LITERAL_FLOAT:1.0
+(*(sample_block_size,num_samples),1.0)
::STMT
MATRIX:b4,W4,parsertemp389337
LITERAL_FLOAT:2.0
*(2.0,t(+(%*%(W4,parsertemp389337),b4)))
::STMT
MATRIX:g_Y,scale_X,X
LITERAL_FLOAT:0.0
*(scale_X,-(0.0,%*%(t(X),g_Y)))
::STMT
MATRIX:features,beta_unscaled
FLOAT:intercept
LITERAL_FLOAT:3.0
*(3.0,+(%*%(features,beta_unscaled),intercept))
::STMT
MATRIX:R
LITERAL_FLOAT:0.0,4.0
&(>(R,0.0),>=(R,4.0))
::STMT
MATRIX:tmp,X,parsertemp389212
-(%*%(tmp,X),parsertemp389212)
::STMT
LITERAL_FLOAT:0.16
0.16
::STMT
MATRIX:vectors,pq_result
LITERAL_FLOAT:2.0
colSums(rowSums(^(-(vectors,pq_result),2.0)))
::STMT
MATRIX:parsertemp285516
FLOAT:pp,parsertemp285518,parsertemp285520
LITERAL_FLOAT:-1.0
/(-(*(sum(parsertemp285516),-1.0),sqrt(-(parsertemp285518,parsertemp285520))),pp)
::STMT
MATRIX:221_present_domain_vals_mat,parsertemp27770
t(sqrt(%*%(221_present_domain_vals_mat,parsertemp27770)))
::STMT
MATRIX:WM,Y
/(sum(*(Y,WM)),sum(WM))
::STMT
MATRIX:X_nonzero_ind
LITERAL_FLOAT:0.0,6.0
-(6.0,sum(!=(rowSums(X_nonzero_ind),0.0)))
::STMT
MATRIX:m_active_flag_tmp
LITERAL_FLOAT:1.0
sum(!=(m_active_flag_tmp,1.0))
::STMT
MATRIX:d,parsertemp410052,d_r_rev
%*%(t(d),t(colSums(*(parsertemp410052,d_r_rev))))
::STMT
MATRIX:p,q
FLOAT:norm_r2
/(norm_r2,sum(*(p,+(q,q))))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
-(0.0,t(colSums(X)))
::STMT
MATRIX:Xtest_dists
LITERAL_FLOAT:0.0,1.0
*(<=(Xtest_dists,1.0),<(0.0,Xtest_dists))
::STMT
MATRIX:parsertemp393595,tmp,X,parsertemp393475,parsertemp393466
LITERAL_FLOAT:1.0,1.0E-17
-(/(-(exp(parsertemp393595),1.0),+(exp(parsertemp393595),1.0)),/(-(%*%(tmp,X),parsertemp393466),+(sqrt(parsertemp393475),1.0E-17)))
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005002501250626,5.0
*(5.0,sqrt(*(1.0005002501250626,m2)))
::STMT
MATRIX:parsertemp31104,parsertemp31106
FLOAT:int713
LITERAL_FLOAT:1.0,2000.0
/(/(-(colSums(parsertemp31104),*(int713,parsertemp31106)),-(2000.0,1.0)),2000.0)
::STMT
FLOAT:K
LITERAL_FLOAT:301.0
*(301.0,K)
::STMT
MATRIX:lambda,g,parsertemp285556,beta
cast.FLOAT(%*%(t(+(g,parsertemp285556)),+(g,*(lambda,beta))))
::STMT
MATRIX:distT
LITERAL_FLOAT:0.0
sum(!=(distT,0.0))
::STMT
MATRIX:parsertemp137844
rev(t(parsertemp137844))
::STMT
MATRIX:d_r
t(rev(d_r))
::STMT
FLOAT:B,R,s
LITERAL_FLOAT:1.0
/(/(B,R),+(s,1.0))
::STMT
LITERAL_FLOAT:2.0,150.0
^(150.0,2.0)
::STMT
MATRIX:n_risk_stratum,n_risk_i2j,V1
FLOAT:I_i1i2
sum(*(V1,-(I_i1i2,/(n_risk_i2j,n_risk_stratum))))
::STMT
FLOAT:float246,d_eee,x
LITERAL_FLOAT:2.302585092994046
*(x,exp(*(2.302585092994046,-(float246,d_eee))))
::STMT
MATRIX:flip_neg,is_LT_infinite,Y_prob,Y,parsertemp171293
*(Y,%*%(+(*(Y_prob,parsertemp171293),is_LT_infinite),flip_neg))
::STMT
MATRIX:classFeatureCounts
LITERAL_FLOAT:1.0,500.0
/(+(classFeatureCounts,1.0),+(rowSums(classFeatureCounts),*(500.0,1.0)))
::STMT
MATRIX:g_Y,parsertemp171599,scale_X,shift_X,gXY
FLOAT:int545
+(%*%(diag(scale_X),%*%(*(parsertemp171599,int545),g_Y)),%*%(shift_X,gXY))
::STMT
MATRIX:cdf_min_distances,random_row
<(cdf_min_distances,*(random_row,cdf_min_distances))
::STMT
MATRIX:parsertemp1532,y
LITERAL_FLOAT:2.0,9.999999999999998E-15
*(sum(^(%*%(parsertemp1532,y),2.0)),9.999999999999998E-15)
::STMT
MATRIX:clusterMembers,adjacency
LITERAL_FLOAT:0.0
>(*(clusterMembers,>(rowSums(adjacency),0.0)),0.0)
::STMT
MATRIX:ts
FLOAT:q
-(q,*(cast.FLOAT(ts),cast.FLOAT(ts)))
::STMT
FLOAT:max_features,n
/(^(n,max_features),n)
::STMT
LITERAL_FLOAT:1.000010000100001
1.000010000100001
::STMT
LITERAL_FLOAT:0.02
0.02
::STMT
FLOAT:i
LITERAL_FLOAT:100.0
*(*(i,100.0),100.0)
::STMT
MATRIX:parsertemp410118,g0_1
LITERAL_FLOAT:2.0
sum(^(+(g0_1,t(parsertemp410118)),2.0))
::STMT
MATRIX:d,dtd,parsertemp44021
FLOAT:sts,delta2
LITERAL_FLOAT:2.0
sqrt(+(^(%*%(parsertemp44021,d),2.0),*(cast.FLOAT(dtd),-(delta2,sts))))
::STMT
LITERAL_FLOAT:64.0
INT:int753,int690
rand(int690,int753,64.0,64.0)
::STMT
MATRIX:287_x,287_y,one_featureX
LITERAL_FLOAT:2.0
<(one_featureX,/(+(cast.FLOAT(287_x),cast.FLOAT(287_y)),2.0))
::STMT
MATRIX:Ileft
FLOAT:min_leaf
>=(rowSums(Ileft),min_leaf)
::STMT
MATRIX:parsertemp472315,parsertemp472326
FLOAT:beg
+(-(nrow(parsertemp472315),cast.FLOAT(parsertemp472326)),beg)
::STMT
MATRIX:parsertemp402078,W3_rand
FLOAT:int259,int106
LITERAL_FLOAT:0.1092173494617922
%*%(*(0.1092173494617922,W3_rand),t(/(-(parsertemp402078,int106),+(parsertemp402078,int259))))
::STMT
MATRIX:X
LITERAL_FLOAT:-1.0
*(t(X),-1.0)
::STMT
LITERAL_FLOAT:0.10940797384659613
0.10940797384659613
::STMT
FLOAT:m2
LITERAL_FLOAT:1.0005
*(1.0005,m2)
::STMT
MATRIX:_sbcvar11
LITERAL_FLOAT:1000.0
-(_sbcvar11,/(%*%(rowSums(_sbcvar11),colSums(_sbcvar11)),1000.0))
::STMT
LITERAL_FLOAT:200.0,1.0
+(200.0,1.0)
::STMT
FLOAT:i2,n
LITERAL_FLOAT:24.0
-(n,*(24.0,i2))
::STMT
MATRIX:mb1,parsertemp146957,188_dX
FLOAT:beta1
LITERAL_FLOAT:1.0
+(*(beta1,mb1),*(-(1.0,beta1),colSums(*(parsertemp146957,188_dX))))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
^(exp(linear_terms),1.0)
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:-1.0
^(exp(linear_terms),-1.0)
::STMT
MATRIX:tmp,Y
1-*(Y,tmp)
::STMT
MATRIX:p_CG
FLOAT:trust_delta_sq,int444,z,pp_CG
-(*(*(cast.FLOAT(z),sum(p_CG)),*(cast.FLOAT(z),sum(p_CG))),*(pp_CG,-(^(z,int444),trust_delta_sq)))
::STMT
MATRIX:linear_terms
FLOAT:var_power
LITERAL_FLOAT:-1.0
^(linear_terms,*(var_power,-1.0))
::STMT
MATRIX:y_hat,X_adapted
FLOAT:parsertemp176421,k,parsertemp176418
|(<(X_adapted,-(sqrt(parsertemp176421),*(k,y_hat))),>(X_adapted,+(sqrt(parsertemp176418),*(k,y_hat))))
::STMT
MATRIX:X_adapted,yhat
FLOAT:int587,int291,parsertemp176418
|(<(X_adapted,-(sqrt(parsertemp176418),*(int587,yhat))),>(X_adapted,+(sqrt(parsertemp176418),*(int291,yhat))))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:0.0
^(exp(linear_terms),0.0)
::STMT
MATRIX:parsertemp413082
LITERAL_FLOAT:1.0,21.0
*(21.0,-(max(round(parsertemp413082)),1.0))
::STMT
MATRIX:y_train,prediction
LITERAL_FLOAT:0.5
sum(==(y_train,>(prediction,0.5)))
::STMT
MATRIX:r,d,parsertemp43998
FLOAT:C
/(sum(*(r,r)),%*%(t(d),+(d,*(C,parsertemp43998))))
::STMT
MATRIX:parsertemp31029,parsertemp31031
FLOAT:int586
LITERAL_FLOAT:149.0,2.0
^(/(-(colSums(parsertemp31029),*(int586,parsertemp31031)),149.0),2.0)
::STMT
MATRIX:_sbcvar264,_sbcvar262
FLOAT:int495,int563,parsertemp31330
LITERAL_FLOAT:9999.0
/(sum(*(-(_sbcvar262,int495),_sbcvar264)),*(9999.0,/(*(parsertemp31330,int563),9999.0)))
::STMT
MATRIX:p,r
FLOAT:norm_r2,int58
*(/(sum(^(r,int58)),norm_r2),p)
::STMT
MATRIX:A,CVars,CFreqs
FLOAT:W,int623,parsertemp12882,float120
LITERAL_FLOAT:1.0
/(sum(*(-(CFreqs,int623),CVars)),*(-(nrow(A),1.0),/(*(parsertemp12882,W),-(W,float120))))
::STMT
MATRIX:X
LITERAL_FLOAT:1.0
-(nrow(X),1.0)
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp171100,parsertemp171086,parsertemp171097
FLOAT:float279,float397
LITERAL_FLOAT:1.0
-(+(*(+(parsertemp171086,parsertemp171097),-(float279,parsertemp171100)),/(is_one_y_corr,-(float397,is_one_y_corr))),/(is_zero_y_corr,-(1.0,is_zero_y_corr)))
::STMT
FLOAT:502_strideh,502_padh,parsertemp193094,int645,502_Hf
LITERAL_FLOAT:0.0
+(+(-(*(502_strideh,parsertemp193094),*(int645,502_padh)),502_Hf),0.0)
::STMT
MATRIX:posSamples,posSampleMeans
FLOAT:int928,int149
LITERAL_FLOAT:1.0,7000.0
/(-(colSums(^(posSamples,int149)),*(7000.0,^(posSampleMeans,int928))),-(7000.0,1.0))
::STMT
MATRIX:R
LITERAL_FLOAT:0.0,32.0
&(>(R,0.0),>=(R,32.0))
::STMT
MATRIX:posSampleVariances,negSampleVariances
FLOAT:int366,int542,int961,int998
LITERAL_FLOAT:3.42951E11,2.0,3.37275E9
/(^(+(/(posSampleVariances,int961),/(negSampleVariances,int366)),2.0),+(/(^(posSampleVariances,int542),3.42951E11),/(^(negSampleVariances,int998),3.37275E9)))
::STMT
MATRIX:d,od,X,logisticD
LITERAL_FLOAT:2.0
+(d,*(2.0,%*%(t(X),*(logisticD,od))))
::STMT
MATRIX:_sbcvar78
LITERAL_FLOAT:10000.0
-(_sbcvar78,/(%*%(rowSums(_sbcvar78),colSums(_sbcvar78)),10000.0))
::STMT
MATRIX:is_zero_y_corr,is_one_y_corr,parsertemp171113
LITERAL_FLOAT:-0.36651292058166435
-(parsertemp171113,*(-0.36651292058166435,+(is_zero_y_corr,is_one_y_corr)))
::STMT
FLOAT:C,K
LITERAL_FLOAT:2.0
^(*(C,K),2.0)
::STMT
FLOAT:link_power
LITERAL_FLOAT:-1.0
*(-1.0,link_power)
::STMT
MATRIX:parsertemp44025,s,d
FLOAT:delta2
+(*(%*%(t(s),d),%*%(t(s),d)),*(%*%(t(d),d),-(delta2,%*%(parsertemp44025,s))))
::STMT
MATRIX:Y_prob,Y
LITERAL_FLOAT:0.0
*(<=(Y_prob,0.0),abs(Y))
::STMT
FLOAT:approx_sample_size
LITERAL_FLOAT:10.0
*(10.0,sqrt(approx_sample_size))
::STMT
MATRIX:is_row_in_samples,parsertemp77566
LITERAL_FLOAT:7075.0
-(7075.0,*(is_row_in_samples,parsertemp77566))
::STMT
MATRIX:dout1
FLOAT:192_beta2
LITERAL_FLOAT:1.0,2.0
*(-(1.0,192_beta2),^(colSums(dout1),2.0))
::STMT
FLOAT:parsertemp170147,parsertemp170145,p_CG,z
LITERAL_FLOAT:-1.0,2.0
/(-(*(*(z,p_CG),-1.0),sqrt(-(parsertemp170145,parsertemp170147))),sum(^(p_CG,2.0)))
::STMT
FLOAT:m2,float248,mu,wt
/(sqrt(/(*(m2,wt),-(wt,float248))),mu)
::STMT
FLOAT:x,parsertemp169816,float183
round(*(x,exp(*(float183,parsertemp169816))))
::STMT
MATRIX:scale_lambda,X
LITERAL_FLOAT:1.0E-7
+(%*%(t(X),X),diag(*(scale_lambda,1.0E-7)))
::STMT
MATRIX:cdf_min_distances
LITERAL_FLOAT:0.0,1.0
INT:int795,num_runs
<(cdf_min_distances,*(rand(int795,num_runs,0.0,1.0),cdf_min_distances))
::STMT
FLOAT:trust_delta_sq,p_CG,z,pp_CG
sqrt(-(*(*(z,p_CG),*(z,p_CG)),*(pp_CG,-(z,trust_delta_sq))))
::STMT
MATRIX:A
LITERAL_FLOAT:1.0E-4
<=(abs(-(A,t(A))),+(1.0E-4,abs(t(A))))
::STMT
MATRIX:linear_terms
LITERAL_FLOAT:1.0
+(1.0,exp(linear_terms))
::STMT
MATRIX:parsertemp220889,Y,parsertemp221025,parsertemp220891
FLOAT:int275,int359,int130
LITERAL_FLOAT:1.0
/(*(/(1.0,+(Y,int130)),+(diag(parsertemp221025),1.0)),sum(*(/(int275,parsertemp220891),+(parsertemp220889,int359))))
::STMT
FLOAT:int242,lratio_t
LITERAL_FLOAT:1.0,50.0
-(1.0,exp(/(*(lratio_t,int242),50.0)))
::STMT
MATRIX:Y_prob
FLOAT:int909
LITERAL_FLOAT:0.0,1.0
+(*(Y_prob,-(1.0,<=(Y_prob,int909))),<=(Y_prob,0.0))
::STMT
MATRIX:m_err
/(colSums(m_err),cast.FLOAT(rowSums(colSums(m_err))))
::STMT
LITERAL_FLOAT:1.0,1000.0
/(1000.0,-(1000.0,1.0))
::STMT
MATRIX:parsertemp389186,parsertemp389189
LITERAL_FLOAT:1.0,2.0
^(/(-(exp(parsertemp389186),1.0),+(exp(parsertemp389189),1.0)),2.0)
::STMT
MATRIX:logisticnew
LITERAL_FLOAT:1.0
-(1.0,logisticnew)
::STMT
MATRIX:W1_rand,stds,parsertemp397732
LITERAL_FLOAT:0.086386842558136
t(%*%(*(0.086386842558136,W1_rand),t(/(parsertemp397732,stds))))
::STMT
MATRIX:parsertemp183431,X
FLOAT:N
LITERAL_FLOAT:1.0
*(/(N,-(N,1.0)),%*%(t(/(parsertemp183431,N)),/(colSums(X),N)))
::STMT
MATRIX:s,w
t(+(w,s))
::STMT
FLOAT:norm_grad
LITERAL_FLOAT:0.1
*(0.1,norm_grad)
::STMT
MATRIX:I1
LITERAL_FLOAT:2.0
*(2.0,cast.FLOAT(I1))
::STMT
MATRIX:Nc
==(Nc,max(Nc))
::STMT
MATRIX:parsertemp175077,parsertemp175081,R1
LITERAL_FLOAT:1.0E-6
<(abs(-(R1,/(parsertemp175077,parsertemp175081))),1.0E-6)
::STMT
FLOAT:parsertemp386966
sum(cast.MATRIX(parsertemp386966))
::STMT
FLOAT:n_components,cov_param,n_features
+(+(cov_param,*(n_features,n_components)),n_components)
::STMT
LITERAL_FLOAT:0.282842712474619
0.282842712474619
::STMT
LITERAL_FLOAT:1.0,0.8
-(1.0,0.8)
::STMT
MATRIX:X,K
LITERAL_FLOAT:-1.0
*(*(K,-1.0),-(X,X))
::STMT
MATRIX:parsertemp397837,W4_rand
FLOAT:int375,int658
LITERAL_FLOAT:0.0873148795050037
%*%(*(0.0873148795050037,W4_rand),t(/(-(parsertemp397837,int658),+(parsertemp397837,int375))))
::STMT
MATRIX:parsertemp42200,parsertemp42201,F
FLOAT:int25,int329,meanX
LITERAL_FLOAT:1.0
*(/(F,-(sum(F),1.0)),-(+(-(parsertemp42200,parsertemp42201),/(int329,int25)),meanX))
::STMT
MATRIX:parsertemp170136
FLOAT:trust_delta_sq,p_CG,z
sqrt(-(*(*(z,p_CG),*(z,p_CG)),*(sum(parsertemp170136),-(z,trust_delta_sq))))
::STMT
MATRIX:parsertemp220853,parsertemp220854,betamax,Hneg,Hpos,beta
LITERAL_FLOAT:0.0,3.4011973816621555,1.0E20
*(>=(-(+(parsertemp220853,parsertemp220854),3.4011973816621555),0.0),!=(+(*(Hpos,betamax),*(Hneg,beta)),1.0E20))
::STMT
MATRIX:X,Y,K
-(*(K,-(X,X)),-(Y,Y))
::STMT
MATRIX:R
FLOAT:minSup
LITERAL_FLOAT:0.0
&(>(R,0.0),>=(R,minSup))
::STMT
MATRIX:std,rad,dtd
/(-(rad,std),dtd)
::STMT
MATRIX:lambda,B,S
LITERAL_FLOAT:2.0
sum(*(lambda,^(+(B,S),2.0)))
::STMT
MATRIX:R,S,parsertemp40218,parsertemp40215
FLOAT:level
-(+(R,rowSums(==(parsertemp40215,level))),rowSums(==(%*%(S,parsertemp40218),level)))
::STMT
LITERAL_FLOAT:1.0,2.0,2000.0
*(^(2000.0,2.0),-(2000.0,1.0))
::STMT
FLOAT:a,x
LITERAL_FLOAT:2.0
*(a,^(x,2.0))
::STMT
MATRIX:hubs
LITERAL_FLOAT:2.0
abs(sum(^(-(hubs,hubs),2.0)))
::STMT
MATRIX:is_unsafe,parsertemp1518
FLOAT:parsertemp1519,int493
LITERAL_FLOAT:0.0
sqrt(+(*(/(parsertemp1518,parsertemp1519),-(int493,is_unsafe)),<=(/(parsertemp1518,parsertemp1519),0.0)))
::STMT
MATRIX:diff,mask
LITERAL_FLOAT:0.0
*(diff,==(mask,0.0))
::STMT
MATRIX:parsertemp73634
LITERAL_FLOAT:16.0,1.0
+(*(parsertemp73634,16.0),1.0)
::STMT
LITERAL_FLOAT:0.16823164622761327
0.16823164622761327
::STMT
MATRIX:Y
LITERAL_FLOAT:0.0
+(rowSums(Y),==(rowSums(Y),0.0))
::STMT
MATRIX:simplex
LITERAL_FLOAT:4.0
/(-(rowSums(simplex),simplex),4.0)
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:parsertemp44015
cast.FLOAT(%*%(t(-(s,parsertemp44016)),-(s,*(parsertemp44015,d))))
::STMT
FLOAT:eta,s
LITERAL_FLOAT:-1.0
^(eta,*(s,-1.0))
::STMT
MATRIX:2814_t
FLOAT:parsertemp477829,parsertemp477814,2814_K,int626,2814_X,2814_Y,inp_x
*(cast.FLOAT(2814_t),+(*(-(2814_K,2814_Y),-(int626,parsertemp477814)),*(+(parsertemp477829,2814_Y),/(inp_x,2814_X))))
::STMT
MATRIX:X
LITERAL_FLOAT:0.0
-(0.0,t(X))
::STMT
MATRIX:parsertemp409789,parsertemp409798
FLOAT:int986
LITERAL_FLOAT:2.0
sum(^(+(*(parsertemp409789,int986),t(parsertemp409798)),2.0))
::STMT
MATRIX:scale_X,X,parsertemp115854
LITERAL_FLOAT:0.0
*(-(0.0,/(t(parsertemp115854),nrow(X))),scale_X)
::STMT
MATRIX:s,parsertemp44016,d
FLOAT:parsertemp44015,delta2
-(delta2,%*%(t(-(s,parsertemp44016)),-(s,*(parsertemp44015,d))))
::STMT
MATRIX:CFreqs1,present_domain_vals_mat,parsertemp27487
LITERAL_FLOAT:1.0
sum(*(-(%*%(present_domain_vals_mat,CFreqs1),1.0),%*%(present_domain_vals_mat,parsertemp27487)))
::STMT
MATRIX:W,X,H,parsertemp411101
FLOAT:eps
/(%*%(t(W),X),+(%*%(%*%(parsertemp411101,W),H),eps))
::STMT
MATRIX:classFeatureCounts
FLOAT:float640,int90
LITERAL_FLOAT:1.0
INT:int694,int227
/(+(classFeatureCounts,1.0),%*%(+(rowSums(classFeatureCounts),*(int90,float640)),rand(int227,int694,1.0,1.0)))
::STMT
MATRIX:tmp
FLOAT:parsertemp477715,X,x,Y,K
LITERAL_FLOAT:1.0
+(*(-(*(K,X),-(Y,Y)),-(1.0,/(parsertemp477715,X))),*(cast.FLOAT(tmp),/(-(x,X),-(X,X))))
::STMT
MATRIX:t,parsertemp171083
FLOAT:float208,float321
LITERAL_FLOAT:0.189269,1.432788
+(1.432788,*(sqrt(*(float321,parsertemp171083)),+(0.189269,*(t,float208))))
::STMT
LITERAL_FLOAT:0.05469029540078189
0.05469029540078189
::STMT
MATRIX:parsertemp22268,parsertemp22266
FLOAT:q,int631,int578
LITERAL_FLOAT:1.0,10000.0
/(sum(/(^(parsertemp22268,int578),/(parsertemp22266,int631))),*(10000.0,-(q,1.0)))
::STMT
MATRIX:b2,176_mask,W2,175_out
FLOAT:p
+(%*%(/(*(175_out,176_mask),p),W2),b2)
::STMT
FLOAT:window_size,q,parsertemp181039,parsertemp181046
LITERAL_FLOAT:1.0,2.0
*(*(2.0,window_size),-(1.0,/(-(q,parsertemp181039),*(window_size,parsertemp181046))))
::STMT
FLOAT:std,arch_coef,noise,a0
LITERAL_FLOAT:2.0
+(a0,*(arch_coef,^(*(noise,std),2.0)))