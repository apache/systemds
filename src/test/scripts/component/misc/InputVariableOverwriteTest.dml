#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

/*
 * This script tests the correct memory management with function
 * calls that have lists as input and output where the output 
 * list object overwrites the input list object since they are
 * bound to the same variable name and contain mutual 
 * elements.
 */

# initialize some variables
some_matrix = matrix(112, rows=2, cols=2)
some_list = list(some_matrix)

# update the list
some_list = some_function(some_list, 3)

# try to access matrix of list
print(toString(as.matrix(some_list[1])))


some_function = function(list[unknown] just_a_list, int l)
  return (list[unknown] also_a_list) {
  # add an element to list
  count = 0
  for (i in 1:l) {
      count += 1
  }
  other_matrix = matrix(count, rows=1, cols=3)

  also_a_list = append(just_a_list, other_matrix)
}
