#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

#get the transformation matrix (3x3) as an input
transformationMatrix = read($transMat)
#print(toString(transformationMatrix))

# get a matrix with the original image dimensions and the target dimensions (2x2)
# -----original width----original height
# -----target width------target height
dimensionMatrix = read($dimMat)

# print(toString(dimensionMatrix))

#orig_w = as.scalar(dimensionMatrix[1,1])
#orig_h = as.scalar(dimensionMatrix[1,2])
#out_w = as.scalar(dimensionMatrix[2,1])
#out_h = as.scalar(dimensionMatrix[2,2])
#print("orig_w: " + orig_w + "; orig_h: " + orig_h + "; out_w: " + out_w + "; out_h: " + out_h)
input = matrix(transformationMatrix, rows=3, cols=3)

builtin = TRUE
if(builtin){
    [zMat, isFillable] = img_transform_matrix(input, dimensionMatrix)
}else{
    [zMat, isFillable] = img_transform_test(input, dimensionMatrix)
}

# function for calculating the matrix which will be matrix multiplied with
# the image for matrix multiplication
isFillable = as.logical(as.scalar(isFillable))

#print(toString(zMat))
print(nrow(zMat))
print(ncol(zMat))
print("IsFillable: " + toString(isFillable))
write(zMat, $out_file)
