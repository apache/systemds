#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

testnum = $testnum;
misaligntype = $misaligntype;

if(misaligntype == 0) { # misaligned hosts
  if($rP) {
    X = rbind(read($in_X1), read($in_X2), read($in_X3), read($in_X4));
    Y = rbind(read($in_X1), read($in_X2), read($in_X4), read($in_X3)); # switched partition 3 and 4
  }
  else {
    X = cbind(read($in_X1), read($in_X2), read($in_X3), read($in_X4));
    Y = cbind(read($in_X1), read($in_X2), read($in_X4), read($in_X3)); # switched partition 3 and 4
  }
}
else if(misaligntype == 1) { # misaligned ranges
  if($rP) {
    X = rbind(read($in_X1), read($in_X2), read($in_X3), read($in_X4));
    Y = X[2:nrow(X), ];
    X = X[1:(nrow(X)-1), ];
  }
  else {
    X = cbind(read($in_X1), read($in_X2), read($in_X3), read($in_X4));
    Y = X[ , 2:ncol(X)];
    X = X[ , 1:(ncol(X)-1)];
  }
}

if(testnum == 0) { # MM
  if($rP) {
    X = t(X); # col partitioned federated X
  }
  else {
    Y = t(Y); # row partitioned federated Y
  }

  S = X %*% Y;
}
else if(testnum == 1) { # EW_MULT
  S = X * Y;
}
else if(testnum == 2) { # EW_PLUS
  S = X + Y;
}
else if(testnum == 3) { # EW_GREATER
  S = X > Y;
}
else if(testnum == 4) { # BIND
  if($rP)
    S = cbind(X, Y);
  else
    S = rbind(X, Y);
}

write(S, $out_S);
