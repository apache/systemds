#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


# Define UDFs
meanUser = function (matrix[double] A) return (double m) {
    m = sum(A)/nrow(A)
}

minMaxUser = function( matrix[double] M) return (double minVal, double maxVal) {
    minVal = min(M);
    maxVal = max(M);
}

# Recursive function: Calculate factorial
factorialUser = function(Integer n) return (Integer result) {
    if (n <= 1) {
        result = 1; # base case
    } else {
        result = n * factorialUser(n - 1); # recursive call
    }
}

# Main script
# 1. Create matrix and calculate statistics
M = rand(rows=4, cols=4, min=1, max=5); # 4x4 random matrix
avg = meanUser(M);
[min_val, max_val] = minMaxUser(M);

# 2. Call recursive function (factorial)
number = 5;
fact_result = factorialUser(number);

# 3. Print results
print("=== Matrix Statistics ===");
print("Average: " + avg);
print("Min: " + min_val + ", Max: " + max_val);

print("\n=== Recursive Function ===");
print("Factorial of " + number + ": " + fact_result);