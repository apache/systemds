#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

X = federated(addresses=list($in_X1, $in_X2),
  ranges=list(list(0, 0), list($rows, $cols), list($rows, 0), list($rows * 2, $cols)));

U = read($in_U);
V = read($in_V);

Z1 = t(t(U) %*% (X * (U %*% t(V))));

U = X[ , 1: ncol(U)]; # row partitioned federated U
while(FALSE) { }

Z2 = t(t(U) %*% (X * (U %*% t(V))));

X = t(X); # col partitioned X
while(FALSE) { }

Z3 = t(t(V) %*% (X * (V %*% t(U))));

while(FALSE) { }
# verify output is federated (creating fed_uak+ heavy hitter)
sZ1 = sum(Z1);
sZ2 = sum(Z2);
sZ3 = sum(Z3);
while(FALSE) { }
Z = as.matrix(sZ1 - sZ2 + sZ3);

write(Z, $out_Z);
