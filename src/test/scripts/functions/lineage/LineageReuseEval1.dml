#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

l2norm = function(Matrix[Double] X, Matrix[Double] y, Matrix[Double] B)
  return (Matrix[Double] loss)
{
  yhat = lmPredict(X=X, B=B, Ytest=y)
  loss = as.matrix(sum((y - yhat)^2));
}

X = rand(rows=300, cols=20, sparsity=1.0, seed=1);
y = rand(rows=300, cols=1, sparsity=1.0, seed=1);

N = 200;
Xtrain = X[1:N,];
ytrain = y[1:N,];
Xtest = X[(N+1):nrow(X),];
ytest = y[(N+1):nrow(X),];

params = list("intercept","reg", "tol"); #numValues = 3, 5, 7
paramRanges = list(seq(0,2), 10^seq(0,-4), 10^seq(-6,-12)); #3*5*7 = 105
[B1, opt] = gridSearch(X=Xtrain, y=ytrain, train="lm", predict="l2norm",
  numB=ncol(X)+1, params=params, paramValues=paramRanges, verbose=FALSE);
l1 = l2norm(Xtest, ytest, B1);

write(l1, $1, format="text");

