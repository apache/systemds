#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

e1 = matrix(1, rows=100, cols=10)
modelList = list(e1)
X = matrix(1, rows=200, cols=30)
Y = matrix(2, rows=200, cols=1)
X_val = matrix(3, rows=200, cols=30)
Y_val = matrix(4, rows=200, cols=1)

gradients = function(matrix[double] features,
                     matrix[double] labels,
                     list[unknown] hyperparams,
                     list[unknown] model)
            return (list[unknown] gradients) {
  gradients = model
  print(toString(as.matrix(gradients["worker_err"])))
}

aggregation = function(list[unknown] model,
                       list[unknown] gradients,
                       list[unknown] hyperparams)
              return (list[unknown] modelResult) {
  modelResult = model
}

e2 = matrix(2, rows=100, cols=10)
params = list(e2)
modelAvg = as.logical($1)

# Use paramserv function
modelList2 = paramserv(model=modelList, features=X, labels=Y, val_features=X_val, val_labels=Y_val, upd="gradients", agg="aggregation", mode="REMOTE_SPARK", utype="BSP", epochs=10, hyperparams=params, k=1, nBatches=1, modelAvg=modelAvg)

print(toString(as.matrix(modelList2[1])))