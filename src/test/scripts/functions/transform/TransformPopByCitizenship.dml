#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# read input frame 
F = read($1, data_type="frame", format="csv");
F[,3] = map(F[,3], "v -> UtilFunctions.toMillis(v, \"yyyy-mm-dd\")");

# one-hot encoding and pass-through
jspec = "{ids: true, dummycode: [1,2]}";
[X0, M] = transformencode(target=F, spec=jspec);
X = scale(X0[,1:(ncol(X0)-1)], TRUE, TRUE);
y = X0[,ncol(X0)]

# model training
B = lm(X=X, y=y, reg=1e-9, verbose=TRUE);

# compute and write-out R2
yhat = X %*% B;
R2 = 1 - sum((y-yhat)^2) / sum((y-sum(y)/nrow(y))^2);
write(R2, $2);
